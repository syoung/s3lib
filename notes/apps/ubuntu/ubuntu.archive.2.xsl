ubuntu.archive.2

<entry [Wed Mar  2 01:23:08 EST 2011] TRIED TO FIX SECURE GATEWAY LOGIN WITH JUNIPER NETWORK CONNECT>

PROBLEM

WHEN LAUNCHING JUNIPER NETWORK CONNECT IN CHROME, A WINDOW POPS UP WITH

'Service needs to be installed for the first time. Please enter the root/su password'

AFTER ENTERING THE PASSWORD FOR THE syoung USER, AUTHENTICATION IS REFUSED


UBUNTU JUNIPER NETWORK CONNECT
------------------------------
wget http://mad-scientist.net/junipernc


Luckily, the actual VPN software works fine on Ubuntu; it's the invocation script and especially the installer that are utterly broken. However, it's a relatively straightforward proposition to simply avoid using them; I've created a shell script which will allow you to connect and disconnect without needing to go through the broken scripting that comes with Network Connect. Here's how you use it.

CHECK VERSION

http://mad-scientist.us/juniper.html

~/.juniper_networks/network_connect/ncsvc --version
    Juniper Network Connect Server for Linux.
    Version         : 6.5
    Release Version : 6.5-0-Build15215
    Build Date/time : Feb  9 2010 17:20:38 
    Copyright 2001-2008 Juniper Networks


SCRIPT REQUIREMENTS

In order to install the package and to run the graphical VPN control utility, you will need a 32-bit Java runtime environment and a browser plugin. Personally I need this for other reasons as well and I've been using the Sun JRE, but I suppose others might work as well. I've heard that people have had issues with OpenJDK, but YMMV.


Applications --> Ubuntu Software Center --> Edit --> Software Sources --> Select all except 'Sources'

apt-get install sun-java6-bin sun-java6-jre sun-java6-jdk
    
    OK
    
apt-get install ia32-sun-java6-bin

    OK
    
    

SET SUN JAVA AS DEFAULT JAVA

update-java-alternatives -s java-6-sun

    update-alternatives: error: no alternatives for xulrunner-1.9-javaplugin.so.
    update-alternatives: error: alternative /usr/lib/jvm/java-6-sun/jre/lib/amd64/libnpjp2.so for mozilla-javaplugin.so not registered, not setting.
    update-alternatives: error: no alternatives for xulrunner-1.9-javaplugin.so.


CHECK IT WORKED:

java -version

    OK

java version "1.6.0_24"
    Java(TM) SE Runtime Environment (build 1.6.0_24-b07)
    Java HotSpot(TM) 64-Bit Server VM (build 19.1-b02, mixed mode)
    root@hplaptop:~# 


DOWNLOAD junipernc

wget -q -O /tmp/junipernc http://mad-scientist.net/junipernc
chmod 755 /tmp/junipernc
sudo cp /tmp/junipernc /usr/bin


RUN SCRIPT

junipernc


FOLLOW PROMPTS AND SELECT 32-BIT SUN JAVA IN BROWSER

    OK!
    
    CONNECTED TO MED VPN




NOTES
-----


FIX FOR JUNIPER  ** DIDN'T WORK ** 
http://david.dw-perspective.org.uk/da/index.php/computer-resources/juniper-networks-ssl-vpn-client-on-linux/#step1

1. CHECK JAVA VERSION >= 6
java -version

    java version "1.6.0_20"
    OpenJDK Runtime Environment (IcedTea6 1.9.7) (6b20-1.9.7-0ubuntu1)
    OpenJDK 64-Bit Server VM (build 19.0-b09, mixed mode)

2. CHECK FIREFOX HAS JAVA PLUGIN

    about:config
    
        OK!

    java.java_plugin_library_name;javaplugin_oji

3. GET OTHER PREREQUISITES

rpm -q openssl
The program 'rpm' is currently not installed.  You can install it by typing:
apt-get install rpm
root@hplaptop:/nethome/syoung/agua/Project1/Workflow1/jbrowse/ntHumChimp# apt-get install rpm


ALSO OLD C++ LIBRARY
You may also need to have older versions of the C++ library installed. On Fedora 10 I was advised that the package compat-libstdc++-296 is the one you need. (yum install compat-libstdc++-296) (thanks to Edward Mann for the tip).


MAKE SURE PASSWD IS UNLOCKED
http://www.cyberciti.biz/faq/linux-locking-an-account/

passwd -u root 
    passwd: password expiry information changed.


4. CONNECT WITH FIREFOX

CHECK VPN IS WORKING:

/sbin/route -n
cat /etc/resolv.conf

BEFORE

/sbin/route -n
    Kernel IP routing table
    Destination     Gateway         Genmask         Flags Metric Ref    Use Iface
    192.168.0.0     0.0.0.0         255.255.255.0   U     2      0        0 wlan0
    169.254.0.0     0.0.0.0         255.255.0.0     U     1000   0        0 wlan0
    0.0.0.0         192.168.0.1     0.0.0.0         UG    0      0        0 wlan0

cat /etc/resolv.conf
    # Generated by NetworkManager
    domain hsd1.fl.comcast.net.
    search hsd1.fl.comcast.net.
    nameserver 192.168.0.1


For me, that was all there was to it. I visited the URL I’d been given
for the VPN, supplied my username and password, and then pressed
“Network Connect”. It then ran the Java application, asked me a couple
of times to confirm that I was willing to run the application, and then
I was in. “/sbin/route -n” and “cat /etc/resolv.conf” showed me that
the VPN was up and running – things “just worked” from there.

The Java application will ask you for your root password (via an xterm)
the first time you run it; it then installs a setuid root binary in
~/.juniper_networks – yuk!



CHECK LOGS:

locate juniper
cd/home/syoung/.juniper_networks
/home/syoung/.juniper_networks/ncLinuxApp.jar
/home/syoung/.juniper_networks/network_connect
/home/syoung/.juniper_networks/tmp
/home/syoung/.juniper_networks/whitelist.txt
/home/syoung/.juniper_networks/network_connect/NC.jar
/home/syoung/.juniper_networks/network_connect/installNC.sh
/home/syoung/.juniper_networks/network_connect/installnc.log
/home/syoung/.juniper_networks/network_connect/libncui.so
/home/syoung/.juniper_networks/network_connect/missing.info
/home/syoung/.juniper_networks/network_connect/ncdiag
/home/syoung/.juniper_networks/network_connect/ncsvc
/home/syoung/.juniper_networks/network_connect/version.txt
/home/syoung/.juniper_networks/network_connect/xlaunchNC.sh
/home/syoung/.juniper_networks/tmp/META-INF





NOTES
-----


Introduction

If you need to log in to a place of work (or whatever) that has a
Juniper SSL VPN, and you’re using Linux, then this short guide tells
you how to get up and running.

The good news: there’s very little work to do. They’ve produced a Linux
client that should work on whatever distribution you’re using without
too much difficulty.

There are 4 steps – skip down to the first you that you need
help for!

Install the pre-requisite
software: Java 6 Runtime

Install the Java plugin into
Firefox

Make sure you have the other
pre-requisities

Visit the website in Firefox,
and you’re away!

I do not use Juniper any more, but was using Fedora (Linux) – but you will be able to use
these instructions to help you with Ubuntu, Mandrake, or whatever
you’re using. I am advised that this guide works succesfully on Fedora 12. This guide might be of help too if you’re using other
UNIX-like systems; but it does require support from Juniper themselves,
so I’m not completely sure.




1. Install the pre-requisite software: Java 6 Runtime

For Linux, I downloaded the self-extracing RPM, which can be
obtained from this page:
http://java.sun.com/javase/downloads/index.jsp.
I presently have the
Java 6 Update 1 runtime. Note that the free Java (OpenJDK/IcedTea) included in many Linux distributions may not work – you may need to get the official Sun Java.

Having downloaded the relevant file for my computer, I needed
to run it with administrative permissions. From a terminal, I ran this
command (Ubuntu users may need to use “sudo” instead of “su”):

% su -c "sh jre-6u1-linux-i586-rpm.bin"

2. Install the Java plugin into Firefox

Type in “about:plugins” into Firefox to see if you have the
plugin installed. If you don’t, you’ll need to create a symlink from
your Firefox plugins directory to the plugin. For me, it was as follows:

% cd ~/.mozilla/plugins/
% ln -s /usr/java/latest/plugin/i386/ns7/libjavaplugin_oji.so .
Try here if you need more help:
http://plugindoc.mozdev.org/faqs/java.html



 

3. Make sure you have the other pre-requisities

The Juniper application requires “xterm” when you run it the first time
in order to get root privileges. If it’s not there, it fails silently.
So, make sure you have xterm installed!

The application also requires the command “rpm -q openssl” to return
successfully. This might cause you a problem if you don’t have an RPM
based distribution. I don’t know if it fails without it, or if it’s
just a check that’s logged. You’ll find out!

You also require the “tun” driver in your kernel. You will almost
certainly have this unless you compiled your own kernel, in which case
you will know what you are doing anyway!

You may also need to have older versions of the C++ library installed. On Fedora 10 I was advised that the package compat-libstdc++-296 is the one you need. (yum install compat-libstdc++-296) (thanks to Edward Mann for the tip).

What else? I don’t know, as whatever else was needed I already had. The
client creates some files in .juniper_networks in your home directory,
and leaves log files in there – so you may be able to find out what
problems you are having from there.

4. Visit the website in Firefox,
and you’re away!

For me, that was all there was to it. I visited the URL I’d been given
for the VPN, supplied my username and password, and then pressed
“Network Connect”. It then ran the Java application, asked me a couple
of times to confirm that I was willing to run the application, and then
I was in. “/sbin/route -n” and “cat /etc/resolv.conf” showed me that
the VPN was up and running – things “just worked” from there.

The Java application will ask you for your root password (via an xterm)
the first time you run it; it then installs a setuid root binary in
~/.juniper_networks – yuk!






SOLUTION   **** DIDN'T WORK ****

1. ENABLE ROOT PASSWORD TEMPORARILY

sudo su
passwd **simple-password**


2. AUTHENTICATE WITH JUNIPER

USE **simple-password**


3. DISABLE ROOT PASSWORD

sudo passwd -l

BUT DIDN'T WORK...




NOTES
-----
http://ubuntuforums.org/showthread.php?t=232607&page=6

If you check the first message in the thread it says: "The installer wants to use su, not sudo. I just set my root password to something while I installed it, then reset it again later" Unfortunately it looks like the link I provided there has been changed so it no longer tells you how to do that. So, run this:

sudo passwd

then when it asks for a password type your password first. Then it will ask for ANOTHER password; this will be the root password. You can put whatever you like here, it's just temporary. Then it will ask you to confirm the password; type the root password again.

Now, when you start up network connector and it asks for the root password, enter the one you created. It should work. It should also not need to do this again since it's installed what it needs to.

So, you should undo your root password again (trust me: the one and only time one of my Linux systems was hacked was because I forgot to reset the root password and I had used an easily-guessable one; someone brute-forced it 5 months after I had changed it :-/) To unset it again use:

sudo passwd -l

to lock the root password again.


The reason changing the script doesn't help is because network connector unpacks the scripts again every time you start it. Annoying, to be sure.




All this does work for feisty. You need to make sure you have the packages as detailed in the begining:

Code:
apt-get install openssl libstdc++2.10-glibc2.2 sun-java5-bin sun-java5-jre
next do
Code:
ln -s /bin/true /bin/rpm
and I also had to change this
Code:
ln -s /usr/lib/libssl.so.0.9.8 /usr/lib/libssl.so
If you need any help try to PM me and I will be glad to help out as I can. Juniper has chosen to only support RPM based programming. If you want future mainline support get with your local Juniper rep and ask them to submit an ER to support DEB or you can contact myself 

best of luck

  

    
</entry>

<entry [Wed Mar  2 01:22:08 EST 2011] FIXED PROBLEM OF LAPTOP MONITOR DISAPPEARING AND THEN NO 1680x1050 FOR LCD>
    
1. REMOVED .config/monitors.xml FILE

rm -fr ~/.config/monitors.xml

2. (PLUG IN LCD) LOGOUT THEN BACK IN

BOTH LAPTOP AND LCD MONITORS WILL WORK BUT NO 1680x1050 RESOLUTION SETTING FOR LCD

3. REFRESH SETTINGS WITH xrandr
    
     xrandr
Screen 0: minimum 320 x 200, current 1600 x 1950, maximum 1694 x 2100
LVDS connected 1600x900+0+1050 (normal left inverted right x axis y axis) 344mm x 193mm
   1600x900       60.0*+
   1440x900       60.0  
   1280x768       60.0  
   1280x720       60.0  
   1024x768       60.0  
   1024x600       60.0  
   800x600        60.0  
   800x480        60.0  
   640x480        60.0  
DFP1 disconnected (normal left inverted right x axis y axis)
DFP2 disconnected (normal left inverted right x axis y axis)
DFP3 disconnected (normal left inverted right x axis y axis)
CRT1 connected 1400x1050+200+0 (normal left inverted right x axis y axis) 474mm x 296mm
   1680x1050      60.0 +
   1600x1200      60.0  
   1400x1050      60.0* 
   1280x1024      75.0     60.0  
   1440x900       59.9  
   1280x960       60.0  
   1280x800       60.0  
   1152x864       75.0  
   1280x768       60.0  
   1280x720       60.0  
   1024x768       75.0     70.1     60.0  
   1024x600       75.0     70.1     60.0  
   800x600        72.2     75.0     60.3     56.2  
   800x480        72.2     75.0     60.3     56.2  
   640x480        75.0     72.8     67.0     59.9  
  1400x1050 (0xa7)  122.6MHz
        h: width  1400 start 1488 end 1640 total 1880 skew    0 clock   65.2KHz
        v: height 1050 start 1051 end 1054 total 1087           clock   60.0Hz


1680x1050 SETTING IS NOW AVAILABLE!!!
    
    
</entry>


<entry [Wed Mar  2 01:21:08 EST 2011] HOW TO CHANGE SCREEN BRIGHTNESS ??>
    
INSTALL .fdi FILE "10-laptop-panel-mgmt-policy.fdi" TO HERE:

/usr/share/hal/fdi/policy/20thirdparty

    
DOWNLOADED FIRST TO HERE:

/home/syoung/software/ubuntu/10-laptop-panel-mgmt-policy.fdi


cp /home/syoung/software/ubuntu/10-laptop-panel-mgmt-policy.fdi

</entry>


<entry [Sun Feb 20 18:33:38 EST 2011] DISABLE ANNOYING KEYS>
   

xmodmap  - utility for modifying keymaps and pointer button mappings in X   
http://manpages.ubuntu.com/manpages/hardy/man1/xmodmap.1.html


CHANGE KEYS
-----------


GET 'PAGE DOWN' KEY KEYCODE:

    KeyRelease event, serial 36, synthetic NO, window 0x4a00001,
        root 0xc8, subw 0x0, time 84679787, (-194,-340), root:(1302,1425),
        state 0x0, keycode 117 (keysym 0xff56, Next), same_screen YES,
        XLookupString gives 0 bytes: 
        XFilterEvent returns: False


CHANGE '+' KEY TO 'PAGE DOWN' **** DIDN'T WORK ****

xmodmap -e 'keycode 86 = 117'







DISABLE KEYS
------------
    
1. START xev IN A TERMINAL

xev

2. HIT THE KEY TO BE DISABLED AND NOTE THE keycode IN THE xev WINDOW


HIT 'PLUS' KEY ABOVE 'ENTER'

    KeyRelease event, serial 36, synthetic NO, window 0x4e00001,
        root 0xc8, subw 0x0, time 84118908, (981,-342), root:(1067,1423),
        state 0x0, keycode 86 (keysym 0xffab, KP_Add), same_screen YES,
        XLookupString gives 1 bytes: (2b) "+"
        XFilterEvent returns: False


3. DISABLE THE KEY

xmodmap -e 'keycode 86 = NoSymbol'

    OK - SUCCESSFULLY DISABLES '+' KEY


That should disable the key. To make it permanent, put this command in the System, Preferences, Sessions, Startup Programs folder, Add.
    
    
INSERT DISABLE KEY COMMANDS INTO .bash_profile:

    xmodmap -e 'keycode 86 = 117'
    xmodmap -e 'keycode 82 = NoSymbol'
    xmodmap -e 'keycode 63 = NoSymbol'
    xmodmap -e 'keycode 106 = NoSymbol'
    xmodmap -e 'keycode 77 = NoSymbol'


KEY                     KEYCODE     DESTINATION
'-' KEY AT TOP RIGHT    82          NoSymbol
'*' KEY AT TOP RIGHT    63          NoSymbol
'/' KEY AT TOP RIGHT    106         NoSymbol
NUMLOCK AT TOP RIGHT    77          NoSymbole




NOTES
-----


http://ubuntuforums.org/showthread.php?t=842970

Re: disable key on keyboard
This works for symbols. Since it is merely sending a signal, I would expect it to work for this situation as well.

Run the following command to find the keycode value of the desired key:
Code:
xev
With the small box in foreground, press the sleep key and note the keycode value.
Then run this:
Code:
 xmodmap -e 'keycode number = NoSymbol'
 
 
    
</entry>

<entry [Sat Feb 19 04:45:30 EST 2011] SCRIPT TO AUTOMATICALLY START MYSQL ON BOOT>

EXISTING SCRIPT:
<!--
# MySQL Service                                                                          

description     "MySQL Server"
author          "Mario Limonciello <superm1@ubuntu.com>"

start on (net-device-up
          and local-filesystems
          and runlevel [2345])
stop on runlevel [016]

respawn

env HOME=/etc/mysql
umask 007

# The default of 5 seconds is too low for mysql which needs to flush buffers             
kill timeout 300

pre-start script
    #Sanity checks                                                                       
    [ -r $HOME/my.cnf ]
    [ -d /var/run/mysqld ] || install -m 755 -o mysql -g root -d /var/run/mysqld
    # Load AppArmor profile                                                              
    if aa-status --enabled 2>/dev/null; then
        apparmor_parser -r /etc/apparmor.d/usr.sbin.mysqld || true
    fi
    LC_ALL=C BLOCKSIZE= df --portability /var/lib/mysql/. | tail -n 1 | awk '{ exit ($4<\
4096) }'
end script

exec /usr/sbin/mysqld

post-start script
   for i in `seq 1 30` ; do
        /usr/bin/mysqladmin --defaults-file="${HOME}"/debian.cnf ping && {
            exec "${HOME}"/debian-start
            # should not reach this line                                                 
            exit 2
        }
        sleep 1
    done
    exit 1
end script

-->


AN0THER SCRIPT:

http://karlssonondatabases.blogspot.com/2010/12/ubunto-upstart-for-automatic-mysql.html


emacs /etc/init/mysql.conf
#
# MySQL Service for Recorded Future
#
description     "MySQL Server"
author          "Anders Karlsson, Recorded Future"

start on (net-device-up
          and local-filesystems
          and runlevel [2345])
stop on runlevel [016]

expect fork
kill timeout 2

# Set variables.
env MYSQL_ETC=/etc/mysql
env MYSQL_PIDFILE=/var/run/mysql.pid
env MYSQL_HOME=/usr/local/mysql5.5
env MYSQL_INSTANCE=my
umask 007

exec $MYSQL_HOME/bin/mysqld_safe --defaults-file=$MYSQL_ETC/$MYSQL_INSTANCE.cnf >> /tmp/x.out &

post-start script
    loop=600
# Wait for MySQL to start.
    while [ $loop -gt 0 ]; do
        if $MYSQL_HOME/bin/mysqladmin --defaults-file=$MYSQL_ETC/$MYSQL_INSTANCE.cnf ping; then
            break
        fi
        loop=$(($loop - 1))
        sleep 1
    done
    exit 0
end script

# Send a soft SIGTERM to MySQL before Upstart will kill it.
# A Sigterm to mysqld will cause a controlled shutdown.
pre-stop script
    exec kill -SIGTERM `cat $MYSQL_PIDFILE`

# Wait for MySQL to end. Flushing buffers and all.
    loop=600
    while [ $loop -gt 0 ]; do
# If the pidfile is found, then continue waiting.
        if [ -e $MYSQL_PIDFILE ] ; then
            loop=$((loop - 1))
            sleep 1
            continue
        fi
        break
    done
end script


To be honest, this is not what I create for all our MySQL servers. Instead I used this to create a chef template, chef is what we use for configuration management here (see http://www.opscode.com/ for more on chef), and here it is put to good ude to generate an Upstart script for MySQL. The above is just an example.

/Karlsson

    
</entry>

<entry [Thu Feb 17 21:42:23 EST 2011] FIXED ERROR: '(13)Permission denied: unable to connect to cgi daemon after multiple tries'>
    
PROBLEM:

unable to connect to cgi daemon


SOLUTION:

REPLACE mpm-worker CGI DAEMON WITH mpm-prefork CGI DAEMON USING synaptic


INSTALL apache-mpm-prefork (traditional model) 

UNINSTALL
apache-mpm-worker (threaded model)

RESTART APACHE
[Fri Feb 18 02:22:04 2011] [info] removed PID file /var/run/apache2.pid (pid=8632)
[Fri Feb 18 02:22:04 2011] [notice] caught SIGTERM, shutting down
[Fri Feb 18 02:22:10 2011] [notice] Apache/2.2.16 (Ubuntu) configured -- resuming normal operations
[Fri Feb 18 02:22:10 2011] [info] Server built: Nov 18 2010 21:17:43
[Fri Feb 18 02:22:10 2011] [debug] prefork.c(1013): AcceptMutex: sysvsem (default: sysvsem)
[Fri Feb 18 02:22:30 2011] [notice] SIGHUP received.  Attempting to restart
[Fri Feb 18 02:22:30 2011] [notice] Apache/2.2.16 (Ubuntu) configured -- resuming normal operations
[Fri Feb 18 02:22:30 2011] [info] Server built: Nov 18 2010 21:17:43
[Fri Feb 18 02:22:30 2011] [debug] prefork.c(1013): AcceptMutex: sysvsem (default: sysvsem)


NB: CAN INSTALL ON THE COMMAND LINE INSTEAD OF USING synaptic

http://www.debianhelp.co.uk/lamp.htm
By Default apache2 package you will be given the package apache2-mpm-worker, other packages are available:

apache2-mpm-worker 
The worker MPM provides a threaded implementation for Apache2. It is considerably faster than the traditional model, and is the recommended MPM.

apache2-mpm-prefork
This Multi-Processing Module (MPM) implements a non-threaded, pre-forking web server that handles requests in a manner similar to Apache 1.3. It is appropriate for sites that need to avoid threading for compatibility with non-thread-safe libraries. 

apt-get install apache2
apt-get install apache2-mpm-prefork



POSSIBILITY 5: FIX BROKEN PRIVILEGES WITH synaptic - ***** DIDN'T WORK
--------------------------------------------------
https://help.ubuntu.com/community/SynapticHowto

IN UBUNTU DESKTOP:

System -> Administration -> Synaptic Package Manager -> Edit --> Fix Broken Packages

/usr/sbin/apachectl -v
Server version: Apache/2.2.16 (Ubuntu)
Server built:   Nov 18 2010 21:18:34


FIX 'Could not get lock' ERROR WHEN RUNNING apt-get BY REMOVING LOCKFILE
------------------------------------------------------------------------

apt-get  install apache2

    E: Could not get lock /var/lib/dpkg/lock - open (11: Resource temporarily unavailable)
    E: Unable to lock the administration directory (/var/lib/dpkg/), is another process using it?

REMOVE LOCKFILE:

ll /var/lib/apt/lists/lock

    -rw-r----- 1 root root 0 2010-10-07 11:58 /var/lib/apt/lists/lock

sudo rm /var/lib/apt/lists/lock

    OK



POSSIBILITY 4: A FILE PATH PERMISSION PROBLEM FOR www-data USER ***** DIDN'T WORK
---------------------------------------------------------------

CHECKED WHOLE PATH

/home/syoung/0.5/cgi-bin/agua/0.5


*** DOESN'T WORK : SETTING THE cgi-bin DIRECTORY BACK TO THE DEFAULT DOESN'T FIX THE PROBLEM

The correct location to modify where apache looks for the cgi-bin directory in the default install is here:

/etc/apache2/sites-available/default

<!--
CHANGE THIS:

ScriptAlias /cgi-bin/ /var/www/cgi-bin/
<Directory "/var/www/cgi-bin">
    

TO THIS:

ScriptAlias /cgi-bin/ /usr/lib/cgi-bin/
<Directory "/usr/lib/cgi-bin">

-->


RESTARTED AND GOT SAME ERROR WITH /usr/lib/cgi-bin/test.cgi

[Fri Feb 18 01:11:03 2011] [debug] worker.c(1757): AcceptMutex: sysvsem (default: sysvsem)
[Fri Feb 18 01:11:17 2011] [error] [client 127.0.0.1] script not found or unable to stat: /usr/lib/cgi-bin/t
[Fri Feb 18 01:11:18 2011] [error] [client 127.0.0.1] (13)Permission denied: unable to connect to cgi daemon after multiple tries: /usr/lib/cgi-bin/test.cgi

SO REVERTED BACK TO /var/www/cgi-bin IN /etc/apache2/sites-available/default



POSSIBILITY 3: ENABLE cgi (AND DISABLE cgid)  **** DIDN'T WORK
--------------------------------------------

1. CHANGE APACHE LOG LEVEL TO debug

emacs /etc/apache2/apache2.conf

ADD:

LogLevel    debug


2. DISABLE cgid MODULE AND ENABLE cgi MODULE  **** FAILS HERE


a2dismod cgid
    
    Module cgid disabled.
    Run '/etc/init.d/apache2 restart' to activate new configuration!

/etc/init.d/apache2 restart

     * Restarting web server apache2    ... waiting
    OK 
 
sudo a2enmod cgi

	Your MPM seems to be threaded. Selecting cgid instead of cgi.
	Module cgid already enabled


Disable the cgi mod: 
sudo a2dismod cgi

Enable the cgid mod: 
sudo a2enmod cgid



POSSIBILITY 2: disable cgid by removing the symlinks IN mods-available ***** DIDN'T WORK 
----------------------------------------------------------------------
/etc/apache2/mods-available/ 

CHECK IF THEY'RE THERE

ll /etc/apache2/mods-available/  | grep cgi
    -rw-r--r-- 1 root root   69 2010-11-18 16:16 cgid.conf
    -rw-r--r-- 1 root root   60 2010-11-18 16:16 cgid.load
    -rw-r--r-- 1 root root   58 2010-11-18 16:16 cgi.load
    -rw-r--r-- 1 root root   89 2010-11-18 16:16 proxy_scgi.load


MOVE THEM:

mv /etc/apache2/mods-enabled/cgid.conf  /etc/apache2/mods-enabled/cgid.conf.bkp
mv /etc/apache2/mods-enabled/cgid.load /etc/apache2/mods-enabled/cgid.load.bkp 

RESTART APACHE:

/etc/init.d/apache2 restart 


BUT NOW APACHE SERVES UP workflow.cgi PAGE AS TEXT!!

SO REVERSED THE CHANGES:

mv /etc/apache2/mods-enabled/cgid.conf.bkp  /etc/apache2/mods-enabled/cgid.conf
mv /etc/apache2/mods-enabled/cgid.load.bkp /etc/apache2/mods-enabled/cgid.load 




POSSIBILITY 1: change the /var/log/httpd directory to 755   ***** DIDN'T WORK
---------------------------------------------------------

IT'S CURRENTLY 750:

ll /var/log/ | grep apache

    drwxr-x---  2 root              adm  4.0K 2011-02-13 07:36 apache2


CHANGE TO 755:

chmod 755 /var/log/apache2
ll /var/log/ | grep apache

    drwxr-xr-x  2 root              adm  4.0K 2011-02-13 07:36 apache2


RESTARTED APACHE BUT GOT SAME ERROR
/etc/init.d/apache2 restart



NOTES
-----


INFO ON a2enmod
---------------


a2enmod  is a script that enables the specified module within the apache2 configuration.  It does this
       by creating symlinks within /etc/apache2/mods-enabled.  Likewise, a2dismod disables a module by remov‐
       ing those symlinks.  It is not an error to enable a module which is already enabled, or to disable one
       which is already disabled.

EXAMPLES
              a2enmod imagemap
              a2dismod mime_magic

       Enables the mod_imagemap module, and disables the mod_mime_magic module.

FILES
       /etc/apache2/mods-available
              Directory with files giving information on available modules.

       /etc/apache2/mods-enabled
              Directory with links to the files in mods-available for enabled modules.




SET APACHE LOG LEVEL
--------------------

LogLevel directive

Syntax: LogLevel level
Default: LogLevel warn
Context: server config, virtual host
Status: core
Compatibility: LogLevel is only available in 1.3 or later.
Current documentation for this directive may be found here

LogLevel adjusts the verbosity of the messages recorded in the error logs (see ErrorLog directive). The following levels are available, in order of decreasing significance:

Level	Description	Example
emerg	Emergencies - system is unusable.	"Child cannot open lock file. Exiting"
alert	Action must be taken immediately.	"getpwuid: couldn't determine user name from uid"
crit	Critical Conditions.	"socket: Failed to get a socket, exiting child"
error	Error conditions.	"Premature end of script headers"
warn	Warning conditions.	"child process 1234 did not exit, sending another SIGHUP"
notice	Normal but significant condition.	"httpd: caught SIGBUS, attempting to dump core in ..."
info	Informational.	"Server seems busy, (you may need to increase StartServers, or Min/MaxSpareServers)..."
debug	Debug-level messages	"Opening config file ..."
When a particular level is specified, messages from all other levels of higher significance will be reported as well. E.g., when LogLevel info is specified, then messages with log levels of notice and warn will also be posted.

Using a level of at least crit is recommended.

For example:

LogLevel notice
NOTE: When logging to a regular file messages of the level notice cannot be suppressed and thus are always logged. However, this doesn't apply when logging is done using syslog.



INFO ON cgid MODULE
-------------------

http://forum.soft32.com/linux/solved-mpm-itk-Permission-denied-unable-connect-cgi-daemon-m-ftopict477646.html

By default debian apache2 seems to come w/ cgid enabled: 

http://httpd.apache.org/docs/2.0/mod/mod_cgid.html 

cgid's purpose is: 

On certain unix operating systems, forking a process 
from a multi-threaded server is a very expensive operation 
because the new process will replicate all the threads of 
the parent process. In order to avoid incurring this expense 
on each CGI invocation, mod_cgid creates an external daemon 
that is responsible for forking child processes to run CGI 
scripts. The main server communicates with this daemon using 
a unix domain socket. 

If I understand correctly, mpm-itk does forks not threads, so mod_cgid 
does nothing for it. 

I can imagine that it would be problematic for various mpm-itk processes 
to attempt to write to 

/var/run/apache2/cgisock.$PROCESS_ID_OF_APACHE_CGID_DAEMON 

The solution was to disable cgid by removing the symlinks to 
/etc/apache2/mods-available/ 

rm /etc/apache2/mods-enabled/cgid.conf 
rm /etc/apache2/mods-enabled/cgid.load 

and reloading apache: 

/etc/init.d/apache2 restart

I did the symlink removal by hand because a2dismod couldn't seem to 
separate mod_cgi (which we need for cgi scripts) from mod_cgid 


</entry>




