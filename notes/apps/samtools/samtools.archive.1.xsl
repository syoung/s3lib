samtools.archive.1

<entry [Tue 2011:05:24 12:44:05 EST] INSTALLED Bio::DB::Sam>

cpan Bio::DB::Sam

    OK

    Installing /usr/local/bin/bamToGBrowse.pl
      LDS/Bio-SamTools-1.28.tar.gz
      ./Build install  -- OK
    Warning (usually harmless): 'YAML' not installed, will not store persistent state



NB:USED THIS CPAN MIRROR LIST:

ftp://cpan-sj.viaverio.com/pub/CPAN/
ftp://mirrors.kernel.org/pub/CPAN/
ftp://mirrors.mednor.net/CPAN/
ftp://mirrors1.kernel.org/pub/CPAN/
ftp://mirrors2.kernel.org/pub/CPAN/
http://cpan-sj.viaverio.com/
http://cpan.binkerton.com/
http://cpan.develooper.com/
http://cpan.knowledgematters.net/
http://cpan.mirror.facebook.net/
http://cpan.schatt.com/
http://cpan.yimg.com/
http://mirrors.kernel.org/cpan/
http://mirrors.mednor.net/CPAN/
http://mirrors1.kernel.org/cpan/
http://mirrors2.kernel.org/cpan/
http://www.perl.com/CPAN/
rsync://mirrors.kernel.org/mirrors/CPAN/
rsync://mirrors1.kernel.org/mirrors/CPAN/
rsync://mirrors2.kernel.org/mirrors/CPAN/
ftp://mirror.atlantic.net/pub/CPAN/
ftp://mirrors.igsobe.com/cpan/
http://mirror.atlantic.net/pub/CPAN/
http://mirrors.igsobe.com/cpan/

    
ALSO INSTALLED YAML ON 8e:

cpanm install YAML


    
</entry>
<entry [Tue 2011:05:24 09:57:29 EST] INSTALLED Bio-SamTools 1.28>

/data/apps/samtools/biosamtools/1.28# perl Build.PL

    This module requires samtools 0.1.9 or higher (samtools.sourceforge.net).
    Please enter the location of the bam.h and compiled libbam.a files:
    
    /data/apps/samtools/0.1.16
    
    Found /data/apps/samtools/0.1.16/bam.h and /data/apps/samtools/0.1.16/libbam.a.
    Created MYMETA.yml and MYMETA.json
    Creating new 'Build' script for 'Bio-SamTools' version '1.28'


OR CPAN INSTALL:

cpan Bio::DB::Sam

PATH TO libbam.a AND bam.h:
/data/apps/samtools/0.1.16

    OK
    
    
    gcc -I/data/apps/samtools/0.1.16 -I/usr/lib/perl/5.10/CORE -DXS_VERSION="1.28" -DVERSION="1.28" -fPIC -D_IOLIB=2 -D_FILE_OFFSET_BITS=64 -Wformat=0 -c -D_REENTRANT -D_GNU_SOURCE -DDEBIAN -fno-strict-aliasing -pipe -fstack-protector -I/usr/local/include -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64 -O2 -g -o lib/Bio/DB/Sam.o lib/Bio/DB/Sam.c

    
    
</entry>

<entry [Tue 2011:05:24 09:56:11 EST] INSTALLED SAMTOOLS 0.1.16 ON 8e>

1. DOWNLOADED VERSION 0.1.16

2. EDITED MAKEFILE TO ADD -fPIC

Edit the Makefile in the Samtools distribution by adding
"-fPIC" to the CFLAGS line. It should look like this:

  CFLAGS=       -g -Wall -O2 -fPIC #-m64 #-arch ppc


3. ALSO EDIT Makefile AND CHANGE THIS:

DFLAGS=         -D_FILE_OFFSET_BITS=64 -D_USE_KNETFILE -D_CURSES_LIB=1

TO THIS:

DFLAGS=         -D_FILE_OFFSET_BITS=64 -D_USE_KNETFILE -D_CURSES_LIB=0

4. DO MAKE CLEAN

make clean


5. INSTALL NCURSES

sudo apt-get install libncurses5-dev


6. DO MAKE

make

    OK
    



    
</entry>
<entry [Mon Nov 22 09:48:10 EST 2010] VIEW BAM FILE>


samtools view -X aln.bam | less -S

-X 	Show string FLAG



For more information:

samtools view -?



</entry>



<entry [Tue Oct 19 18:57:14 EDT 2010] SAM TAGS>


What are TAGs?
TAGs are optional fields on a SAM/BAM Alignment. A TAG is comprised of a two character TAG key, they type of the value, and the value:

[A-Za-z][A-za-z]:[AifZH]:.*

The types, A, i, f, Z, H are used to indicate the type of value stored in the tag.

		Type	Description
		A	character
		i	signed 32-bit integer
		f	single-precision float
		Z	string
		H	hex string

There are a set of predefined tags that are general used in Alignments. They are documented in the SAM Specification.

Predefined tags have been specified for storing information about the read or alignment. Examples of things stored in predefined tags:

Previous settings for various fields if they have been updated due to additional processing
Mappings from the alignment to Header values, used to match to a read group or program.

Additional information which may already be in the header like library and platform.

A user can also use any additional tags to store any information they want. TAGs starting with X, Y, or Z are reserved to be user defined.



Examples:

XT:A:U  - user defined tag called XT.  It holds a character.  The value associated with this tag is 'U'.
NM:i:2  - predefined tag NM means: Edit distance to the reference (number of changes necessary to make this equal the reference, excluding clipping)




SAM TAGS:

AM	i	Smaller single-end mapping quality of the two reads in a pair
AS	i	Alignment score generated by aligner
CC	Z	Reference name of the next hit; = for the same chromosome
CM	i	Number of color differences 2
CP	i	Leftmost coordinate of the next hit
CQ	Z	Color read quality on the same strand as the reference; encoded in the same way as <QUAL> 4
CS	Z	Color read sequence on the same strand as the reference 4
E2	Z	The 2nd most likely base base call.
H0	i	Number of perfect hits 2
H1	i	Number of 1-difference hits (an in/del counted as a difference) 2
H2	i	Number of 2-difference hits (an in/del counted as a difference) 2
HI	i	"Query hit index, indicating the alignment record is the i-th one stored in SAM"
IH	i	Number of stored alignments in SAM that contains the query in the current record
LB	Z	Library. Value should be consistent with the header RG-LB tag if @RG is present.
MD	Z	"String for mismatching positions in the format of [0-9]+(([ACGTN]|\^[ACGTN]+)[0-9]+)* 2,3"
MF	i	MAQ pair flag (MAQ specific)
MQ	i	The mapping quality score the mate alignment
NH	i	Number of reported alignments that contains the query in the current record
NM	i	Number of nucleotide differences (i.e. edit distance to the reference sequence) 2
OQ	Z	Original base quality. Encoded in the same wasy as QUAL.
PG	Z	Program that generates the alignment; match the header PG-ID tag if @PG is present.
PQ	i	"Phred likelihood of the read pair, conditional on both the mapping locations being correct 5"
PU	Z	Platform unit. Value should be consistent with the header RG-PU tag if @RG is present.
Q2	Z	Phred quality for the mate (encoding is the same as <QUAL>).
R2	Z	Sequence of the mate.
RG	Z	Read group. Value matches the header RG-ID tag if @RG is present in the header.
S2	H	Encoded base probabilities for the other 3 bases for the mate-pair read. Same encoding as SQ 1
SA	M	TAGS:
SM	i	Mapping quality if the read is mapped as a single read rather than as a read pair
SQ	H	Encoded base probabilities for the suboptimal bases at each position (deprecated by E2 and U2) 1
Ta	g	Type Description
U2	Z	Phred-scaled log-lk ratio of the 2nd to the 3rd most likely base calls. Encoding is the same as QUAL.
UQ	i	"Phred likelihood of the read sequence, conditional on the mapping location being correct 5"
X?	?	Reserved fields for end users (together with Y? and Z?)



What Information is in the SAM/BAM Header

The SAM/BAM header is not required, but if it is there, it contains generic information for the SAM/BAM file.
The header may contain the version information for the SAM/BAM file and information regarding whether or not and how the file is sorted.
It also contains supplemental information for alignment records like information about the reference sequences, the processing that was used to generate the various reads in the file, and the programs that have been used to process the different reads. The alignment records may then point to this supplemental information identifying which ones the specific alignment is associated with.
For example, a group of reads in the SAM/BAM file may all be assigned to the same reference sequence. Rather than every alignment containing information about the reference sequence, this information is put in the header, and the alignment "points" to the appropriate reference sequence in the header via the RNAME field. The header contains generic information about this reference like its length.

The SAM/BAM Header also may contain comments which are free-form text lines that can contain any information.

Header lines start with an '@'.

Example SAM

Example Header Lines
@HD	VN:1.0	SO:coordinate
@SQ	SN:1	LN:249250621	AS:NCBI37	UR:file:/data/local/ref/GATK/human_g1k_v37.fasta	M5:1b22b98cdeb4a9304cb5d48026a85128
@SQ	SN:2	LN:243199373	AS:NCBI37	UR:file:/data/local/ref/GATK/human_g1k_v37.fasta	M5:a0d9851da00400dec1098a9255ac712e
@SQ	SN:3	LN:198022430	AS:NCBI37	UR:file:/data/local/ref/GATK/human_g1k_v37.fasta	M5:fdfd811849cc2fadebc929bb925902e5
@RG	ID:UM0098:1	PL:ILLUMINA	PU:HWUSI-EAS1707-615LHAAXX-L001	LB:80	DT:2010-05-05T20:00:00-0400	SM:SD37743	CN:UMCORE
@RG	ID:UM0098:2	PL:ILLUMINA	PU:HWUSI-EAS1707-615LHAAXX-L002	LB:80	DT:2010-05-05T20:00:00-0400	SM:SD37743	CN:UMCORE
@PG	ID:bwa	VN:0.5.4
@PG	ID:GATK TableRecalibration	VN:1.0.3471	CL:Covariates=[ReadGroupCovariate, QualityScoreCovariate, CycleCovariate, DinucCovariate, TileCovariate], default_read_group=null, default_platform=null, force_read_group=null, force_platform=null, solid_recal_mode=SET_Q_ZERO, window_size_nqs=5, homopolymer_nback=7, exception_if_no_tile=false, ignore_nocall_colorspace=false, pQ=5, maxQ=40, smoothing=1
In the alignment examples below, you will see that the 2nd alignment maps back to the RG line with ID UM0098.1, and all of the alignments point back to the SQ line with SN:1 because their RNAME is 1.

Example Alignments
This is what the alignment section of a SAM file looks like:
1:497:R:-272+13M17D24M	113	1	497	37	37M	15	100338662	0	CGGGTCTGACCTGAGGAGAACTGTGCTCCGCCTTCAG	0;==-==9;>>>>>=>>>>>>>>>>>=>>>>>>>>>>	XT:A:U	NM:i:0	SM:i:37	AM:i:0	X0:i:1	X1:i:0	XM:i:0	XO:i:0	XG:i:0	MD:Z:37
19:20389:F:275+18M2D19M	99	1	17644	0	37M	=	17919	314	TATGACTGCTAATAATACCTACACATGTTAGAACCAT	>>>>>>>>>>>>>>>>>>>><<>>><<>>4::>>:<9	RG:Z:UM0098:1	XT:A:R	NM:i:0	SM:i:0	AM:i:0	X0:i:4	X1:i:0	XM:i:0	XO:i:0	XG:i:0	MD:Z:37
19:20389:F:275+18M2D19M	147	1	17919	0	18M2D19M	=	17644	-314	GTAGTACCAACTGTAAGTCCTTATCTTCATACTTTGT	;44999;499<8<8<<<8<<><<<<><7<;<<<>><<	XT:A:R	NM:i:2	SM:i:0	AM:i:0	X0:i:4	X1:i:0	XM:i:0	XO:i:1	XG:i:2	MD:Z:18^CA19
9:21597+10M2I25M:R:-209	83	1	21678	0	8M2I27M	=	21469	-244	CACCACATCACATATACCAAGCCTGGCTGTGTCTTCT	<;9<<5><<<<><<<>><<><>><9>><>>>9>>><>	XT:A:R	NM:i:2	SM:i:0	AM:i:0	X0:i:5	X1:i:0	XM:i:0	XO:i:1	XG:i:2	MD:Z:35
In this example, the fields are:
Field	Alignment 1	Alignment 2	Alignment 3	Alignment 4
QNAME	1:497:R:-272+13M17D24M	19:20389:F:275+18M2D19M	19:20389:F:275+18M2D19M	9:21597+10M2I25M:R:-209
FLAG	113	99	147	83
RNAME	1	1	1	1
POS	497	17644	17919	21678
MAPQ	37	0	0	0
CIGAR	37M	37M	18M2D19M	8M2I27M
MRNM/RNEXT	15	=	=	=
MPOS/PNEXT	100338662	17919	17644	21469
ISIZE/TLEN	0	314
SEQ	CGGGTCTGACCTGAGGAGAACTGTGCTCCGCCTTCAG	TATGACTGCTAATAATACCTACACATGTTAGAACCAT	GTAGTACCAACTGTAAGTCCTTATCTTCATACTTTGT	CACCACATCACATATACCAAGCCTGGCTGTGTCTTCT
QUAL	0;==-==9;>>>>>=>>>>>>>>>>>=>>>>>>>>>>	>>>>>>>>>>>>>>>>>>>><<>>><<>>4::>>:<9	;44999;499<8<8<<<8<<><<<<><7<;<<<>><<	<;9<<5><<<<><<<>><<><>><9>><>>>9>>><>
TAGs	XT:A:U	NM:i:0	SM:i:37	AM:i:0	X0:i:1	X1:i:0	XM:i:0	XO:i:0 XG:i:0	MD:Z:37	RG:Z:UM0098:1	XT:A:R	NM:i:0	SM:i:0	AM:i:0	X0:i:4 X1:i:0	XM:i:0	XO:i:0	XG:i:0	MD:Z:37	XT:A:R	NM:i:2	SM:i:0	AM:i:0	X0:i:4	X1:i:0	XM:i:0 XO:i:1	XG:i:2	MD:Z:18^CA19	XT:A:R	NM:i:2	SM:i:0	AM:i:0	X0:i:5	X1:i:0	XM:i:0	XO:i:1 XG:i:2	MD:Z:35

You should now be a SAM expert :-)




</entry>



<entry [Tue Oct 19 18:26:47 EDT 2010] USE SAM LIBRARY TO PRINT READ COUNTS FROM *.bam FILE IN REGULAR SEGMENTS>




Read & Write BAM/SAM Library

The library is found in pipeline/bam, and is called libbam.a.
This library is dependent on two other libraries:

libcsg/libcsg.a
thirdParty/samtools/libbam.a

Be sure to include them all in the proper order:

<path to base pipeline directory>/libbam.a <path to base pipeline directory>/libcsg/libcsg.a <path to base pipeline directory>/thirdParty/samtools/libbam.a



Read Only One Reference/Chromosome from Sorted/Indexed BAM Files

This example reads in the inputFilename bam file and writes it back out section by section to the specified outputFilename, starting with section -1. It also prints a count of the number of records in each section.


#include "SamFile.h"
#include "SamValidation.h"
 
int ReadIndexedBam(const char* inputFilename,
                   const char* outputFilename,
                   const char* indexFilename)
{
   // Open the input file for reading.
   SamFile samIn;
   samIn.OpenForRead(inputFilename);
 
   // Open the bam index file for reading.
   samIn.ReadBamIndex(indexFilename);
 
   // Open the output file for writing.
   SamFile samOut;
   samOut.OpenForWrite(outputFilename);
 
   // Read the sam header.
   SamFileHeader samHeader;
   samIn.ReadHeader(samHeader);
 
   // Write the sam header.
   samOut.WriteHeader(samHeader);
 
   SamRecord samRecord;
   SamValidationErrors samInvalidErrors;
 
   // Loop through each Reference.
   for(int i = -1; i < 23; i++)
   {
      int numSectionRecords = 0;
      samIn.SetReadSection(i);

      // Keep reading records until they aren't more.
      while(samIn.ReadRecord(samHeader, samRecord))
      {
         numSectionRecords++;

         // Successfully read a record from the file, so write it.
         samOut.WriteRecord(samHeader, samRecord);
      }
 
      std::cout << "Reference ID " << i << " has " << numSectionRecords 
                << " records" << std::endl;
   }
 
   std::cout << "Number of records = " << samIn.GetCurrentRecordCount() << std::endl;
 
   return(0);
}




Sam Library Usage Examples
http://genome.sph.umich.edu/wiki/Sam_Library_Usage_Examples

1 Usage Examples
1.1 Simple Read/Write SAM/BAM files
1.2 Read Only One Reference/Chromosome from Sorted/Indexed BAM Files
1.3 Read a Specified Region from a Sorted & Indexed BAM File
1.4 Validate SAM/BAM Files Continuing Processing After Allowed Errors
Usage Examples

This page contains examples on how to use the SAM/BAM Library.
Simple Read/Write SAM/BAM files

The following example reads in a sam/bam file and writes it out as a sam/bam file. The file format of the input sam/bam is determined by the SamFile class based on reading the type from the file. The file format of the output sam/bam file is determined by the SamFile class based on the extension of the output file. A ".bam" extension indicates a BAM file. All other extensions indicate SAM files.
#include "SamFile.h"
#include "SamValidation.h"
 
int main(int argc, char ** argv)
{
   // Check for the appropriate number of arguments.
   if(argc != 3)
   {
      printf("./bam <inputFile> <outputFile.sam/bam>\n");
      exit(-1);
   }
 
   // Open the input file for reading.
   SamFile samIn;
   samIn.OpenForRead(argv[1]);
 
   // Open the output file for writing.
   SamFile samOut;
   samOut.OpenForWrite(argv[2]);
 
   // Read the sam header.
   SamFileHeader samHeader;
   samIn.ReadHeader(samHeader);
 
   // Write the sam header.
   samOut.WriteHeader(samHeader);
 
   SamRecord samRecord;
   SamValidationErrors samInvalidErrors;
 
    // Set returnStatus to success.  It will be changed
    // to the failure reason if any of the writes fail.
    SamStatus::Status returnStatus = SamStatus::SUCCESS;
 
    // Keep reading records until ReadRecord returns false.
    while(samIn.ReadRecord(samHeader, samRecord))
    {
        // Successfully read a record from the file, so write it.
        samOut.WriteRecord(samHeader, samRecord);
    }
 
    std::cout << std::endl << "Number of records read = " << 
        samIn.GetCurrentRecordCount() << std::endl;
    std::cout << "Number of records written = " << 
        samOut.GetCurrentRecordCount() << std::endl;
 
    // Return success since a failure would have thrown
    // an exception.
    return(returnStatus);
 }

Read Only One Reference/Chromosome from Sorted/Indexed BAM Files

This example reads in the inputFilename bam file and writes it back out section by section to the specified outputFilename, starting with section -1. It also prints a count of the number of records in each section.
#include "SamFile.h"
#include "SamValidation.h"
 
int ReadIndexedBam(const char* inputFilename,
                   const char* outputFilename,
                   const char* indexFilename)
{
   // Open the input file for reading.
   SamFile samIn;
   samIn.OpenForRead(inputFilename);
 
   // Open the bam index file for reading.
   samIn.ReadBamIndex(indexFilename);
 
   // Open the output file for writing.
   SamFile samOut;
   samOut.OpenForWrite(outputFilename);
 
   // Read the sam header.
   SamFileHeader samHeader;
   samIn.ReadHeader(samHeader);
 
   // Write the sam header.
   samOut.WriteHeader(samHeader);
 
   SamRecord samRecord;
   SamValidationErrors samInvalidErrors;
 
   // Loop through each Reference.
   for(int i = -1; i < 23; i++)
   {
      int numSectionRecords = 0;
      samIn.SetReadSection(i);
      // Keep reading records until they aren't more.
      while(samIn.ReadRecord(samHeader, samRecord))
      {
         numSectionRecords++;
         // Successfully read a record from the file, so write it.
         samOut.WriteRecord(samHeader, samRecord);
      }
 
      std::cout << "Reference ID " << i << " has " << numSectionRecords 
                << " records" << std::endl;
   }
 
   std::cout << "Number of records = " << samIn.GetCurrentRecordCount() << std::endl;
 
   return(0);
}

Read a Specified Region from a Sorted & Indexed BAM File

This example is found in pipeline/bam/WriteRegion.cpp and is part of the bam executable.

#include "SamFile.h"
#include "Parameters.h"
#include "BgzfFileType.h"
 
int writeRegion(int argc, char **argv)
{
    // Extract command line arguments.
    static const int UNSPECIFIED_INT = -1;
    String inFile = "";
    String outFile = "";
    String indexFile = "";
    String refName = "";
    int refID = UNSPECIFIED_INT;
    int start = UNSPECIFIED_INT;
    int end = UNSPECIFIED_INT;
    bool noeof = false;
 
    ParameterList inputParameters;
    BEGIN_LONG_PARAMETERS(longParameterList)
        LONG_STRINGPARAMETER("in", &inFile)
        LONG_STRINGPARAMETER("out", &outFile)
        LONG_STRINGPARAMETER("bamIndex", &indexFile)
        LONG_STRINGPARAMETER("refName", &refName)
        LONG_INTPARAMETER("refID", &refID)
        LONG_INTPARAMETER("start", &start)
        LONG_INTPARAMETER("end", &end)
        LONG_PARAMETER("noeof", &noeof)
        END_LONG_PARAMETERS();
 
    inputParameters.Add(new LongParameters ("Input Parameters", 
                                            longParameterList));
 
    inputParameters.Read(argc-1, &(argv[1]));
 
    inputParameters.Status();
 
    // If no eof block is required for a bgzf file, set the bgzf file type to 
    // not look for it.
    if(noeof)
    {
        // Set that the eof block is not required.
        BgzfFileType::setRequireEofBlock(false);
    }
 
    // Check to see if the in file was specified, if not, report an error.
    if(inFile == "")
    {
        writeRegionUsage();
        // mandatory argument was not specified.
        std::cerr << "Missing mandatory argument: --in" << std::endl;
        return(-1);
    }
    if(outFile == "")
    {
        writeRegionUsage();
        // mandatory argument was not specified.
        std::cerr << "Missing mandatory argument: --out" << std::endl;
        return(-1);
    }
 
    if(indexFile == "")
    {
        // In file was not specified, so set it to the in file
        // + ".bai"
        indexFile = inFile + ".bai";
    }
 
    if(refID != -1 && refName.Length() != 0)
    {
        std::cerr << "Can't specify both refID and refName" << std::endl;
        return(-1);
    }
 
    SamFile samIn;
    // Open the file for reading.   
    samIn.OpenForRead(inFile);
 
    // If refName is set, use that.
    if(refName.Length() != 0)
    {
        // Use Reference Name.
        samIn.SetReadSection(refName.c_str(), start, end);
    }
    else
    {
        // Use Reference ID
        samIn.SetReadSection(refID, start, end);
    }
 
    // Open the output file for writing.
    SamFile samOut;
    samOut.OpenForWrite(outFile);
 
    // Open the bam index file for reading.
    samIn.ReadBamIndex(indexFile);
 
    // Read & write the sam header.
    SamFileHeader samHeader;
    samIn.ReadHeader(samHeader);
    samOut.WriteHeader(samHeader);
 
    // Read the sam records.
    SamRecord samRecord;
    // Track the status.
    int numSectionRecords = 0;
 
    // Set returnStatus to success. 
    SamStatus::Status returnStatus = SamStatus::SUCCESS;
 
    // Keep reading records until they aren't anymore.
    while(samIn.ReadRecord(samHeader, samRecord))
    {
        // Successfully read a record from the file, so write it.
        samOut.WriteRecord(samHeader, samRecord);
        ++numSectionRecords;
    }
 
    std::cout << "Wrote " << outFile << " with " << numSectionRecords << " records.\n";
    return(returnStatus);
}

Validate SAM/BAM Files Continuing Processing After Allowed Errors

This example demonstrates calling validation on a SAM/BAM file. It also demonstrates a more complicated read loop that continues until a configurable number of errors are hit.
#include "SamFile.h"
#include "SamValidation.h"
 
int Validate(String inFile, int quitAfterErrorNum, int maxReportedErrors, SamFile::SortedType sortType)
{
   // Check to see if the in file was specified.  If it wasn't this is an error.
   if(inFile == "")
   {
      // In file was not specified but it is mandatory.
      std::cerr << "--in is a mandatory argument for validate, "
                << "but was not specified" << std::endl;
      return(-1);
   }
 
   SamFile samIn(ErrorHandler::RETURN);
   // Open the file for reading.   
   if(!samIn.OpenForRead(inFile))
   {
      fprintf(stderr, "%s\n", samIn.GetStatusMessage());
      return(samIn.GetStatus());
   }
 
   // Set the sorting validation type.
   samIn.setSortedValidation(sortType);
 
   // Read the sam header.
   SamFileHeader samHeader;
   if(!samIn.ReadHeader(samHeader))
   {
      fprintf(stderr, "%s\n", samIn.GetStatusMessage());
      return(samIn.GetStatus());
   }
 
   // Read the sam records.
   SamRecord samRecord;
 
   // Track the status.
   SamStatus::Status status = SamStatus::SUCCESS;
 
   // Keep reading records until the end of the file is reached.
   int numValidRecords = 0;
   int numInvalidRecords = 0;
   int numErrorRecords = 0;
   int numRecords = 0;
   int numReportedErrors = 0;
   int totalErrorRecords = 0;
 
   SamValidationErrors invalidSamErrors;
 
   // Keep reading records from the file until SamFile::ReadRecord
   // indicates to stop (returns false).
   while( (samIn.ReadRecord(samHeader, samRecord))||
          (SamStatus::isContinuableStatus(samIn.GetStatus()) &&
           ( (quitAfterErrorNum < 0) ||
             (numErrorRecords < quitAfterErrorNum) )) )
   {
      ++numRecords;
      if(samIn.GetStatus() == SamStatus::SUCCESS)
      {
         // Successfully set the record, so check to see if it is valid.
         // Clear any errors in the list.
         invalidSamErrors.clear();
         if(!SamValidator::isValid(samHeader, samRecord, invalidSamErrors))
         {
            // The record is not valid.
            ++numInvalidRecords;
            ++totalErrorRecords;
            if(numReportedErrors < maxReportedErrors)
            {
               std::cout << "Record " << numRecords << std::endl
                         << invalidSamErrors << std::endl;
               numReportedErrors += invalidSamErrors.numErrors();
               status = SamStatus::INVALID;
            }
         }
         else
         {
            // Valid record, so increment the counter.
            ++numValidRecords;
         }
      }
      else
      {
         // Error reading the record.
         ++numErrorRecords;
         if(numReportedErrors < maxReportedErrors)
         {
            // report error.
            std::cout << "Record " << numRecords << std::endl
                      << samIn.GetStatusMessage() << std::endl
                      << std::endl;
            ++numReportedErrors;
            ++totalErrorRecords;
            status = samIn.GetStatus();
         }
      }
   }
 
   if(samIn.GetStatus() != SamStatus::NO_MORE_RECS)
   {
      ++numErrorRecords;
      // The last read call had a failure, so report it.
      if(numReportedErrors < maxReportedErrors)
      {
         std::cout << "Record " << numRecords << ": ";
         std::cout << std::endl << samIn.GetStatusMessage() << std::endl;
      }
      status = samIn.GetStatus();
   }
 
   printf("\nNumber of records read = %d\n", numRecords);
   printf("Number of valid records = %d\n", numValidRecords);
   printf("Returning: %d (%s)\n", status, SamStatus::getStatusString(status));
   return(status);
}




</entry>



<entry [Mon Jun 14 19:48:53 EDT 2010] TWO WAYS TO CALL SNPS: WITH  '-t FAI SAM.gz' FILES OR WITH JUST 'BAM' FILE>




samtools tview ex1.bam ex1.fa         # view alignment
samtools pileup -cf ex1.fa ex1.bam    # pileup and consensus
samtools pileup -cf ex1.fa -t ex1.fa.fai ex1.sam.gz


BOWTIE EXAMPLE (OK)
-------------------


CALL SNPS WITH .sam.gz FILE

cd /nethome/bioinfo/apps/samtools/0.1.6/examples

/nethome/bioinfo/apps/samtools/0.1.6/samtools  pileup -v -cf ex1.fa -t ex1.fa.fai ex1.sam.gz


<!--
	
	[sam_header_read2] 2 sequences loaded.
	seq1    285     T       W       34      34      59      21      ,..,..,,,.,.....aa^hA^kA^ja     <<<<3<<=<<<<<1<;<<;=<
	seq1    287     C       M       43      43      59      24      ,..,..,,,.,.....aaAAa^~A^~.^~A  <9;<7<<=<<<<<2<<<<<=<+<+
	seq1    288     A       R       21      21      59      26      ,$.$.,..,,,.,..+5CATAG..+5CATAG.+5CATAGggGGgG.G^~.^~.    <<<<9<<;<<<<<<<<8-<=:+<+;<
	seq1    288     *       */+CATAG        297     324     59      26      *       +CATAG  23      0
	seq1    548     C       M       140     140     60      39      ,.,a,.aa,A,.aaAa..a.aaa..aaaA..A,,.aAn^~,        ;<<<<;<<<'<;<<<<<<<<<<<=<<<*8>=<<<<;<!<
	seq1    1294    A       R       154     154     58      42      G$G,GggGggg.gg..g..g.,G.g.,g,,GG.,,.G,..g^~.^|g  +0<6<<;<<<<7<;<<3;<<<;;7<'<<=<<<<,;<<<<,<+
	seq2    156     A       A       10      0       60      11      .$......+2AG.+2AG.+2AGGG        <795;:<<<<<
	seq2    156     *       +AG/+AG 71      252     60      11      +AG     *       3       8       0
	seq2    158     A       R       18      18      60      8       GG$G.....       <;;<<<<<
	seq2    505     A       R       181     181     60      47      .$.$GgG,gg,gG.gg..g,Gg.g.,.G,Gg,,g,,g.,.Gg..GgG^~.^u,    7:4<=<<<8<<1<<<<<<<<<<<;<:<<<;=<<<:<3<<::<<;<<<
	seq2    783     A       W       24      24      58      48      ,.,.,,,,,.,,,,,...,.,..,,.,+4aaat.,.,.,.,,.,TttTTtTt^~T^~T       <<<:<<<<<<7<)<==<<<<<<<=3<=<<<<<<;<<<<3;;<<:<<++
	seq2    783     *       +AAAT/* 152     1116    58      48      +AAAT   *       1       47      0
	seq2    784     C       Y       42      42      58      49      ,$.,.,,,,,.,,,,,...+4AATT,+4aatt.+4AATT,+4aatt.+4AATT.+4AATT,+4aatt,+4aatt.+4AATTt.+4AATT,+4aatt.+4AATT,+4aatt.+4AATT,+4caat.+4AATT,+4aatt,+4aatt.+4AATT,+4aattTttTTtTtTT^~T      <<<-<<<<<<<;9<==<<<<;:<=<<=<<<<<.;7:<<+<<<<9<;+++
	seq2    784     *       +AATT/+AATT     185     1481    58      49      +AATT   *       20      29       0       0       0
	seq2    789     G       R       13      13      58      53      a$a$AaaaaaAA.,.,..,,.,.,.,.,.,,.,.,,..,.,......,,,,...^~.        ++<<<5<==<;<:<<7=<;=<<<<<<4<<<:<<<<<<<<<;<<<<;;<1<<<<
	seq2    1344    A       M       120     120     58      32      c$,c.c,c.CcC,,cc..C,cc.c.,c,c,,,+<<<<<<<<<<<<<<<<<<1<;<<<;<39<<-




FIRST SNP LINE

	seq1    285     T       W       34      34      59      21      ,..,..,,,.,.....aa^hA^kA^ja     <<<<3<<=<<<<<1<;<<;=<




COMES FROM THREE MISMATCHED ALIGNMENTS ONLY:


cd /nethome/bioinfo/apps/samtools/0.1.6/examples
em ex1.sam


cd /nethome/bioinfo/apps/samtools/0.1.6/examples
emacs /nethome/bioinfo/apps/samtools/0.1.6/examples/ex1.sam.bkp 



	B7_591:4:96:693:509     73      seq1    1       99      36M     *       0       0       CACTAGTGGCTCATTGTAAATGTGTGGTTTAACTCG     <<<<<<<<<<<<<<<;<<<<<<<<<5<<<<<;:<;7    MF:i:18 Aq:i:73 NM:i:0  UQ:i:0   H0:i:1  H1:i:0
	EAS54_65:7:152:368:113  73      seq1    3       99      35M     *       0       0       CTAGTGGCTCATTGTAAATGTGTGGTTTAACTCGT      <<<<<<<<<<0<<<<655<<7<<<:9<<3/:<6):     MF:i:18 Aq:i:66 NM:i:0  UQ:i:0   H0:i:1  H1:i:0
	EAS51_64:8:5:734:57     137     seq1    5       99      35M     *       0       0       AGTGGCTCATTGTAAATGTGTGGTTTAACTCGTCC      <<<<<<<<<<<7;71<<;<;;<7;<<3;);3*8/5     MF:i:18 Aq:i:66 NM:i:0  UQ:i:0   H0:i:1  H1:i:0
	B7_591:1:289:587:906    137     seq1    6       63      36M     *       0       0       GTGGCTCATTGTAATTTTTTGTTTTAACTCTTCTCT     (-&----,----)-)-),'--)---',+-,),''*,    MF:i:130        Aq:i:63 NM:i:5   UQ:i:38 H0:i:0  H1:i:0
	EAS56_59:8:38:671:758   137     seq1    9       99      35M     *       0       0       GCTCATTGTAAATGTGTGGTTTAACTCGTCCATGG      <<<<<<<<<<<<<<<;<;7<<<<<<<<7<<;:<5%     MF:i:18 Aq:i:72 NM:i:0  UQ:i:0   H0:i:1  H1:i:0
	EAS56_61:6:18:467:281   73      seq1    13      99      35M     *       0       0       ATTGTAAATGTGTGGTTTAACTCGTCCCTGGCCCA      <<<<<<<<;<<<8<<<<<;8:;6/686&;(16666     MF:i:18 Aq:i:39 NM:i:1  UQ:i:5   H0:i:0  H1:i:1
	EAS114_28:5:296:340:699 137     seq1    13      99      36M     *       0       0       ATTGTAAATGTGTGGTTTAACTCGTCCATGGCCCAG     <<<<<;<<<;<;<<<<<<<<<<<8<8<3<8;<;<0;    MF:i:18 Aq:i:73 NM:i:0  UQ:i:0   H0:i:1  H1:i:0
	B7_597:6:194:894:408    73      seq1    15      99      35M     *       0       0       TGTAAATGTGTGGTTTAACTCGTCCATTGCCCAGC      <<<<<<<<<7<<;<<<<;<<<7;;<<<*,;;572<     MF:i:18 Aq:i:43 NM:i:1  UQ:i:9   H0:i:0  H1:i:1
	EAS188_4:8:12:628:973   89      seq1    18      75      35M     *       0       0       AAATGTGTGGTTTAACTCGTCCATGGCCCAGCATT      ==;=:;:;;:====;=;===:=======;==;===     MF:i:64 Aq:i:0  NM:i:0  UQ:i:0   H0:i:1  H1:i:0
	EAS51_66:7:68:402:50    137     seq1    22      99      35M     *       0       0       GTGTGGTTTAACTCGTCCATGGCCCAGCATTTGGG      <<<<<<<<<<<<<<:<<<9<6;9;;&697;7&<55     MF:i:18 Aq:i:66 NM:i:1  UQ:i:5   H0:i:1  H1:i:0

	...
	
	EAS221_1:2:90:986:1224  83      seq1    267     99      35M     =       67      -235    CTGTGTTTA\
	GTGCCTTTGTTCAACCCCCTTGCAAC     <7*37;;;;;;;9<<;<7<<<<<<<<<<<;;<<<<     MF:i:18 Aq:i:41 NM:i:0  UQ\
	:i:0  H0:i:1  H1:i:0
	EAS114_28:7:287:492:169 99      seq1    269     99      36M     =       449     216     GTGTTTAGT\
	GCCTTTGTTCAACCCCCTTGCAACAAC    <<<7<<<<<<<<<<<<<<<<<<<<<<<8;;<;6<<;    MF:i:18 Aq:i:69 NM:i:0  UQ\
	:i:0  H0:i:1  H1:i:0
	EAS218_4:1:48:9:409     99      seq1    271     75      18M5I12M        =       464     228     G\
	TTTAGTGCCTTTGTTCACATAGACCCCCTTGCAA     <<<<<<<<<<<<<:<<<<<<<<<<<<<<<<<<<<<     MF:i:130        Aq\
	:i:75 NM:i:0  UQ:i:0  H0:i:0  H1:i:0
	EAS139_19:1:87:1222:878 163     seq1    272     10      40M     =       435     203     TATAGGGCC\
	TTTGTTCAAACCCCTTGCAACAACCTTGAGA        &+6<6&<:<<9<1112<<;)9227</);;;2-79;)/769        MF:i:18 Aq\
	:i:10 NM:i:3  UQ:i:41 H0:i:0  H1:i:0
	B7_591:7:200:192:373    163     seq1    275     75      14M5I17M        =       451     212     A\
	GTGCCTTTGTTCACATAGACCCCCTTGCAACAACC    <<<<<<<<<<<<<<<<<<<<<<<<<:<:<;5<<;<<    MF:i:130        Aq\
	:i:75 NM:i:0  UQ:i:0  H0:i:0  H1:i:0
	EAS56_65:1:163:846:223  163     seq1    278     74      11M5I19M        =       463     220     G\
	CCTTTGTTCACATAGACCCCCTTGCAACAACCTT     <<<<;<<;4<<<;;9<<<<<+<<;<</27;;47;.     MF:i:130        Aq\
	:i:74 NM:i:0  UQ:i:0  H0:i:0  H1:i:0
	EAS114_30:7:283:799:560 83      seq1    283     66      35M     =       121     -197    ACATAGACC\
	CCCTTGCAACAACCTTGAGAACCCCA     <4<6<8;;6<<<+;<:<<;<<<<<<<<<<<<<<<<     MF:i:130        Aq:i:66 NM\
	:i:0  UQ:i:0  H0:i:0  H1:i:0
	B7_595:4:84:802:737     147     seq1    284     68      35M     =       140     -179    CATAGACCC\
	CCTTGCAACAACCTTGAGAACCCCAG     +<1<-;69;;;;8;:<<6<;<<<<<<<<<<<<<<<     MF:i:130        Aq:i:68 NM\
	:i:0  UQ:i:0  H0:i:0  H1:i:0
	EAS51_66:5:308:400:602  163     seq1    285     71      35M     =       470     220     ATAGACCCC\
	CTTGCAACAACCTTGAGAACCCCAGG     ;<<<<<<<<<<<<<<<<<<<<<<<<;;;<<;<;76    






cd /nethome/bioinfo/apps/samtools/0.1.6/examples

/nethome/bioinfo/apps/samtools/0.1.6/samtools  pileup -v -cf ex1.fa -t ex1.fa.fai ex1.sam.gz


    B7_591:4:96:693:509     73      seq1    1       99      36M     *       0       0       CACTAGTG\
    GCTCATTGTAAATGTGTGGTTTAACTCG    <<<<<<<<<<<<<<<;<<<<<<<<<5<<<<<;:<;7    MF:i:18 Aq:i:73 NM:i:0  \
    UQ:i:0  H0:i:1  H1:i:0
    EAS54_65:7:152:368:113  73      seq1    3       99      35M     *       0       0       CTAGTGGC\
    TCATTGTAAATGTGTGGTTTAACTCGT     <<<<<<<<<<0<<<<655<<7<<<:9<<3/:<6):     MF:i:18 Aq:i:66 NM:i:0  \
    UQ:i:0  H0:i:1  H1:i:0
    EAS51_64:8:5:734:57     137     seq1    5       99      35M     *       0       0       AGTGGCTC\
    ATTGTAAATGTGTGGTTTAACTCGTCC     <<<<<<<<<<<7;71<<;<;;<7;<<3;);3*8/5     MF:i:18 Aq:i:66 NM:i:0  \
    UQ:i:0  H0:i:1  H1:i:0
    B7_591:1:289:587:906    137     seq1    6       63      36M     *       0       0       GTGGCTCA\
    TTGTAATTTTTTGTTTTAACTCTTCTCT    (-&----,----)-)-),'--)---',+-,),''*,    MF:i:130        Aq:i:63 \
    NM:i:5  UQ:i:38 H0:i:0  H1:i:0
    EAS56_59:8:38:671:758   137     seq1    9       99      35M     *       0       0       GCTCATTG\
    TAAATGTGTGGTTTAACTCGTCCATGG     <<<<<<<<<<<<<<<;<;7<<<<<<<<7<<;:<5%     MF:i:18 Aq:i:72 NM:i:0  \
    UQ:i:0  H0:i:1  H1:i:0
    EAS56_61:6:18:467:281   73      seq1    13      99      35M     *       0       0       ATTGTAAA\
    TGTGTGGTTTAACTCGTCCCTGGCCCA     <<<<<<<<;<<<8<<<<<;8:;6/686&;(16666     MF:i:18 Aq:i:39 NM:i:1  \
    UQ:i:5  H0:i:0  H1:i:1
    EAS114_28:5:296:340:699 137     seq1    13      99      36M     *       0       0       ATTGTAAA\
    TGTGTGGTTTAACTCGTCCATGGCCCAG    <<<<<;<<<;<;<<<<<<<<<<<8<8<3<8;<;<0;    MF:i:18 Aq:i:73 NM:i:0  \
    UQ:i:0  H0:i:1  H1:i:0




-->

TEST SNPS FROM WORKFLOW OUTPUT out.sam
--------------------------------------

The alignment section consists of multiple TAB-delimited lines with each line describing an alignment. Each line is:


<!--

	<QNAME> <FLAG> <RNAME> <POS> <MAPQ> <CIGAR> <MRNM> <MPOS> <ISIZE> <SEQ> <QUAL> \
	[<TAG>:<VTYPE>:<VALUE> [...]]


	2.2.2. The <flag> field

		Field <flag> is a bitwise flag. The meaning of predefined bits is shown in the following table:

		Flag Description
		0x0001 the read is paired in sequencing, no matter whether it is mapped in a pair
		0x0002 the read is mapped in a proper pair (depends on the protocol, normally inferred during alignment) 1
		0x0004 the query sequence itself is unmapped
		0x0008 the mate is unmapped 1
		0x0010 strand of the query (0 for forward; 1 for reverse strand)
		0x0020 strand of the mate 1
		0x0040 the read is the first read in a pair 1,2
		0x0080 the read is the second read in a pair 1,2
		0x0100 the alignment is not primary (a read having split hits may have multiple primary alignment records)
		0x0200 the read fails platform/vendor quality checks
		0x0400 the read is either a PCR duplicate or an optical duplicate
		Notes:
		1. Flag 0x02, 0x08, 0x20, 0x40 and 0x80 are only meaningful when flag 0x01 is present.
		2. If in a read pair the information on which read is the first in the pair is lost in the upstream analysis, flag 0x01 should
		be present and 0x40 and 0x80 are both zero.




GENERATE SORTED SAM FILE

cd /scratch/syoung/base/pipeline/SRA/NA18507/novoalign/t/100M-single/chrY
####sort out.sam -k 3,3 -k 4,4n > out.sorted.sam
sort out.sam -t "CNTL+V, TAB" -k 3,3 -k 4,4n > out.sort.sam
head out.sort.sam


SRR002275.22252098 FC2043LAAXX_R1:6:157:96:845  0       chrY    9992    29      32M     *       0GCTGCTTACCTAACCCTAACCCTAACCCTAAC 1I45FIE7CIII7:6?,,9618+/-6+2/(-*        PG:Z:novoalign  AS:i:56 UQ:i:56   NM:i:9  MD:Z:0N0N0N0N0N0N0N0N0N23
SRR002274.4142962 FC20471AAXX_R1:2:107:224:871  16      chrY    9995    5       32M     *       0AAAACCCTAACCCTAACCCTAACCCTAACCCT IAI.5+8)?02/10I+IIA1I0IIIIIIIII3        PG:Z:novoalign  AS:i:37 UQ:i:37   NM:i:6  MD:Z:0N0N0N0N0N0N26
SRR002272.33465867 FC2046H_R1:8:95:712:494      16      chrY    10219   6       32M     *       0GCTGTGACACTCACCGCAAAGGTCTGCAGCTT *-$)/(.6,3'4&,2-1E)/EH=D33I9I=I0        PG:Z:novoalign  AS:i:10 UQ:i:10   NM:i:0  MD:Z:32
SRR002271.15750873 FC2012M_R1:7:109:101:862     16      chrY    10340   7       32M     *       0CAGCTTTAAGAATTGTAACACTCACCGCGAGG ++!'+)%.++/0%)-,/,A)%/-)B?5I<HIA        PG:Z:novoalign  AS:i:24 UQ:i:24   NM:i:2  MD:Z:2C9C19
SRR002275.28465817 FC2043LAAXX_R1:7:152:892:202 16      chrY    10362   12      32M     *       0CGCCGCGAGGGTCCGCGTCTTCATTCTTGAAG E-9I6I/<1/+3II7I7IIIIIIIIIEIIIII        PG:Z:novoalign  AS:i:32 UQ:i:32   NM:i:2  MD:Z:1A8T21
SRR002271.18032290 FC2012M_R1:8:14:781:488      0       chrY    11423   69      32M     *       0GTAGAGTTCATGCAGAAAAAAATACAACAAAA IIII0IIII4I659I1C:80/+0(%%,+((/+        PG:Z:novoalign  AS:i:7  UQ:i:7    NM:i:0  MD:Z:32
SRR002275.6791270 FC2043LAAXX_R1:3:51:922:623   16      chrY    12110   29      32M     *       0CACCTAGAACTGTTTACTTGCCTGTAACCATT 0&85+++G.I,'-94+I5<4III2IIIIIIII        PG:Z:novoalign  AS:i:42 UQ:i:42   NM:i:2  MD:Z:5G13T12
SRR002272.691635 FC2046H_R1:1:32:909:875        16      chrY    12111   29      32M     *       0ACCTGGAACTGTTTACTTTCCTGTAACCATTT -1I*3=;2I.<6/D8IBA9II<IIIIIIIIII        PG:Z:novoalign  AS:i:1  UQ:i:1    NM:i:0  MD:Z:32
SRR002272.24396931 FC2046H_R1:6:81:394:183      0       chrY    12818   53      32M     *       0CTACAGTTGAGGTCCCCCCGCCCCTGTGGTTC 7;IA5234.54/+.0,--/.2+/-%%++$%*'        PG:Z:novoalign  AS:i:11 UQ:i:11   NM:i:0  MD:Z:32
SRR002274.2933703 FC20471AAXX_R1:2:26:784:885   0       chrY    12945   10      32M     *       0TCTTCCTTCCTTCCTTCCTTCCTCCCTCCCTT IIII<BIIIGII?IF:3GE1763=/=43++-5        PG:Z:novoalign  AS:i:30 UQ:i:30   NM:i:1  MD:Z:9A22



REMOVE GAP ENTIRELY:


sed -e 's/ FC[\D]*[A-Z0-9\.\_]*:\([0-9\:]*\)/:\1/' < out.sort.sam.bkp > out.sort.simpleHeader.sam

head out.sort.simpleHeader.sam 

	SRR002275.22252098:6:157:96:845 0       chrY    9992    29      32M     *       0       0       GCTGCTTACCTAACCCTAACCCTAACCCTAAC  1I45FIE7CIII7:6?,,9618+/-6+2/(-*        PG:Z:novoalign  AS:i:56 UQ:i:56   NM:i:9  MD:Z:0N0N0N0N0N0N0N0N0N23
	SRR002274.4142962:2:107:224:871 16      chrY    9995    5       32M     *       0       0       AAAACCCTAACCCTAACCCTAACCCTAACCCT  IAI.5+8)?02/10I+IIA1I0IIIIIIIII3        PG:Z:novoalign  AS:i:37 UQ:i:37   NM:i:6  MD:Z:0N0N0N0N0N0N26
	SRR002272.33465867:8:95:712:494 16      chrY    10219   6       32M     *       0       0       GCTGTGACACTCACCGCAAAGGTCTGCAGCTT  *-$)/(.6,3'4&,2-1E)/EH=D33I9I=I0        PG:Z:novoalign  AS:i:10 UQ:i:10   NM:i:0  MD:Z:32



WHICH DOES CONTAIN NON-PERFECT MATCHES:

grep -v 32M out.sort.simpleHeader.sam

	...
	SRR002272.2589099:1:118:398:298 16      chrY    13366728        29      7M2I23M *       0       0ACTTCCCATTTTTGTCTATAAATCTTCTTCCA 9B4/95I7+0=7I?7I0I<IIIHIIIIIIIII        PG:Z:novoalign  AS:i:70 UQ:i:70   NM:i:2  MD:Z:30
	SRR002274.7425521:3:127:169:795 16      chrY    13372554        44      8M1D24M *       0       0ACATAGGGAAATCAGTGCCTGACAATTCGCCT B0I0?170I<G+AA5.2II6>IIIIH=IIIII        PG:Z:novoalign  AS:i:55 UQ:i:55   NM:i:1  MD:Z:8^G24
	SRR002274.9219836:4:44:983:778  16      chrY    13373621        25      11M1D21M        *       0ACATCAGAAAAGTAGAAAAACTTCAAATAAAC A1I0CI4IIII:AIDIIIICIIIIIIIIIIII        PG:Z:novoalign  AS:i:79 UQ:i:79   NM:i:2  MD:Z:6A4^A21
	SRR002274.2907480:2:24:109:433  16      chrY    13379762        20      14M1D18M        *       0TGATGAGCTTTTTTATAAGTTTGTTGGTTGCA $49*618614++0)2,6;I'/2IA+II/IIII        PG:Z:novoalign  AS:i:61 UQ:i:61   NM:i:1  MD:Z:14^T18
	...


COPY AND GZIP:

cp out.sort.simpleHeader.sam out.sort.simpleHeader.sam.bkp
gzip out.sort.simpleHeader.sam 



CALL SNPS:

/nethome/bioinfo/apps/samtools/0.1.6/samtools pileup \
-v -cf /nethome/bioinfo/data/sequence/chromosomes/human/hg19/samtools/chrY.fa \
-t /nethome/bioinfo/data/sequence/chromosomes/human/hg19/samtools/chrY.fai \
/scratch/syoung/base/pipeline/SRA/NA18507/novoalign/t/100M-single/chrY/out.sort.simpleHeader.sam.gz > out.simpleHeader.snp

	[sam_header_read2] 1 sequences loaded.

	OK!



NB: SIMPLE HEADER DOES NOT MAKE A DIFFERENCE FOR SNP CALLING


/nethome/bioinfo/apps/samtools/0.1.6/samtools pileup -v -cf /nethome/bioinfo/data/sequence/chromosomes/human/hg19/samtools/chrY.fa -t /nethome/bioinfo/data/sequence/chromosomes/human/hg19/samtools/chrY.fai /scratch/syoung/base/pipeline/SRA/NA18507/novoalign/t/100M-single/chrY/out.sort.sam.gz > out.snp

	[sam_header_read2] 1 sequences loaded.

	OK


diff out.simpleHeader.snp out.snp

	<NO OUTPUT>




NB: MUST USE -t ARGUMENT WHEN SORTING!!!
out.sort.sam IS DIFFERENT TO THE INCORRECTLY SORTED (NO -t ARGUMENT) out.sorted.sam FILE:


head out.sorted.sam.bkp

	SRR002271.10000116 FC2012M_R1:3:54:458:171      0       chrY    13292795        67      32M     *CTCTTTTTTTCTTCTTCCCATGCAGGACACCT +IFIIIAIII9>I3FI1,+,4*4.(*+-)*#-        PG:Z:novoalign  AS:i:9  UQ:i:9    NM:i:0  MD:Z:32
	SRR002271.10000807 FC2012M_R1:3:54:326:562      0       chrY    7027797 6       32M     *       0GAGATTCCGTGGGCGTAGGACCCTCCGAGCCA I5II=II3;AI+D:3%--4)))*&&'("*(&#        PG:Z:novoalign  AS:i:26 UQ:i:26   NM:i:0  MD:Z:32
	SRR002271.10001151 FC2012M_R1:3:54:381:625      0       chrY    4341982 4       32M     *       0TTTCCAATTTGTTGGCATATAGTTTCTCATAG IIGGI,52G:AA4,3;1/03-%&?).7(&/*%        PG:Z:novoalign  AS:i:46 UQ:i:46   NM:i:2  MD:Z:19C4G7
	SRR002271.10001174 FC2012M_R1:3:54:858:769      0       chrY    28596622        3       32M     *TGAACTCCTGACCTCGTGATCCACCCGCCTTG IE3II3I*,1A0A638+++*++-(&')*)&%&        PG:Z:novoalign  AS:i:15 UQ:i:15   NM:i:0  MD:Z:32
	SRR002271.10001772 FC2012M_R1:3:54:355:722      0       chrY    10061728        3       32M     *ACTTCCAGATACTACAAAAAGAGTGTTTCCAA IIIIII=B2IIII7>43672**-./+,+&+(+        PG:Z:novoalign  AS:i:50 UQ:i:50   NM:i:2  MD:Z:4G24A2
	SRR002271.10002880 FC2012M_R1:3:54:702:765      0       chrY    3151439 10      32M     *       0TGTCTGTTTACTGTGCTGATTGTTTCTTTTGC II=IIIIIIA1I7>1(I;)=9+3>=&-89='%        PG:Z:novoalign  AS:i:34 UQ:i:34   NM:i:1  MD:Z:12C19
	SRR002271.10005475 FC2012M_R1:3:55:256:890      0       chrY    10064685        3       32M     *TTCAACTCTGTGAGTTGAATACACACAACACA IIIAIIIIII<I8IIIA-0F<I8;0:*(/%<&        PG:Z:novoalign  AS:i:37 UQ:i:37   NM:i:2  MD:Z:24T2T4
	SRR002271.10005494 FC2012M_R1:3:55:188:114      0       chrY    7574464 6       32M     *       0TAACATGCTGTTTTGGTTACTGTAGCCCTGTA HIIIIIIIIIIIEIII.I<-5'71)&*+(.&"        PG:Z:novoalign  AS:i:29 UQ:i:29   NM:i:1  MD:Z:27T4
	SRR002271.10006055 FC2012M_R1:3:55:794:360      0       chrY    13374202        23      32M     *GTTGCAGTGAGCTGAGATTGTACCACGCTGTA I9II8IIGI/I9IE'I41A3'6%++),--3,+        PG:Z:novoalign  AS:i:56 UQ:i:56   NM:i:3  MD:Z:25A3C0C1
	SRR002271.10007140 FC2012M_R1:3:55:109:303      0       chrY    13861230        1       32M     *GAATAAAATGGAATGGAATGGAATGGAATGGA DIIDIIIIIIID9<II+6<9*.;-32$7'.1&        PG:Z:novoalign  AS:i:25 UQ:i:25   NM:i:1  MD:Z:21G10


grep -v 32M out.sorted.sam

	...
	SRR002275.740640 FC2043LAAXX_R1:1:47:60:530     16      chrY    1568725 29      3M2I27M *       0AATTGCTGTTTTTTTGTTTTGTTTTGTTTTGT III,IIIIAIIIIIIIIIIIIIIIIIIIIIII        PG:Z:novoalign  AS:i:70 UQ:i:70   NM:i:2  MD:Z:30
	SRR002275.7660765 FC2043LAAXX_R1:3:96:67:225    16      chrY    6021736 26      29M1D3M *       0TCCAGGTCATAGGTAGGTAAGAGACAAATGCT +IIIIIIIIIIIIIIIIIIIIIIIIIIIIIII        PG:Z:novoalign  AS:i:55 UQ:i:55   NM:i:1  MD:Z:29^A3
	SRR002275.788437 FC2043LAAXX_R1:1:50:527:306    16      chrY    13408365        21      20M1D12M CCTATTTTTATTATTTTTCTCCTTTGTATTAA --2G&-+4/I3-I-5)(*I+IIBIIIAI>III        PG:Z:novoalign  AS:i:60 UQ:i:60   NM:i:1  MD:Z:20^T12
	SRR002275.791734 FC2043LAAXX_R1:1:50:70:966     16      chrY    16847494        24      18M2D14M TGCTGCTGTAAAGATACCAAAATGTGGAAGTG E<7??%I0IIII>IIIIIIIIIIIIIIIIIII        PG:Z:novoalign  AS:i:72 UQ:i:72   NM:i:2  MD:Z:18^TG14
	...
	



cp /scratch/syoung/base/pipeline/SRA/NA18507/novoalign/t/100M-single/chrY/out.sorted.sam \
/scratch/syoung/base/pipeline/SRA/NA18507/novoalign/t/100M-single/chrY/out.sorted.sam.bkp

gzip /scratch/syoung/base/pipeline/SRA/NA18507/novoalign/t/100M-single/chrY/out.sorted.sam




CALL SNPS
NOT OK

/nethome/bioinfo/apps/samtools/0.1.6/samtools pileup \
-vcf /nethome/bioinfo/data/sequence/chromosomes/human/hg19/samtools/chrY.fa \
-t /nethome/bioinfo/data/sequence/chromosomes/human/hg19/samtools/chrY.fai \
/scratch/syoung/base/pipeline/SRA/NA18507/novoalign/t/100M-single/chrY/out.sort.sam.gz

[sam_header_read2] 1 sequences loaded.






TEST ELAND OUTPUT
-----------------

cd /nethome/bioinfo/apps/samtools/0.1.6/examples
cat /nethome/syoung/base/pipeline/benchmark/eland/eland1-1000000/1/chrY/export.sam | grep chrY > eland.sam
cat /nethome/syoung/base/pipeline/benchmark/eland/eland1-1000000/1/chrY/export.sam | grep chrY | grep -v 37M
ll /nethome/syoung/base/pipeline/benchmark/eland/eland1-1000000/1/chrY/export.sam



CONVERT FROM BAM TO SAM


time /nethome/syoung/base/apps/samtools/0.1.6/samtools view -bt \
/nethome/bioinfo/data/sequence/chromosomes/human/hg19/fasta/chr1.fa.fai \
-o /nethome/syoung/base/pipeline/benchmark/eland/eland1-1000000/1/chr1/export.bam \
/nethome/syoung/base/pipeline/benchmark/eland/eland1-1000000/1/chr1/export.sam




CALL SNPS WITH SAM:

cd /nethome/syoung/base/pipeline/benchmark/eland/eland1-1000000/1/chr1

/nethome/syoung/base/apps/samtools/0.1.6/samtools pileup -cv \
-f /nethome/bioinfo/data/sequence/chromosomes/human/hg19/fasta/chr1.fa \
/nethome/syoung/base/pipeline/benchmark/eland/eland1-1000000/1/chr1/export.sam.gz \
> /nethome/syoung/base/pipeline/benchmark/eland/eland1-1000000/1/chr1.snp







ORIGINAL SNP CALL COMMAND:

/nethome/syoung/base/apps/samtools/0.1.6/samtools pileup -cv \
-f /nethome/bioinfo/data/sequence/chromosomes/human/hg19/fasta/chr1.fa \
/nethome/syoung/base/pipeline/benchmark/eland/eland1-1000000/chr1.sorted.bam \
2> /nethome/syoung/base/pipeline/benchmark/eland/eland1-1000000/chr1.snp.error \
1> /nethome/syoung/base/pipeline/benchmark/eland/eland1-1000000/chr1.snp


head /nethome/syoung/base/pipeline/benchmark/eland/eland1-1000000/chr1.snp

	chr1.fa 261     t       C       30      30      59      1       C       C
	chr1.fa 264     c       A       30      30      59      1       A       B
	chr1.fa 560     c       G       30      30      37      1       g       B
	chr1.fa 622     g       T       29      29      60      1       T       >
	chr1.fa 1268    g       A       7       7       52      2       aa      %%
	chr1.fa 1272    a       G       33      33      52      2       gg      @?
	chr1.fa 2506    C       T       14      14      43      2       t,      9>
	chr1.fa 3143    A       G       6       6       50      2       g,      <6
	chr1.fa 3304    T       C       30      30      60      1       C       B
	chr1.fa 3436    C       T       30      30      60      1       t       A



ll /nethome/syoung/base/pipeline/benchmark/eland/eland1-1000000/1/chr1


	-rw-rw-rw-  1 syoung bioinfo  24K Mar 13 17:53 eld-chr1-1-stdout.txt
	-rw-r--r--  1 syoung bioinfo  37M Mar 20 02:57 export.bam
	-rw-rw-rw-  1 syoung bioinfo 119M Mar 13 17:53 export.sam
	-rw-rw-rw-  1 syoung bioinfo   62 Mar 13 17:48 reanalysis_genomesize.xml
	-rw-rw-r--  1 syoung bioinfo 142K Jun 14 21:37 test2.sam
	-rw-rw-r--  1 syoung bioinfo 8.7M Jun 14 21:36 test2.sam.orig



head /nethome/syoung/base/pipeline/benchmark/eland/eland1-1000000/1/chr1/export.sam 

	HWI-EAS185:1:1:17:1838  4       *       0       0       37M     *       0       0       CTTTGACGGGGGCATCTATGNCTGCAGGGCNACCAAC    BBBBA@BBBBB@BBBBBBB;&<B>,@BBB;&<BBAB<
	HWI-EAS185:1:1:17:657   4       *       0       0       37M     *       0       0       AAAAAGTGCAGATCACTTAANCGGCCTGCTNCGGGAA    CCCCCCBCCCCCCBCBCCB=&=C@5A??%%%%%%%%%
	HWI-EAS185:1:1:17:537   4       *       0       0       37M     *       0       0       ATTAATAGGTTTATCCCCAANGGAGAGGAAGTGTGGA    BCCCCCCCCCCCCCCCCCC=&<CCCCCCCCCCCCCA<
	HWI-EAS185:1:1:17:1767  16      chr1.fa 54980109 126    37M     *       0       0       GATTCTGAACTTTTGTNGAGTTTGACACCTTAGAGAA    <2@AB=1@<5BBC@;:&?@<@@@?ACAB<@CCBCBCC   MD:Z:20C16
	HWI-EAS185:1:1:17:1393  4       *       0       0       37M     *       0       0       TGGGATTCTTATAAAGAAGANCCAAGAAAGGACGGCA    CCCCCCCCCCCCCCCCCCC>&?CCB@?A?>B6C%%%%
	HWI-EAS185:1:1:17:989   4       *       0       0       37M     *       0       0       GGAGACATGAGTGTCTATTANATGATTGTTTGCCTGA    CCCBABCBABBBBBB?@BB;&5@===?+<@@4>A><>
	HWI-EAS185:1:1:17:370   4       *       0       0       37M     *       0       0       GGGTCTGGGGCTCCAGTTCANGAATACATAGGCAGCT    @BBA@B@B<@BBB9B99A+5&;ABBB=B%%%%%%%%%
	HWI-EAS185:1:1:17:1691  4       *       0       0       37M     *       0       0       CGACTGTGAGTGCGTTCGTANTTTGAGTTTGCTAGGC    BBBB@@7;==?@@@?BA@><&;@@9<@7@?1:?;<>6
	HWI-EAS185:1:1:17:526   4       *       0       0       37M     *       0       0       TAGCATTTACCATCTCACTTNTAGGAATACTAGTATA    CCCCCBCCAAACCCCBCCC>&?BBBBBBC@CCBAA%%
	HWI-EAS185:1:1:17:864   4       *       0       0       37M     *       0       0       GTCCATCCTCATGTCACGCANTTTGGACACTAGCTCT    CCCBABA@B@BABCBBBBB<&?<4@78==@*@9@4B5



WHICH RETURNED 110,000 SNPS:

lines /nethome/syoung/base/pipeline/benchmark/eland/eland1-1000000/chr1.snp

    chr1.snp: 110594



head /nethome/syoung/base/pipeline/benchmark/eland/eland1-1000000/chr1.snp

	chr1.fa 261     t       C       30      30      59      1       C       C
	chr1.fa 264     c       A       30      30      59      1       A       B
	chr1.fa 560     c       G       30      30      37      1       g       B
	chr1.fa 622     g       T       29      29      60      1       T       >
	chr1.fa 1268    g       A       7       7       52      2       aa      %%
	chr1.fa 1272    a       G       33      33      52      2       gg      @?
	chr1.fa 2506    C       T       14      14      43      2       t,      9>
	chr1.fa 3143    A       G       6       6       50      2       g,      <6
	chr1.fa 3304    T       C       30      30      60      1       C       B
	chr1.fa 3436    C       T       30      30      60      1       t       A


tail /nethome/syoung/base/pipeline/benchmark/eland/eland1-1000000/chr1.snp

    chr1.fa 247188421       g       T       25      25      25      1       ^:t     ?
    chr1.fa 247188432       a       C       25      25      25      1       c       A
    chr1.fa 247188454       c       T       25      25      25      1       t       C
    chr1.fa 247189371       G       T       33      33      42      2       tt      <B
    chr1.fa 247190902       A       G       4       4       4       1       g       @
    chr1.fa 247197433       T       C       69      69      31      14      CCCCCCCCCCCCCC  BBCCACCBCBABBB
    chr1.fa 247197445       C       T       117     117     34      30      TTTTTTTTTTTTTTTTTTTTTTTTT^CT^OT^CT^BT^AT BBCBBCBAB?@<C@BCCCCCCCCCCC9B,C






TEST NOVOALIGN chrY out.sam FILE SAMPLE:

head -n 100 /scratch/syoung/base/pipeline/SRA/NA18507/novoalign/t/100M-single/chrY/

sort out.sam -k 4,4n > out.sorted.sam


-->
TEST
----

cd /nethome/syoung/base/pipeline/benchmark/eland/eland1-1000000/1/chr1

[syoung@u04 chr1]$ ll
total 164M
drwxrwxrwx  2 syoung bioinfo 2.0K Jun 14 21:37 .
drwxrwxrwx 26 syoung bioinfo 2.0K Mar 13 16:23 ..
-rwxrwxrwx  1 syoung bioinfo 1.3K Mar 13 17:39 eld-chr1-1.sh
-rw-rw-rw-  1 syoung bioinfo  24K Mar 13 17:53 eld-chr1-1-stdout.txt
-rw-r--r--  1 syoung bioinfo  37M Mar 20 02:57 export.bam
-rw-rw-rw-  1 syoung bioinfo 119M Mar 13 17:53 export.sam
-rw-rw-rw-  1 syoung bioinfo   62 Mar 13 17:48 reanalysis_genomesize.xml
-rw-rw-r--  1 syoung bioinfo 142K Jun 14 21:37 test2.sam
-rw-rw-r--  1 syoung bioinfo 8.7M Jun 14 21:36 test2.sam.orig
[syoung@u04 chr1]$ pwd



TEST ALTERED COPY OF EXAMPLE ex1.sam FILE
-----------------------------------------

COPIED test.sam FROM ex1.sam AND REPLACED FLAGS 73 AND 137 WITH 0 AND 16:

cd /nethome/bioinfo/apps/samtools/0.1.6/examples
cp ex1.sam test.sam
cp test.sam test.sam.bkp
sort -k 4,4n test.sam > test.sort.sam 
cp test.sort.sam test.sort.sam.bkp
gzip test.sort.sam


PILEUP:

/nethome/bioinfo/apps/samtools/0.1.6/samtools  pileup -v -cf ex1.fa -t ex1.fa.fai test.sort.sam.gz





</entry>



<entry [Tue Apr 20 11:30:32 EDT 2010] USE maq2sam-short AND maq2sam-long TO CONVERT MAQ TO SAM, USE export2sam.pl FOR ELAND TO SAM>

real    0m23.973s
user    0m23.585s
sys     0m0.385s


After you compile samtools with "make", you will find "maq2sam-short" and "maq2sam-long" in the "misc/" directory.

maq2sam-short is for the .map files generated by maq-0.6.x, while maq2sam-long for files generated by maq-0.7.x.



There is also a script "export2sam.pl" that converts Illumina's export to SAM. I have not thoroughly tested this script on all export files, though.

/nethome/syoung/base/apps/GAPipeline-1.4.0/bin/

/nethome/syoung/base/apps/samtools/Bio-SamTools-1.01




 01-06-2009, 12:01 AM	   #7
lh3
Senior Member
 
Join Date: Feb 2008
Location: Boston
Posts: 232

To corthay:

You are quick. I am planning a new bwa release as I realized that I could improve it a little without much work (PS: the new version is released now). Wgsim, wgsim_eval.pl and converters for soap and bowtie are available from SVN only:

svn co https://samtools.svn.sourceforge.net...s/dev/samtools samtools




 01-20-2009, 09:57 PM	   #8
myrna
Member
 
Join Date: Feb 2008
Location: Vancouver, Canada
Posts: 38
 indelpe vs samtools indels
Hi Heng Li.
Could you comment on how the indel detection works in SAM pileups vs MAQ indelpe? I am seeing many more indels in my SAM pileup generated from a MAQ alignment (as compared to the output from indelpe). Is there a good filtering strategy for these?

Thanks,

Ryan
  	
 01-21-2009, 12:13 AM	   #9
lh3
Senior Member
 
Join Date: Feb 2008
Location: Boston
Posts: 232

I am planning to release samtools-0.1.2 which fixed some bugs in the old version and added new features. For now you can check out source codes from SVN. It should be quite close to 0.1.2.

The new version comes with a Bayesian indel caller, although it is just a prototype at present. The strength of the samtools' caller is that it makes use of reads mapped without indel. Using this information helps to reduce false negatives. In addition, the new caller gives genotype rather than just saying there is an indel. You cannot easily tell from maq's indelpe if the indel is a heterozygote or a homozygote. With the new caller, the filters could be: a) the indel score; b) two indels should not be too close to each other.





lparsons
Member
 
Join Date: Nov 2008
Location: NJ
Posts: 23

I imported an ELAND alignment and was able to convert into SAM, then to BAM, then sort it. However, at the indexing step I too ran into a segmentation fault. I'm using the 0.1.2 version from the download page, not from SVN. Any suggestions?
  	
 03-10-2009, 02:20 PM	   #19
lh3
Senior Member
 
Join Date: Feb 2008
Location: Boston
Posts: 232

screeHave you sorted the alignment first? Indexing in 0.1.2 has a bug, but should not cause segfault. Thanks.
  	
 03-10-2009, 02:25 PM	   #20
lparsons
Member
 
Join Date: Nov 2008
Location: NJ
Posts: 23

Yes, I sorted it just fine. In fact the indexing step will complain that the file isn't sorted. 

One issue could be that I just realized that the ref_list file I gave during the import didn't have the reference size in it. I assume this means the length of the reference sequence? I'll have to give that a try when I first import the file (convert to bam).




</entry>



<entry [Tue Apr 20 11:29:32 EDT 2010] SAM FILE FORMAT>

<!--

SAM Format Specification 0.1.2-draft (20090820)
http://samtools.sourceforge.net/SAM1.pdf


EXAMPLE:

    HWI-EAS185:1:3:1636:994#0       0       chr1    3035487 255     52M     *       0       0       CTTTGGGTGCTCTCACACTCCCGAGACTAGAGTGGGGGTCCCCGAAAGGGGG      aaa_a`a\_aaaaaaaaaZaaa_X`Xa`a``VJY\`\ZP`aBBBBBBBBBBB      NM:i:1
    HWI-EAS185:1:4:972:1117#0       0       chr1    3044403 1       52M     *       0       0       TTTACAAGGCCTAATGGTGACTCCTACAGTGGTTAACACCGACTACCATGGG      bbaaba[a[bbab^``^U[_a_ab``aaVPU`^_]_a__aY_a__aa^YZZS      NM:i:1
    HWI-EAS185:1:2:1737:216#0       16      chr1    3045067 0       50M     *       0       0       CACAAAGAGATAATGCGTTAGAATTTGAAGATTGTTGGATGTGCTTTTCT        \X]]Y_a^`^_]Y_`_`_`_a]^[^_`]_a`___U_aaaab`b[aa^\]]        NM:i:2


FORMAT:

The alignment section consists of multiple TAB-delimited lines with each line describing an alignment. Each line is:

<QNAME> <FLAG> <RNAME> <POS> <MAPQ> <CIGAR> <MRNM> <MPOS> <ISIZE> <SEQ> <QUAL> \
[<TAG>:<VTYPE>:<VALUE> [...]]

The format of each field is explained in the following table. More detailed descriptions are given in the sections below.

Field Regular expression Range Description

    QNAME [^ \t\n\r]+ Query pair NAME if paired; or Query NAME if unpaired 2
    FLAG [0-9]+ [0,216-1] bitwise FLAG (Section 2.2.2)
    RNAME [^ \t\n\r@=]+ Reference sequence NAME 3
    POS [0-9]+ [0,229-1] 1-based leftmost POSition/coordinate of the clipped sequence
    MAPQ [0-9]+ [0,28-1] MAPping Quality (phred-scaled posterior probability that the mapping position of this read is incorrect) 4
    CIGAR ([0-9]+[MIDNSHP])+|\* extended CIGAR string
    MRNM [^ \t\n\r@]+ Mate Reference sequence NaMe; = if the same as <RNAME> 3
    MPOS [0-9]+ [0,229-1] 1-based leftmost Mate POSition of the clipped sequence
    ISIZE -?[0-9]+ [-229,229] inferred Insert SIZE 5
    SEQ [acgtnACGTN.=]+|\* query SEQuence; = for a match to the reference; n/N/. for ambiguity;
    cases are not maintained 6,7
    QUAL [!-~]+|\* [0,93] query QUALity; ASCII-33 gives the Phred base quality 6,7
    TAG [A-Z][A-Z0-9] TAG
    VTYPE [AifZH] Value TYPE
    VALUE [^\t\n\r]+ match <VTYPE> (space allowed)


Notes:

1. QNAME and FLAG are required for all alignments. If the mapping position of the query is not available, RNAME and CIGAR are set as *, and POS and MAPQ as 0. If the query is unpaired or pairing information is not available, MRNM equals *, and MPOS and ISIZE equal 0. SEQ and QUAL can both be absent, represented as a star *. If QUAL is not a star, it must be of the same length as SEQ.
2. The name of a pair/read is required to be unique in the SAM file, but one pair/read may appear multiple times in different alignment records, representing multiple or split hits. The maximum string length is 254.
3. If SQ is present in the header, RNAME and MRNM must appear in an SQ header record.
4. Field MAPQ considers pairing in calculation if the read is paired. Providing MAPQ is recommended. If such a calculation is difficult, 255 should be applied, indicating the mapping quality is not available.
5. If the two reads in a pair are mapped to the same reference, ISIZE equals the difference between the coordinate of
the 5?-end of the mate and of the 5?-end of the current read; otherwise ISIZE equals 0 (by the 5?-end we mean the
5?-end of the original read, so for Illumina short-insert paired end reads this calculates the difference in mapping
coordinates of the outer edges of the original sequenced fragment). ISIZE is negative if the mate is mapped to a
smaller coordinate than the current read.
6. Color alignments are stored as normal nucleotide alignments with additional tags describing the raw color
sequences, qualities and color-specific properties (see also Note 5 in section 2.2.4).
7. All mapped reads are represented on the forward genomic strand. The bases are reverse complemented from the
unmapped read sequence and the quality scores and cigar strings are recorded consistently with the bases. This
applies to information in the mate tags (R2, Q2, S2, etc.) and any other tags that are strand sensitive. The strand
bits in the flag simply indicates whether this reverse complement transform was applied from the original read
sequence to obtain the bases listed in the SAM file.


2.2.2. The <flag> field

Field <flag> is a bitwise flag. The meaning of predefined bits is shown in the following table:

Flag Description
0x0001 the read is paired in sequencing, no matter whether it is mapped in a pair
0x0002 the read is mapped in a proper pair (depends on the protocol, normally inferred during alignment) 1
0x0004 the query sequence itself is unmapped
0x0008 the mate is unmapped 1
0x0010 strand of the query (0 for forward; 1 for reverse strand)
0x0020 strand of the mate 1
0x0040 the read is the first read in a pair 1,2
0x0080 the read is the second read in a pair 1,2
0x0100 the alignment is not primary (a read having split hits may have multiple primary alignment records)
0x0200 the read fails platform/vendor quality checks
0x0400 the read is either a PCR duplicate or an optical duplicate
Notes:
1. Flag 0x02, 0x08, 0x20, 0x40 and 0x80 are only meaningful when flag 0x01 is present.
2. If in a read pair the information on which read is the first in the pair is lost in the upstream analysis, flag 0x01 should be present and 0x40 and 0x80 are both zero.

2.2.3. Extended CIGAR format

A CIGAR string is comprised of a series of operation lengths plus the operations. The conventional CIGAR format allows
for three types of operations: M for match or mismatch, I for insertion and D for deletion. The extended CIGAR format
further allows four more operations, as is shown in the following table, to describe clipping, padding and splicing:
op Description
M Alignment match (can be a sequence match or mismatch)
I Insertion to the reference
D Deletion from the reference
N Skipped region from the reference
S Soft clip on the read (clipped sequence present in <seq>)
H Hard clip on the read (clipped sequence NOT present in <seq>)
P Padding (silent deletion from the padded reference sequence)


2.2.4. Format of optional fields
Optional fields are in the format: <TAG>:<VTYPE>:<VALUE>. Each tag is encoded in two alphanumeric characters and
appears only once for an alignment. The <VTYPE> follows Perl?s rule (see also perldoc -f pack). Valid types in SAM are:

Type Description
A Printable character
i Signed 32-bit integer
f Single-precision float number
Z Printable string
H Hex string (high nybble first)
Predefined tags are shown in the following table. You can freely add new tags, and if a new tag may be of general
interest, you can email samtools-help@lists.sourceforge.net to add the new tag to the specification. Note that tags
started with ?X?, ?Y? and ?Z? are reserved for local use and will not be formally defined in any future version of this
specification.
Tag Type Description
X? ? Reserved fields for end users (together with Y? and Z?)
RG Z Read group. Value matches the header RG-ID tag if @RG is present in the header.
LB Z Library. Value should be consistent with the header RG-LB tag if @RG is present.


Tag Type Description

PU Z Platform unit. Value should be consistent with the header RG-PU tag if @RG is present.
PG Z Program that generates the alignment; match the header PG-ID tag if @PG is present.
AS i Alignment score generated by aligner
SQ H Encoded base probabilities for the suboptimal bases at each position (deprecated by E2 and U2) 1
OQ Z Original base quality. Encoded in the same wasy as QUAL.
E2 Z The 2nd most likely base base call.
U2 Z Phred-scaled log-lk ratio of the 2nd to the 3rd most likely base calls. Encoding is the same as QUAL.
MQ i The mapping quality score the mate alignment
NM i Number of nucleotide differences (i.e. edit distance to the reference sequence) 2
H0 i Number of perfect hits 2
H1 i Number of 1-difference hits (an in/del counted as a difference) 2
H2 i Number of 2-difference hits (an in/del counted as a difference) 2
UQ i Phred likelihood of the read sequence, conditional on the mapping location being correct 5
PQ i Phred likelihood of the read pair, conditional on both the mapping locations being correct 5
NH i Number of reported alignments that contains the query in the current record
IH i Number of stored alignments in SAM that contains the query in the current record
HI i Query hit index, indicating the alignment record is the i-th one stored in SAM
MD Z String for mismatching positions in the format of [0-9]+(([ACGTN]|\^[ACGTN]+)[0-9]+)* 2,3
CS Z Color read sequence on the same strand as the reference 4
CQ Z Color read quality on the same strand as the reference; encoded in the same way as <QUAL> 4
CM i Number of color differences 2
R2 Z Sequence of the mate.
Q2 Z Phred quality for the mate (encoding is the same as <QUAL>).
S2 H Encoded base probabilities for the other 3 bases for the mate-pair read. Same encoding as SQ 1
CC Z Reference name of the next hit; = for the same chromosome
CP i Leftmost coordinate of the next hit
SM i Mapping quality if the read is mapped as a single read rather than as a read pair
AM i Smaller single-end mapping quality of the two reads in a pair
MF i MAQ pair flag (MAQ specific)


Notes:

1. In the SQ field, the highest 2 bits give the second most likely base; the next 6 bits give the phred scaled log likelihood
ratio of the second to the third most likely base calls. This tag is deprecated by E2 and U2.
2. Edit distance equals the sum of mismatches, gap opens and gap extensions. Mismatches or gaps in clipped sequences are not counted.
3. The MD field aims to achieve SNP/indel calling without looking at the reference. SOAP and Eland SNP callers prefer
such information. For example, a string 10A5^AC6 means from the leftmost reference base in the alignment, there
are 10 matches followed by an A on the reference which is different from the aligned read base; the next 5 reference
bases are matches followed by a 2bp deletion from the reference; the deleted sequence is AC; the last 6 bases are
matches. The MD field should match the CIGAR string, although an SAM parser may not check this optional field.
4. On a raw SOLiD read, the first nucleotide is the primer base and the first color is the one between the primer base
and the first nucleotide from the sample being sequenced. The primer base and the first color must be present in CS.
5. On the assumption that each base on a read is independent, UQ equals the sum of phred scores at mismatch
positions, plus a term for the indels in the alignment. Tag PQ further includes the phred likelihood of insert size.
6. Some bases from reads generated by Complete Genomics may come from the same nucleotide. The SEQ and QUAL
fields always store the flattened sequence and quality in that bases and qualities from the same nucleotide are
collapsed to one. The three optional tags GS/GQ/GC describes how to generate the raw read. For example, given a
raw read AAACGCGAAAA, ?CG? starting from 4th and 6th position come from the same oligonucleotide. Suppose this
read is mapped without gaps. In SAM, the read alignment is stored as: SEQ=AAACGAAAA, CIGAR=9M, GS:Z:CGCG,
and GC:Z:3S2G4S, where GS keeps the bases in the overlap and GC says that to get the raw read sequence, we
need to copy 3 bases from SEQ, copy 2+2 bases from GS and then copy 4 bases from the SEQ field again.



-->
</entry>



<entry [Sun Mar 21 04:36:26 EDT 2010] CREATED samindex.pl TO GENERATE SAMTOOLS INDEX FILES (USED FOR SAM-BAM CONVERSION)>




chmod 755 /nethome/bioinfo/apps/agua/0.4/bin/apps/samindex.pl
/nethome/bioinfo/apps/agua/0.4/bin/apps/samindex.pl \
--inputdir /nethome/bioinfo/data/sequence/chromosomes/mouse/mm9/bowtie \
--outputdir /nethome/bioinfo/data/sequence/chromosomes/mouse/mm9/samtools

    Run time: 00:02:17
    Completed /nethome/bioinfo/apps/agua/0.4/bin/apps/samindex.pl
    5:48AM, 21 March 2010
    ****************************************


ll /nethome/bioinfo/data/sequence/chromosomes/mouse/mm9/samtools

    -rw-rw-rw- 1 syoung bioinfo   27 Mar 21 05:47 chr10.fa.fai
    -rw-rw-rw- 1 syoung bioinfo   24 Mar 21 05:47 chr10.fai
    -rw-rw-rw- 1 syoung bioinfo   27 Mar 21 05:47 chr11.fa.fai
    -rw-rw-rw- 1 syoung bioinfo   24 Mar 21 05:47 chr11.fai
    -rw-rw-rw- 1 syoung bioinfo   27 Mar 21 05:47 chr12.fa.fai
    -rw-rw-rw- 1 syoung bioinfo   24 Mar 21 05:47 chr12.fai
    -rw-rw-rw- 1 syoung bioinfo   27 Mar 21 05:47 chr13.fa.fai
    -rw-rw-rw- 1 syoung bioinfo   24 Mar 21 05:47 chr13.fai
    -rw-rw-rw- 1 syoung bioinfo   32 Mar 21 05:47 chr13_random.fa.fai
    -rw-rw-rw- 1 syoung bioinfo   29 Mar 21 05:47 chr13_random.fai
    -rw-rw-rw- 1 syoung bioinfo   27 Mar 21 05:47 chr14.fa.fai
    -rw-rw-rw- 1 syoung bioinfo   24 Mar 21 05:47 chr14.fai
    ...


</entry>



<entry [Sun Mar 21 04:35:26 EDT 2010] GET SNPS USING SAMTOOLS>



http://bowtie-bio.sourceforge.net/tutorial.shtml
http://samtools.sourceforge.net/samtools.shtml


SYNOPSIS
    
    samtools view -bt ref_list.txt -o aln.bam aln.sam.gz
    
    samtools sort aln.bam aln.sorted
    
    samtools index aln.sorted.bam
    
    samtools view aln.sorted.bam chr2:20,100,000-20,200,000
    
    samtools merge out.bam in1.bam in2.bam in3.bam
    
    samtools faidx ref.fasta
    
    samtools pileup -f ref.fasta aln.sorted.bam
    
    samtools tview aln.sorted.bam ref.fasta


WORKFLOW

1. CREATE <in.ref_list> FILE FOR USE CONVERTING SAM TO BAM
==========================================================

cd /nethome/bioinfo/data/sequence/chromosomes/human-fa

/nethome/syoung/base/apps/samtools/0.1.6/samtools faidx chr1.fa
/nethome/syoung/base/apps/samtools/0.1.6/samtools faidx chr2.fa
/nethome/syoung/base/apps/samtools/0.1.6/samtools faidx chr3.fa
/nethome/syoung/base/apps/samtools/0.1.6/samtools faidx chr4.fa
/nethome/syoung/base/apps/samtools/0.1.6/samtools faidx chr5.fa
/nethome/syoung/base/apps/samtools/0.1.6/samtools faidx chr6.fa
/nethome/syoung/base/apps/samtools/0.1.6/samtools faidx chr7.fa
/nethome/syoung/base/apps/samtools/0.1.6/samtools faidx chr8.fa
/nethome/syoung/base/apps/samtools/0.1.6/samtools faidx chr9.fa
/nethome/syoung/base/apps/samtools/0.1.6/samtools faidx chr10.fa
/nethome/syoung/base/apps/samtools/0.1.6/samtools faidx chr11.fa
/nethome/syoung/base/apps/samtools/0.1.6/samtools faidx chr12.fa
/nethome/syoung/base/apps/samtools/0.1.6/samtools faidx chr13.fa
/nethome/syoung/base/apps/samtools/0.1.6/samtools faidx chr14.fa
/nethome/syoung/base/apps/samtools/0.1.6/samtools faidx chr15.fa
/nethome/syoung/base/apps/samtools/0.1.6/samtools faidx chr16.fa
/nethome/syoung/base/apps/samtools/0.1.6/samtools faidx chr17.fa
/nethome/syoung/base/apps/samtools/0.1.6/samtools faidx chr18.fa
/nethome/syoung/base/apps/samtools/0.1.6/samtools faidx chr19.fa
/nethome/syoung/base/apps/samtools/0.1.6/samtools faidx chr20.fa
/nethome/syoung/base/apps/samtools/0.1.6/samtools faidx chr21.fa
/nethome/syoung/base/apps/samtools/0.1.6/samtools faidx chr22.fa
/nethome/syoung/base/apps/samtools/0.1.6/samtools faidx chrX.fa
/nethome/syoung/base/apps/samtools/0.1.6/samtools faidx chrY.fa


WHICH CREATES FILES LIKE THIS:

cat /nethome/bioinfo/data/sequence/chromosomes/human-fa/chr1.fa.fai
    
    chr1.fa 247249719       6       50      51

cat /nethome/bioinfo/data/sequence/chromosomes/human-fa/chr2.fa.fai

    chr2    242951149       6       50      51


REPLACE chr1 WITH chr1.fa IN INDEX FILES TO AVOID THIS ERROR WHEN GENERATING BAM FILE:

    [sam_read1] reference 'chr1.fa' is recognized as '*'.


cd /nethome/bioinfo/data/sequence/chromosomes/human-fa
cp chr1.fa.fai chr1.fai
cp chr2.fa.fai chr2.fai
cp chr3.fa.fai chr3.fai
cp chr4.fa.fai chr4.fai
cp chr5.fa.fai chr5.fai
cp chr6.fa.fai chr6.fai
cp chr7.fa.fai chr7.fai
cp chr8.fa.fai chr8.fai
cp chr9.fa.fai chr9.fai
cp chr10.fa.fai chr10.fai
cp chr11.fa.fai chr11.fai
cp chr12.fa.fai chr12.fai
cp chr13.fa.fai chr13.fai
cp chr14.fa.fai chr14.fai
cp chr15.fa.fai chr15.fai
cp chr16.fa.fai chr16.fai
cp chr17.fa.fai chr17.fai
cp chr18.fa.fai chr18.fai
cp chr19.fa.fai chr19.fai
cp chr20.fa.fai chr20.fai
cp chr21.fa.fai chr21.fai
cp chr22.fa.fai chr22.fai
cp chrX.fa.fai chrX.fai
cp chrY.fa.fai chrY.fai


CONVERT WITH sed

cat chr2.fa.fai
    
    chr2    242951149       6       50      51

sed -e 's/\(chr[A-Z0-9]*\)/\1.fa/' chr2.fa.fai 
    
    chr2.fa 242951149       6       50      51


sed -e 's/\(chr[A-Z0-9]*\)/\1.fa/' < chr1.fa.fai > TMP; mv -f TMP  chr1.fa.fai
sed -e 's/\(chr[A-Z0-9]*\)/\1.fa/' < chr2.fa.fai > TMP; mv -f TMP  chr2.fa.fai
sed -e 's/\(chr[A-Z0-9]*\)/\1.fa/' < chr3.fa.fai > TMP; mv -f TMP  chr3.fa.fai
sed -e 's/\(chr[A-Z0-9]*\)/\1.fa/' < chr4.fa.fai > TMP; mv -f TMP  chr4.fa.fai
sed -e 's/\(chr[A-Z0-9]*\)/\1.fa/' < chr5.fa.fai > TMP; mv -f TMP  chr5.fa.fai
sed -e 's/\(chr[A-Z0-9]*\)/\1.fa/' < chr6.fa.fai > TMP; mv -f TMP  chr6.fa.fai
sed -e 's/\(chr[A-Z0-9]*\)/\1.fa/' < chr7.fa.fai > TMP; mv -f TMP  chr7.fa.fai
sed -e 's/\(chr[A-Z0-9]*\)/\1.fa/' < chr8.fa.fai > TMP; mv -f TMP  chr8.fa.fai
sed -e 's/\(chr[A-Z0-9]*\)/\1.fa/' < chr9.fa.fai > TMP; mv -f TMP  chr9.fa.fai
sed -e 's/\(chr[A-Z0-9]*\)/\1.fa/' < chr10.fa.fai > TMP; mv -f TMP  chr10.fa.fai
sed -e 's/\(chr[A-Z0-9]*\)/\1.fa/' < chr11.fa.fai > TMP; mv -f TMP  chr11.fa.fai
sed -e 's/\(chr[A-Z0-9]*\)/\1.fa/' < chr12.fa.fai > TMP; mv -f TMP  chr12.fa.fai
sed -e 's/\(chr[A-Z0-9]*\)/\1.fa/' < chr13.fa.fai > TMP; mv -f TMP  chr13.fa.fai
sed -e 's/\(chr[A-Z0-9]*\)/\1.fa/' < chr14.fa.fai > TMP; mv -f TMP  chr14.fa.fai
sed -e 's/\(chr[A-Z0-9]*\)/\1.fa/' < chr15.fa.fai > TMP; mv -f TMP  chr15.fa.fai
sed -e 's/\(chr[A-Z0-9]*\)/\1.fa/' < chr16.fa.fai > TMP; mv -f TMP  chr16.fa.fai
sed -e 's/\(chr[A-Z0-9]*\)/\1.fa/' < chr17.fa.fai > TMP; mv -f TMP  chr17.fa.fai
sed -e 's/\(chr[A-Z0-9]*\)/\1.fa/' < chr18.fa.fai > TMP; mv -f TMP  chr18.fa.fai
sed -e 's/\(chr[A-Z0-9]*\)/\1.fa/' < chr19.fa.fai > TMP; mv -f TMP  chr19.fa.fai
sed -e 's/\(chr[A-Z0-9]*\)/\1.fa/' < chr20.fa.fai > TMP; mv -f TMP  chr20.fa.fai
sed -e 's/\(chr[A-Z0-9]*\)/\1.fa/' < chr21.fa.fai > TMP; mv -f TMP  chr21.fa.fai
sed -e 's/\(chr[A-Z0-9]*\)/\1.fa/' < chr22.fa.fai > TMP; mv -f TMP  chr22.fa.fai
sed -e 's/\(chr[A-Z0-9]*\)/\1.fa/' < chrX.fa.fai > TMP; mv -f TMP  chrX.fa.fai
sed -e 's/\(chr[A-Z0-9]*\)/\1.fa/' < chrY.fa.fai > TMP; mv -f TMP  chrY.fa.fai



cat *fa.fai

    chr10.fa        135374737       7       50      51
    chr11.fa        134452384       7       50      51
    chr12.fa        132349534       7       50      51
    chr13.fa        114142980       7       50      51
    chr14.fa        106368585       7       50      51
    chr15.fa        100338915       7       50      51
    chr16.fa        88827254        7       50      51
    chr17.fa        78774742        7       50      51
    chr18.fa        76117153        7       50      51
    chr19.fa        63811651        7       50      51
    chr1.fa 247249719       6       50      51
    chr20.fa        62435964        7       50      51
    chr21.fa        46944323        7       50      51
    chr22.fa        49691432        7       50      51
    chr2.fa 242951149       6       50      51
    chr3.fa 199501827       6       50      51
    chr4.fa 191273063       6       50      51
    chr5.fa 180857866       6       50      51
    chr6.fa 170899992       6       50      51
    chr7.fa 158821424       6       50      51
    chr8.fa 146274826       6       50      51
    chr9.fa 140273252       6       50      51
    chrX.fa 154913754       6       50      51
    chrY.fa 57772954        6       50      51
    


[syoung@u02 human-fa]$ md5sum * > md5sum.txt 
[syoung@u02 human-fa]$ cat md5sum.txt 
b4b63e6697b748d836300ae447d480cd  chr10.fa
5511623c53574997e3b51ccf380dfbc4  chr10.fa.fai
56177c28cf32f1b1f83bb0747e389ed3  chr10.fai
affbfc8936df255da50bdea49ece79a7  chr11.fa
cd130052a25a9e94bf801af04c217e2c  chr11.fa.fai
e3d2f8d12792d0496c423a595185774f  chr11.fai
d17e42fe2a022cd0cf78ec6717c7d30b  chr12.fa
96f5ecf3d08ef18a87e0c7e31214baec  chr12.fa.fai
7a048f6e2e16f160de24e654c2dbebed  chr12.fai
f1d9b4b54dee81b50911545f3932222d  chr13.fa
8f10b3c47c4077a0adbf5fd7900e5824  chr13.fa.fai
045b3aa6c1c6aec3b3fa3b200a480e19  chr13.fai
6fcddce40baefbe57a69fada54149538  chr14.fa
f1a47c999aac536e0400b3c8262f7876  chr14.fa.fai
2c5b08201fdb61b03e748d903f6ca5cf  chr14.fai
36dd7723b07e76cf56ef82fc4d02fb09  chr15.fa
40a2c90b6932f60a8184a1d871fb6e94  chr15.fa.fai
865b968d06e13bdeb4c37269b9133751  chr15.fai
45695e8c9563500879d1b972667199cc  chr16.fa
6a775ae2dbd37cb0d3d01099aa5c0d9e  chr16.fa.fai
162663844c15bb5bd558860f3c473143  chr16.fai
ab3d2db8ed27b5e0d572351cc0ea8fef  chr17.fa
6e0bdb6621b2aa2896417645e90abeef  chr17.fa.fai
1eb09edeab0f464424bd7486ef2f1a03  chr17.fai
8a10e48ab8bb2a8cf5244be50db8b668  chr18.fa
d602e2da63319ebf4e144c706f631bca  chr18.fa.fai
f45847a64ca4a00b210ce6815b34c348  chr18.fai
41d5ac54664ef044b2a145ab74870503  chr19.fa
22d9a2f32944a4883d116581bf90c4f6  chr19.fa.fai
fa1db4a7872e5754848e3096a8846145  chr19.fai
d41d8cd98f00b204e9800998ecf8427e  chr1.bfa.fai
c0264c2efacc90e4614a40a25b9a9f42  chr1.fa
7d84c414e6f11ae5b14427a36a4dfda7  chr1.fa.fai
35fb3caa00ee4f25d64d140bff547bde  chr1.fa.fai~
7d84c414e6f11ae5b14427a36a4dfda7  chr1.fai
211463c1f0511ee25fa3ac7e9dc6b6a6  chr20.fa
516ad947982004b74a850b498e6c313d  chr20.fa.fai
83499fffc0e1bf6fb5b06f37bce3a4ee  chr20.fai
c97c702e1932b8dbbc49d1604913344f  chr21.fa
be5c1fc135560557188d82d72938079d  chr21.fa.fai
6fbe446fe2718086baf065b616032e37  chr21.fai
c706c8b2919c41aa658612633dfde567  chr22.fa
5d2344c80bc75bf178be8c24f5adda1a  chr22.fa.fai
5bbaed4458af33f58168e6102c3c38d0  chr22.fai
903096eb9c131326452fdf1bad935714  chr2.fa
8936b2e69bb1efd892775da291429c31  chr2.fa.fai
1cdf2ffe4dbcfddeda973c3ba69b3e5d  chr2.fa.fai~
c41f7cb9e94914f5800aa5b9d36ae4ed  chr2.fa.fai.bkp
c41f7cb9e94914f5800aa5b9d36ae4ed  chr2.fai
1c13c1f341f0a936ce7d908d586d5300  chr3.fa
6bf80130fa6aee6a1ab65f0a71ae2d5b  chr3.fa.fai
3d85b9832bc1f90ada7b28719b0f6cf9  chr3.fai
26e424a8766c154bc802cd3329405f40  chr4.fa
f3be90c4ef24acfad380e38944c03324  chr4.fa.fai
83d0fb72939888f8ee7940ca676070f2  chr4.fai
595689bb5454c665cc4b1e58522f4ac2  chr5.fa
e537faf91fd4cec89cc6d7147086580f  chr5.fa.fai
b78deae1bbd5bc1fd4a9e0e4dc361d10  chr5.fai
0e3a152be1e3fb1255c3edde6fc060d0  chr6.fa
b20f7da02343567a533225e146020784  chr6.fa.fai
ee224c357de6c09cf7bb55a461771bb3  chr6.fai
e024b41321cd6129b4e7e4a3fbca9e12  chr7.fa
8f68349f160ad5d7545c2c4086b114fd  chr7.fa.fai
b4085b3bc959c4f75dec11302b4ea22b  chr7.fai
a2368d1ee8cc426d7f3f3076ec31da25  chr8.fa
85a6555f35c9b59045e18172eefaba61  chr8.fa.fai
c9e3d29819eb463008707fc1c013d38a  chr8.fai
3803169a4cd6f8bd85608160068e4c7a  chr9.fa
fd26f83a004ae1b30ac1e81d0690a874  chr9.fa.fai
a5ceb64d0f4cebc82638322d67205e08  chr9.fai
f37ff1b92b9fa98dd6332b80c8c178bd  chromosome_positions.txt
a0f232f0a302b1127f0b55a5c492f513  chrX.fa
1d1c611afad57d454b3f42e02fe4baf0  chrX.fa.fai
22199c466c4788160b25b7a46ebaf147  chrX.fai
1f588a7d27836d767ed4af7490ba6780  chrY.fa
a31738020e7553639bea223429a2e4b8  chrY.fa.fai
0f5881d510bb31abbc1d4d21e93e05b4  chrY.fai
d41d8cd98f00b204e9800998ecf8427e  md5sum.txt
c9294b1a090968d25ef0c915873db346  README.txt
8df88bacf31c5ff6fa008b7f1bf923a4  README.txt~
[syoung@u02 human-fa]$ 



2. GENERATE THE BAM FILES FROM SAM FILES
========================================
samtools view -bt ref_list.txt -o aln.bam aln.sam.gz


time /nethome/syoung/base/apps/samtools/0.1.6/samtools view -bt \
/nethome/bioinfo/data/sequence/chromosomes/human-fa/chr1.fa.fai \
-o /nethome/syoung/base/pipeline/benchmark/eland/eland1-1000000/1/chr1/export.bam \
/nethome/syoung/base/pipeline/benchmark/eland/eland1-1000000/1/chr1/export.sam

    [sam_header_read2] 1 sequences loaded.

    real    0m13.498s
    user    0m12.849s
    sys     0m0.298s

time /nethome/syoung/base/apps/samtools/0.1.6/samtools view -bt \
/nethome/bioinfo/data/sequence/chromosomes/human-fa/chr1.fa.fai \
-o /nethome/syoung/base/pipeline/benchmark/eland/eland1-1000000/2/chr1/export.bam \
/nethome/syoung/base/pipeline/benchmark/eland/eland1-1000000/2/chr1/export.sam


/nethome/syoung/base/apps/samtools/0.1.6/samtools view -bt \
/nethome/bioinfo/data/sequence/chromosomes/human-fa/chr1.fa.fai \
-o /nethome/syoung/base/pipeline/benchmark/eland/eland1-1000000/3/chr1/export.bam \
/nethome/syoung/base/pipeline/benchmark/eland/eland1-1000000/3/chr1/export.sam

/nethome/syoung/base/apps/samtools/0.1.6/samtools view -bt \
/nethome/bioinfo/data/sequence/chromosomes/human-fa/chr1.fa.fai \
-o /nethome/syoung/base/pipeline/benchmark/eland/eland1-1000000/4/chr1/export.bam \
/nethome/syoung/base/pipeline/benchmark/eland/eland1-1000000/4/chr1/export.sam

/nethome/syoung/base/apps/samtools/0.1.6/samtools view -bt \
/nethome/bioinfo/data/sequence/chromosomes/human-fa/chr1.fa.fai \
-o /nethome/syoung/base/pipeline/benchmark/eland/eland1-1000000/5/chr1/export.bam \
/nethome/syoung/base/pipeline/benchmark/eland/eland1-1000000/5/chr1/export.sam

/nethome/syoung/base/apps/samtools/0.1.6/samtools view -bt \
/nethome/bioinfo/data/sequence/chromosomes/human-fa/chr1.fa.fai \
-o /nethome/syoung/base/pipeline/benchmark/eland/eland1-1000000/6/chr1/export.bam \
/nethome/syoung/base/pipeline/benchmark/eland/eland1-1000000/6/chr1/export.sam

/nethome/syoung/base/apps/samtools/0.1.6/samtools view -bt \
/nethome/bioinfo/data/sequence/chromosomes/human-fa/chr1.fa.fai \
-o /nethome/syoung/base/pipeline/benchmark/eland/eland1-1000000/7/chr1/export.bam \
/nethome/syoung/base/pipeline/benchmark/eland/eland1-1000000/7/chr1/export.sam

/nethome/syoung/base/apps/samtools/0.1.6/samtools view -bt \
/nethome/bioinfo/data/sequence/chromosomes/human-fa/chr1.fa.fai \
-o /nethome/syoung/base/pipeline/benchmark/eland/eland1-1000000/8/chr1/export.bam \
/nethome/syoung/base/pipeline/benchmark/eland/eland1-1000000/8/chr1/export.sam

/nethome/syoung/base/apps/samtools/0.1.6/samtools view -bt \
/nethome/bioinfo/data/sequence/chromosomes/human-fa/chr1.fa.fai \
-o /nethome/syoung/base/pipeline/benchmark/eland/eland1-1000000/9/chr1/export.bam \
/nethome/syoung/base/pipeline/benchmark/eland/eland1-1000000/9/chr1/export.sam

/nethome/syoung/base/apps/samtools/0.1.6/samtools view -bt \
/nethome/bioinfo/data/sequence/chromosomes/human-fa/chr1.fa.fai \
-o /nethome/syoung/base/pipeline/benchmark/eland/eland1-1000000/10/chr1/export.bam \
/nethome/syoung/base/pipeline/benchmark/eland/eland1-1000000/10/chr1/export.sam


ll /nethome/syoung/base/pipeline/benchmark/eland/eland1-1000000/*/chr1/export.sam

-rw-rw-rw- 1 syoung bioinfo 120M Mar 13 18:05 /nethome/syoung/base/pipeline/benchmark/eland/eland1-1000000/10/chr1/export.sam
-rw-rw-rw- 1 syoung bioinfo 100M Mar 13 17:59 /nethome/syoung/base/pipeline/benchmark/eland/eland1-1000000/11/chr1/export.sam
-rw-rw-rw- 1 syoung bioinfo 119M Mar 13 17:53 /nethome/syoung/base/pipeline/benchmark/eland/eland1-1000000/1/chr1/export.sam
-rw-rw-rw- 1 syoung bioinfo 120M Mar 13 17:53 /nethome/syoung/base/pipeline/benchmark/eland/eland1-1000000/2/chr1/export.sam
-rw-rw-rw- 1 syoung bioinfo 120M Mar 13 17:53 /nethome/syoung/base/pipeline/benchmark/eland/eland1-1000000/3/chr1/export.sam
-rw-rw-rw- 1 syoung bioinfo 120M Mar 13 18:05 /nethome/syoung/base/pipeline/benchmark/eland/eland1-1000000/4/chr1/export.sam
-rw-rw-rw- 1 syoung bioinfo 120M Mar 13 18:05 /nethome/syoung/base/pipeline/benchmark/eland/eland1-1000000/5/chr1/export.sam
-rw-rw-rw- 1 syoung bioinfo 120M Mar 13 18:05 /nethome/syoung/base/pipeline/benchmark/eland/eland1-1000000/6/chr1/export.sam
-rw-rw-rw- 1 syoung bioinfo 120M Mar 13 18:05 /nethome/syoung/base/pipeline/benchmark/eland/eland1-1000000/7/chr1/export.sam
-rw-rw-rw- 1 syoung bioinfo 120M Mar 13 18:05 /nethome/syoung/base/pipeline/benchmark/eland/eland1-1000000/8/chr1/export.sam
-rw-rw-rw- 1 syoung bioinfo 120M Mar 13 18:05 /nethome/syoung/base/pipeline/benchmark/eland/eland1-1000000/9/chr1/export.sam


ll /nethome/syoung/base/pipeline/benchmark/eland/eland1-1000000/*/chr1/export.bam

-rw-r--r-- 1 syoung bioinfo 39M Mar 20 02:59 /nethome/syoung/base/pipeline/benchmark/eland/eland1-1000000/10/chr1/export.bam
-rw-r--r-- 1 syoung bioinfo 37M Mar 20 02:57 /nethome/syoung/base/pipeline/benchmark/eland/eland1-1000000/1/chr1/export.bam
-rw-r--r-- 1 syoung bioinfo 38M Mar 20 02:57 /nethome/syoung/base/pipeline/benchmark/eland/eland1-1000000/2/chr1/export.bam
-rw-r--r-- 1 syoung bioinfo 38M Mar 20 02:58 /nethome/syoung/base/pipeline/benchmark/eland/eland1-1000000/3/chr1/export.bam
-rw-r--r-- 1 syoung bioinfo 38M Mar 20 02:58 /nethome/syoung/base/pipeline/benchmark/eland/eland1-1000000/4/chr1/export.bam
-rw-r--r-- 1 syoung bioinfo 38M Mar 20 02:58 /nethome/syoung/base/pipeline/benchmark/eland/eland1-1000000/5/chr1/export.bam
-rw-r--r-- 1 syoung bioinfo 38M Mar 20 02:58 /nethome/syoung/base/pipeline/benchmark/eland/eland1-1000000/6/chr1/export.bam
-rw-r--r-- 1 syoung bioinfo 39M Mar 20 02:59 /nethome/syoung/base/pipeline/benchmark/eland/eland1-1000000/7/chr1/export.bam
-rw-r--r-- 1 syoung bioinfo 39M Mar 20 02:59 /nethome/syoung/base/pipeline/benchmark/eland/eland1-1000000/8/chr1/export.bam
-rw-r--r-- 1 syoung bioinfo 39M Mar 20 02:59 /nethome/syoung/base/pipeline/benchmark/eland/eland1-1000000/9/chr1/export.bam



3. MERGE THE BAM FILES INTO ONE BAM FILE
========================================
samtools merge out.bam in1.bam in2.bam in3.bam


time /nethome/syoung/base/apps/samtools/0.1.6/samtools merge \
/nethome/syoung/base/pipeline/benchmark/eland/eland1-1000000/chr1.bam \
/nethome/syoung/base/pipeline/benchmark/eland/eland1-1000000/1/chr1/export.bam \
/nethome/syoung/base/pipeline/benchmark/eland/eland1-1000000/2/chr1/export.bam \
/nethome/syoung/base/pipeline/benchmark/eland/eland1-1000000/3/chr1/export.bam \
/nethome/syoung/base/pipeline/benchmark/eland/eland1-1000000/4/chr1/export.bam \
/nethome/syoung/base/pipeline/benchmark/eland/eland1-1000000/5/chr1/export.bam \
/nethome/syoung/base/pipeline/benchmark/eland/eland1-1000000/6/chr1/export.bam \
/nethome/syoung/base/pipeline/benchmark/eland/eland1-1000000/7/chr1/export.bam \
/nethome/syoung/base/pipeline/benchmark/eland/eland1-1000000/8/chr1/export.bam \
/nethome/syoung/base/pipeline/benchmark/eland/eland1-1000000/9/chr1/export.bam \
/nethome/syoung/base/pipeline/benchmark/eland/eland1-1000000/10/chr1/export.bam 
    
    real    2m4.821s
    user    1m59.839s
    sys     0m3.602s

ll /nethome/syoung/base/pipeline/benchmark/eland/eland1-1000000/chr1.bam

    -rw-r--r-- 1 syoung bioinfo 382M Mar 20 03:05 /nethome/syoung/base/pipeline/benchmark/eland/eland1-1000000/chr1.bam



4. SORT THE ONE BAM FILE, in preparation for SNP calling
========================================================
samtools sort ec_snp.bam ec_snp.sorted


time /nethome/syoung/base/apps/samtools/0.1.6/samtools sort \
/nethome/syoung/base/pipeline/benchmark/eland/eland1-1000000/chr1.bam \
/nethome/syoung/base/pipeline/benchmark/eland/eland1-1000000/chr1.sorted

    [bam_sort_core] merging from 3 files...


WHICH CREATES THREE INTERMEDIARY FILES:

    -rw-r--r--  1 syoung bioinfo 382M Mar 20 03:05 chr1.bam
    -rw-r--r--  1 syoung bioinfo 140M Mar 20 03:08 chr1.sorted.0000.bam
    -rw-r--r--  1 syoung bioinfo 140M Mar 20 03:09 chr1.sorted.0001.bam
    -rw-r--r--  1 syoung bioinfo  65M Mar 20 03:09 chr1.sorted.0002.bam
    drwxrwxrwx 13 syoung bioinfo 2.0K Mar 20 03:09 .
    -rw-r--r--  1 syoung bioinfo 207M Mar 20  2010 chr1.sorted.bam


AND A FINAL SORTED OUTPUT FILE:

    -rw-r--r--  1 syoung bioinfo 344M Mar 20 03:11 chr1.sorted.bam

WHICH IS SLIGHTLY SMALLER THAN THE ORIGINAL UNSORTED FILE:

    -rw-r--r-- 1 syoung bioinfo 382M Mar 20 03:05 chr1.bam



[***

OR ON LINUX COMMAND LINE:

The SAM file supplied to Cufflinks must be sorted by reference position. If you aligned your reads with TopHat, your alignments will be properly sorted already. If you used another tool, you may want to make sure they are properly sorted as follows:

sort -k 3,3 -k 4,4n hits.sam > hits.sam.sorted

***]



5. CALL SNPS
============
samtools pileup -cv -f genomes/NC_008253.fna ec_snp.sorted.bam





For this sample data, the samtools pileup command should print records for 10 distinct SNPs, the first being at position 541 in the reference. See the SAMtools web site for details on how to use these and other tools in the SAMtools suite.


/nethome/syoung/base/apps/samtools/0.1.6/samtools pileup -cv \
-f /nethome/bioinfo/data/sequence/chromosomes/human-fa/chr1.fa \
/nethome/syoung/base/pipeline/benchmark/eland/eland1-1000000/chr1.sorted.bam \
2> /nethome/syoung/base/pipeline/benchmark/eland/eland1-1000000/chr1.snp.error \
1> /nethome/syoung/base/pipeline/benchmark/eland/eland1-1000000/chr1.snp


WHICH RETURNED 110,000 SNPS:

lines /nethome/syoung/base/pipeline/benchmark/eland/eland1-1000000/chr1.snp

    chr1.snp: 110594

tail /nethome/syoung/base/pipeline/benchmark/eland/eland1-1000000/chr1.snp

    chr1.fa 247188421       g       T       25      25      25      1       ^:t     ?
    chr1.fa 247188432       a       C       25      25      25      1       c       A
    chr1.fa 247188454       c       T       25      25      25      1       t       C
    chr1.fa 247189371       G       T       33      33      42      2       tt      <B
    chr1.fa 247190902       A       G       4       4       4       1       g       @
    chr1.fa 247197433       T       C       69      69      31      14      CCCCCCCCCCCCCC  BBCCACCBCBABBB
    chr1.fa 247197445       C       T       117     117     34      30      TTTTTTTTTTTTTTTTTTTTTTTTT^CT^OT^CT^BT^AT BBCBBCBAB?@<C@BCCCCCCCCCCC9B,C



AND TOOK 46 SECONDS:

    real    0m46.629s
    user    0m45.456s
    sys     0m1.069s



6. VIEW INSIDE BAM FILE (344 MB)
================================
samtools view aln.sorted.bam chr2:20,100,000-20,200,000


CREATE INDEX OF BAM FILE

cd /nethome/syoung/base/pipeline/benchmark/eland/eland1-1000000

/nethome/syoung/base/apps/samtools/0.1.6/samtools index \
/nethome/syoung/base/pipeline/benchmark/eland/eland1-1000000/chr1.sorted.bam

    -rw-r--r--  1 syoung bioinfo 405K Mar 20 03:25 chr1.sorted.bam.bai



RETRIEVED HITS IN 100,000 BP STRETCH OF CHR1

/nethome/syoung/base/apps/samtools/0.1.6/samtools view \
/nethome/syoung/base/pipeline/benchmark/eland/eland1-1000000/chr1.sorted.bam \
chr1.fa:20,100,000-20,200,000 \
> /nethome/syoung/base/pipeline/benchmark/eland/eland1-1000000/chr1.hits.20100000-20200000.txt

    -rw-r--r--  1 syoung bioinfo 9.9K Mar 20 03:28 chr1.hits.20100000-20200000.txt

lines chr1.hits.20100000-20200000.txt 

    chr1.hits.20100000-20200000.txt: 70


TOOK 0.014 SECONDS

    real    0m0.014s
    user    0m0.009s
    sys     0m0.002s




7. VIEW INSIDE BAM FILE (344 MB) ON REMOTE SERVER
=================================================
NB: Samtools checks the current working directory for the index file and will download the index upon absence.


scp /nethome/syoung/base/pipeline/benchmark/eland/eland1-1000000/chr1.sorted.bam syoung@ngsdev.ccs.miami.edu:/var/www/html


time /nethome/syoung/base/apps/samtools/0.1.6/samtools view \
http://ngsdev.ccs.miami.edu/chr1.sorted.bam \
chr1.fa:20,100,000-20,200,000 \
> /nethome/syoung/base/pipeline/benchmark/eland/eland1-1000000/chr1.hits.20100000-20200000.remote.txt

    [knet_seek] only SEEK_SET is supported for FTP/HTTP. Offset is unchanged.
    [bam_header_read] read from pipe; skip EOF checking.

TAIL OF OUTPUT:

    ...
    HWI-EAS185:1:27:967:1388        0       chr1.fa 20183635        14      37M     *       0       0       GGGGAGGCTCGGGCTGTGCAGGAGCCCACGGCGGCGG     A=49AA?B4B?9+>=A6;BB57A4AA>;%%%%%%%%%   MD:Z:14C1C20
    HWI-EAS185:1:26:1565:1044       0       chr1.fa 20183638        30      37M     *       0       0       GAGGCTCGGGCTGTGCAGGAGCCCACGGCGGCGGGGG     =BBBBBBBBABABBBBBABBBBBBA@AAB@B%%%%%%   MD:Z:11C1C20A1A
    HWI-EAS185:1:57:1892:467        16      chr1.fa 20189631        36      37M     *       0       0       ATCACAGAACCTGCCAACATGTGATGTCTGCCCTGGA     %%%>BBBB?BBBBBBBABCBBBBCCBBABBBBBCBCB   MD:Z:7G29
    HWI-EAS185:1:54:1061:1989       0       chr1.fa 20195009        22      37M     *       0       0       TCCATTCCAAGATGGCCGAATAGGAACAGCTCCGGTC     BBBBBBBBBBABBBBBBBBBBB@BBBBBAAABBAA;;   MD:Z:26T10
    HWI-EAS185:1:50:1389:1040       0       chr1.fa 20199236        31      37M     *       0       0       TTTGTGCTGCCCCCACTCGAGAAATATTACTCCAATG     CCCCBCBBABBBBBBBBCBBB@BBBBBBBBBBBBBB<   MD:Z:37


TOOK 104 MILLISECONDS:

    real    0m0.104s
    user    0m0.007s
    sys     0m0.006s


OF WHICH ABOUT (3 x 2) MILLISECONDS WAS TRANPORT THERE AND BACK:

traceroute ngsdev.ccs.miami.edu

    traceroute to ngsdev.ccs.miami.edu (204.68.94.167), 30 hops max, 40 byte packets
     1  10.141.226.1 (10.141.226.1)  0.727 ms  0.896 ms  0.767 ms
     2  10.141.64.1 (10.141.64.1)  1.197 ms  1.615 ms  1.642 ms
     3  ngsdev.ccs.miami.edu (204.68.94.167)  0.462 ms  0.476 ms  0.491 ms



REMOTE VIEW OUTPUT IDENTICAL TO COMMAND LINE OUTPUT:

diff /nethome/syoung/base/pipeline/benchmark/eland/eland1-1000000/chr1.hits.20100000-20200000.txt \
/nethome/syoung/base/pipeline/benchmark/eland/eland1-1000000/chr1.hits.20100000-20200000.remote.txt

    < EMPTY>


8. DO REVERSE CONVERSION, BAM -> SAM
====================================

/nethome/syoung/base/apps/samtools/0.1.6/samtools view \
/nethome/syoung/base/pipeline/benchmark/eland/eland1-1000000/1/chr1/export.bam 

    ...
    HWI-EAS185:1:1:22:764   4       *       0       0       37M     *       0       0       GGAAACCCAGGAAAATACCAAATCCAGATTTCTTTGA  @@BCB=BCCBB?BBCC@1@CCC@BC?CCCCB:?B5A?
    HWI-EAS185:1:1:22:109   4       *       0       0       37M     *       0       0       TCTGTAGCCAGGTGCACCTCAGGCTGCACAAATACCC  CB>>BBBBCBC>6C?C@A?ABAA;+:A=:0+;@B@?B
    ...

OK!!


REFERENCE
=========

http://bowtie-bio.sourceforge.net/tutorial.shtml
http://samtools.sourceforge.net/samtools.shtml

Finding variations with SAMtools

SAMtools is a suite of tools for storing, manipulating, and analyzing alignments such as those output by Bowtie. SAMtools understands alignments in either of two complementary formats: the human-readable SAM format, or the binary BAM format. Because Bowtie can output SAM (using the -S/--sam option), and SAM can can be converted to BAM using SAMtools, Bowtie users can make full use of the analyses implemented in SAMtools, or in any other tools supporting SAM or BAM.
We will use SAMtools to find SNPs in a set of simulated reads included with Bowtie. The reads cover the first 10,000 bases of the pre-built E. coli genome and contain 10 SNPs throughout. First, we run bowtie to align the reads, being sure to specify the -S option. We also specify an output file that we will use as input for the next step (though pipes can be used to accomplish the same thing without the intermediate file):

bowtie -S e_coli reads/e_coli_10000snp.fq ec_snp.sam

Next, we convert the SAM file to BAM in preparation for sorting. We assume that SAMtools is installed and that the samtools binary is accessible in the PATH.

samtools view -bS -o ec_snp.bam ec_snp.sam

Next, we sort the BAM file, in preparation for SNP calling:

samtools sort ec_snp.bam ec_snp.sorted

We now have a sorted BAM file called ec_snp.sorted.bam. Sorted BAM is a useful format because the alignments are both compressed, which is convenient for long-term storage, and sorted, which is conveneint for variant discovery. Finally, we call variants from the Sorted BAM:

samtools pileup -cv -f genomes/NC_008253.fna ec_snp.sorted.bam

For this sample data, the samtools pileup command should print records for 10 distinct SNPs, the first being at position 541 in the reference.
See the SAMtools web site for details on how to use these and other tools in the SAMtools suite.



</entry>
<entry [Sun Mar 14 01:07:23 EST 2010] SAMTOOLS MANUAL>
<!--


http://samtools.sourceforge.net/samtools.shtml
Manual Reference Pages  - samtools (1)
samtools - Utilities for the Sequence Alignment/Map (SAM) format

CONTENTS

Synopsis
Description
Commands And Options
Sam Format
Limitations
Author
See Also

SYNOPSIS

samtools view -bt ref_list.txt -o aln.bam aln.sam.gz

samtools sort aln.bam aln.sorted

samtools index aln.sorted.bam

samtools view aln.sorted.bam chr2:20,100,000-20,200,000

samtools merge out.bam in1.bam in2.bam in3.bam

samtools faidx ref.fasta

samtools pileup -f ref.fasta aln.sorted.bam

samtools tview aln.sorted.bam ref.fasta

DESCRIPTION

Samtools is a set of utilities that manipulate alignments in the BAM format. It imports from and exports to the SAM (Sequence Alignment/Map) format, does sorting, merging and indexing, and allows to retrieve reads in any regions swiftly.

Samtools is designed to work on a stream. It regards an input file - as the standard input (stdin) and an output file - as the standard output (stdout). Several commands can thus be combined with Unix pipes. Samtools always output warning and error messages to the standard error output (stderr).

Samtools is also able to open a BAM (not SAM) file on a remote FTP or HTTP server if the BAM file name starts with ftp:// or http://. Samtools checks the current working directory for the index file and will download the index upon absence. Samtools does not retrieve the entire alignment file unless it is asked to do so.

COMMANDS AND OPTIONS

import	 samtools import <in.ref_list> <in.sam> <out.bam>
Since 0.1.4, this command is an alias of:

samtools view -bt <in.ref_list> -o <out.bam> <in.sam>

sort	 samtools sort [-n] [-m maxMem] <in.bam> <out.prefix>
Sort alignments by leftmost coordinates. File <out.prefix>.bam will be created. This command may also create temporary files <out.prefix>.%d.bam when the whole alignment cannot be fitted into memory (controlled by option -m).

OPTIONS:
-n	 Sort by read names rather than by chromosomal coordinates
-m INT	 Approximately the maximum required memory. [500000000]

merge	 samtools merge [-h inh.sam] [-n] <out.bam> <in1.bam> <in2.bam> [...]
Merge multiple sorted alignments. The header reference lists of all the input BAM files, and the @SQ headers of inh.sam, if any, must all refer to the same set of reference sequences. The header reference list and (unless overridden by -h) @ headers of in1.bam will be copied to out.bam, and the headers of other files will be ignored.

OPTIONS:
-h FILE	 Use the lines of FILE as @ headers to be copied to out.bam, replacing any header lines that would otherwise be copied from in1.bam. (FILE is actually in SAM format, though any alignment records it may contain are ignored.)
-n	 The input alignments are sorted by read names rather than by chromosomal coordinates

index	 samtools index <aln.bam>
Index sorted alignment for fast random access. Index file <aln.bam>.bai will be created.

view	 samtools view [-bhuHS] [-t in.refList] [-o output] [-f reqFlag] [-F skipFlag] [-q minMapQ] [-l library] [-r readGroup] <in.bam>|<in.sam> [region1 [...]]
Extract/print all or sub alignments in SAM or BAM format. If no region is specified, all the alignments will be printed; otherwise only alignments overlapping the specified regions will be output. An alignment may be given multiple times if it is overlapping several regions. A region can be presented, for example, in the following format: chr2 (the whole chr2), chr2:1000000 (region starting from 1,000,000bp) or chr2:1,000,000-2,000,000 (region between 1,000,000 and 2,000,000bp including the end points). The coordinate is 1-based.

OPTIONS:
-b	 Output in the BAM format.
-u	 Output uncompressed BAM. This option saves time spent on compression/decomprssion and is thus preferred when the output is piped to another samtools command.
-h	 Include the header in the output.
-H	 Output the header only.
-S	 Input is in SAM. If @SQ header lines are absent, the -t option is required.
-t FILE	 This file is TAB-delimited. Each line must contain the reference name and the length of the reference, one line for each distinct reference; additional fields are ignored. This file also defines the order of the reference sequences in sorting. If you run samtools faidx <ref.fa>, the resultant index file <ref.fa>.fai can be used as this <in.ref_list> file.
-o FILE	 Output file [stdout]
-f INT	 Only output alignments with all bits in INT present in the FLAG field. INT can be in hex in the format of /^0x[0-9A-F]+/ [0]
-F INT	 Skip alignments with bits present in INT [0]
-q INT	 Skip alignments with MAPQ smaller than INT [0]
-l STR	 Only output reads in library STR [null]
-r STR	 Only output reads in read group STR [null]

faidx	 samtools faidx <ref.fasta> [region1 [...]]
Index reference sequence in the FASTA format or extract subsequence from indexed reference sequence. If no region is specified, faidx will index the file and create <ref.fasta>.fai on the disk. If regions are speficified, the subsequences will be retrieved and printed to stdout in the FASTA format. The input file can be compressed in the RAZF format.

pileup	 samtools pileup [-f in.ref.fasta] [-t in.ref_list] [-l in.site_list] [-iscgS2] [-T theta] [-N nHap] [-r pairDiffRate] <in.bam>|<in.sam>
Print the alignment in the pileup format. In the pileup format, each line represents a genomic position, consisting of chromosome name, coordinate, reference base, read bases, read qualities and alignment mapping qualities. Information on match, mismatch, indel, strand, mapping quality and start and end of a read are all encoded at the read base column. At this column, a dot stands for a match to the reference base on the forward strand, a comma for a match on the reverse strand, ACGTN for a mismatch on the forward strand and acgtn for a mismatch on the reverse strand. A pattern \+[0-9]+[ACGTNacgtn]+ indicates there is an insertion between this reference position and the next reference position. The length of the insertion is given by the integer in the pattern, followed by the inserted sequence. Similarly, a pattern -[0-9]+[ACGTNacgtn]+ represents a deletion from the reference. The deleted bases will be presented as * in the following lines. Also at the read base column, a symbol ^ marks the start of a read segment which is a contiguous subsequence on the read separated by N/S/H CIGAR operations. The ASCII of the character following ^ minus 33 gives the mapping quality. A symbol $ marks the end of a read segment.

If option -c is applied, the consensus base, Phred-scaled consensus quality, SNP quality (i.e. the Phred-scaled probability of the consensus being identical to the reference) and root mean square (RMS) mapping quality of the reads covering the site will be inserted between the reference base and the read bases columns. An indel occupies an additional line. Each indel line consists of chromosome name, coordinate, a star, the genotype, consensus quality, SNP quality, RMS mapping quality, # covering reads, the first alllele, the second allele, # reads supporting the first allele, # reads supporting the second allele and # reads containing indels different from the top two alleles.

OPTIONS:

-s	 Print the mapping quality as the last column. This option makes the output easier to parse, although this format is not space efficient.
-S	 The input file is in SAM.
-i	 Only output pileup lines containing indels.
-f FILE	 The reference sequence in the FASTA format. Index file FILE.fai will be created if absent.
-M INT	 Cap mapping quality at INT [60]
-t FILE	 List of reference names ane sequence lengths, in the format described for the import command. If this option is present, samtools assumes the input <in.alignment> is in SAM format; otherwise it assumes in BAM format.
-l FILE	 List of sites at which pileup is output. This file is space delimited. The first two columns are required to be chromosome and 1-based coordinate. Additional columns are ignored. It is recommended to use option -s together with -l as in the default format we may not know the mapping quality.
-c	 Call the consensus sequence using MAQ consensus model. Options -T, -N, -I and -r are only effective when -c or -g is in use.
-g	 Generate genotype likelihood in the binary GLFv3 format. This option suppresses -c, -i and -s.
-T FLOAT	 The theta parameter (error dependency coefficient) in the maq consensus calling model [0.85]
-N INT	 Number of haplotypes in the sample (>=2) [2]
-r FLOAT	 Expected fraction of differences between a pair of haplotypes [0.001]
-I INT	 Phred probability of an indel in sequencing/prep. [40]



tview	 samtools tview <in.sorted.bam> [ref.fasta]
Text alignment viewer (based on the ncurses library). In the viewer, press ? for help and press g to check the alignment start from a region in the format like chr10:10,000,000.

fixmate	 samtools fixmate <in.nameSrt.bam> <out.bam>
Fill in mate coordinates, ISIZE and mate related flags from a name-sorted alignment.

rmdup	 samtools rmdup <input.srt.bam> <out.bam>
Remove potential PCR duplicates: if multiple read pairs have identical external coordinates, only retain the pair with highest mapping quality. This command ONLY works with FR orientation and requires ISIZE is correctly set.

rmdupse	 samtools rmdupse <input.srt.bam> <out.bam>
Remove potential duplicates for single-ended reads. This command will treat all reads as single-ended even if they are paired in fact.

fillmd	 samtools fillmd [-e] <aln.bam> <ref.fasta>
Generate the MD tag. If the MD tag is already present, this command will give a warning if the MD tag generated is different from the existing tag.

OPTIONS:
-e	 Convert a the read base to = if it is identical to the aligned reference base. Indel caller does not support the = bases at the moment.


SAM FORMAT

SAM is TAB-delimited. Apart from the header lines, which are started with the @ symbol, each alignment line consists of:

Col	Field	Description
1	QNAME	Query (pair) NAME
2	FLAG	bitwise FLAG
3	RNAME	Reference sequence NAME
4	POS	1-based leftmost POSition/coordinate of clipped sequence
5	MAPQ	MAPping Quality (Phred-scaled)
6	CIAGR	extended CIGAR string
7	MRNM	Mate Reference sequence NaMe (= if same as RNAME)
8	MPOS	1-based Mate POSistion
9	ISIZE	Inferred insert SIZE
10	SEQ	query SEQuence on the same strand as the reference
11	QUAL	query QUALity (ASCII-33 gives the Phred base quality)
12	OPT	variable OPTional fields in the format TAG:VTYPE:VALUE

Each bit in the FLAG field is defined as:

Flag	Description
0x0001	the read is paired in sequencing
0x0002	the read is mapped in a proper pair
0x0004	the query sequence itself is unmapped
0x0008	the mate is unmapped
0x0010	strand of the query (1 for reverse)
0x0020	strand of the mate
0x0040	the read is the first read in a pair
0x0080	the read is the second read in a pair
0x0100	the alignment is not primary
0x0200	the read fails platform/vendor quality checks
0x0400	the read is either a PCR or an optical duplicate

LIMITATIONS

o	 Unaligned words used in bam_import.c, bam_endian.h, bam.c and bam_aux.c.
o	 CIGAR operation P is not properly handled at the moment.
o	 In merging, the input files are required to have the same number of reference sequences. The requirement can be relaxed. In addition, merging does not reconstruct the header dictionaries automatically. Endusers have to provide the correct header. Picard is better at merging.
o	 Samtools rmdup does not work for single-end data and does not remove duplicates across chromosomes. Picard is better.

AUTHOR

Heng Li from the Sanger Institute wrote the C version of samtools. Bob Handsaker from the Broad Institute implemented the BGZF library and Jue Ruan from Beijing Genomics Institute wrote the RAZF library. Various people in the 1000Genomes Project contributed to the SAM format specification.

SEE ALSO

Samtools website: <http://samtools.sourceforge.net>


--></entry>



<entry [Tue Mar  9 16:41:54 EST 2010] INSTALL Bio-SamTools>



1. INSTALL Bio-SamTools DEPENDENCIES
2. RE-make SAMTOOLS
3. INSTALL Bio-SamTools

1. INSTALL Bio-SamTools DEPENDENCIES
====================================

INSTALL Module::Build TO AVOID THIS ERROR: "Can't locate Module/Build.pm in @INC"

cd /nethome/syoung/base/apps/samtools/Module-Build-0.3607
perl Build.PL --prefix /nethome/syoung/base/apps/samtools/Bio-SamTools-1.01

./Build
./Build test
./Build install


    Installing /nethome/syoung/base/apps/samtools/Bio-SamTools-1.01/lib/perl5/site_perl/5.8.8/Module/Build.pm
    Installing /nethome/syoung/base/apps/samtools/Bio-SamTools-1.01/lib/perl5/site_perl/5.8.8/Module/Build/Version.pm
    ...


INSTALL ExtUtils::CBuilder TO AVOID THIS ERROR:

perl Build.PL --prefix cd /nethome/syoung/base/apps/samtools/biosamtools/1.0.1

    Warning: ExtUtils::CBuilder not installed or no compiler detected
    Proceeding with configuration, but compilation may fail during Build
    
    Checking prerequisites...
      build_requires:
        !  ExtUtils::CBuilder is not installed


perl Makefile.PL PREFIX=/nethome/syoung/base/apps/samtools/Bio-SamTools-1.01
make
make install
    ...
    Installing /nethome/syoung/base/apps/samtools/Bio-SamTools-1.01/lib/perl5/site_perl/5.8.8/ExtUtils/CBuilder.pm
    Installing /nethome/syoung/base/apps/samtools/Bio-SamTools-1.01/lib/perl5/site_perl/5.8.8/ExtUtils/CBuilder/Base.pm
    
 

INSTALL BIOPERL TO Bio-SamTools FOLDER:

TO AVOID THIS ERROR WHEN BUILDING Bio-SamTools:

    [syoung@u01 Bio-SamTools-1.01]$ ./Build test
        t/01sam....Can't locate Bio/SeqFeature/Lite.pm
        ...
    


ADD THIS TO Build.PL FOR BioPerl SO THAT IT FINDS Module::Build:

use lib "/nethome/syoung/base/apps/samtools/Bio-SamTools-1.01/lib/perl5/site_perl/5.8.8";


cd /nethome/syoung/base/apps/samtools/BioPerl-1.6.1

perl Build.PL --prefix /nethome/syoung/base/apps/samtools/Bio-SamTools-1.01

./Build
./Build test
./Build install

    ...
    rm /usr/lib/perl5/site_perl/5.8.5/Bio/Variation/SNP.pm
    ## Differing version of Bio/Variation/SeqDiff.pm found. You might like to
    rm /usr/lib/perl5/site_perl/5.8.5/Bio/Variation/SeqDiff.pm
    ## Differing version of Bio/Variation/VariantI.pm found. You might like to
    rm /usr/lib/perl5/site_perl/5.8.5/Bio/Variation/VariantI.pm
    ## Differing version of Bio/WebAgent.pm found. You might like to
    rm /usr/lib/perl5/site_perl/5.8.5/Bio/WebAgent.pm
    ## Running 'make install UNINST=1' will unlink all those files for you.


OK!



2. REmake SAMTOOLS ADDING "-fPIC" TO THE 'CFLAGS' LINE
======================================================

http://www.cmake.org/pipermail/cmake/2007-May/014347.html
As a general rule it is not "portable" to link a static library into a 
shared one.
However, on most linux systems this is allowed.   64 bit systems
do not allow this.   If you add -fPIC to your
CFLAGS for the static library it should work, at least with gcc.  

IN OTHER WORDS...

1. When building this module, you get an error like the following:
relocation R_X86_64_32 against `a local symbol' cannot be used when
making a shared object; recompile with -fPIC

To fix this, edit the Makefile in the Samtools distribution by adding
"-fPIC" to the CFLAGS line. It should look like this:

  CFLAGS=       -g -Wall -O2 -fPIC #-m64 #-arch ppc

Then do "make clean; make" in the Samtools directory to recompile the
library. After this you should be able to build this module without
errors.




ALSO EDIT Makefile AGAIN, AND CHANGE THIS:

DFLAGS=         -D_FILE_OFFSET_BITS=64 -D_USE_KNETFILE -D_CURSES_LIB=1

TO THIS:

DFLAGS=         -D_FILE_OFFSET_BITS=64 -D_USE_KNETFILE -D_CURSES_LIB=0

TO AVOID THIS ERROR:

    gcc -c -g -Wall -O2 -fPIC  -D_FILE_OFFSET_BITS=64 -D_USE_KNETFILE -D_CURSES_LIB=1  bam_tview.c -o bam_tview.o
    bam_tview.c:5:20: error: curses.h: No such file or directory
    bam_tview.c:7:2: warning: #warning "_CURSES_LIB=1 but NCURSES_VERSION not defined; tview is NOT compiled"
    bam_tview.c:409:2: warning: #warning "No curses library is available; tview is disabled."
    make[1]: *** [bam_tview.o] Error 1
    make[1]: Leaving directory `/home/syoung/base/apps/samtools/0.1.6'
    make: *** [all-recur] Error 1



make clean

export LD_LIBRARY_PATH=/nethome/syoung/base/apps/libs/samtools/ncurses-5.7
export NCURSES_VERSION=5.7
export PATH=/nethome/syoung/base/apps/libs/samtools/ncurses-5.7:$PATH

make


    gcc -c -g -Wall -O2 -fPIC  -D_FILE_OFFSET_BITS=64 -D_USE_KNETFILE -D_CURSES_LIB=0  bam_tview.c -o bam_tview.o
    bam_tview.c:409:2: warning: #warning "No curses library is available; tview is disabled."
    gcc -c -g -Wall -O2 -fPIC  -D_FILE_OFFSET_BITS=64 -D_USE_KNETFILE -D_CURSES_LIB=0  bam_maqcns.c -o bam_maqcns.o
    gcc -c -g -Wall -O2 -fPIC  -D_FILE_OFFSET_BITS=64 -D_USE_KNETFILE -D_CURSES_LIB=0  bam_plcmd.c -o bam_plcmd.o
    gcc -c -g -Wall -O2 -fPIC  -D_FILE_OFFSET_BITS=64 -D_USE_KNETFILE -D_CURSES_LIB=0  sam_view.c -o sam_view.o
    gcc -c -g -Wall -O2 -fPIC  -D_FILE_OFFSET_BITS=64 -D_USE_KNETFILE -D_CURSES_LIB=0  bam_rmdup.c -o bam_rmdup.o
    gcc -c -g -Wall -O2 -fPIC  -D_FILE_OFFSET_BITS=64 -D_USE_KNETFILE -D_CURSES_LIB=0  bam_rmdupse.c -o bam_rmdupse.o
    gcc -c -g -Wall -O2 -fPIC  -D_FILE_OFFSET_BITS=64 -D_USE_KNETFILE -D_CURSES_LIB=0  bam_mate.c -o bam_mate.o
    gcc -c -g -Wall -O2 -fPIC  -D_FILE_OFFSET_BITS=64 -D_USE_KNETFILE -D_CURSES_LIB=0  bam_stat.c -o bam_stat.o
    gcc -c -g -Wall -O2 -fPIC  -D_FILE_OFFSET_BITS=64 -D_USE_KNETFILE -D_CURSES_LIB=0  bam_color.c -o bam_color.o
    gcc -c -g -Wall -O2 -fPIC  -D_FILE_OFFSET_BITS=64 -D_USE_KNETFILE -D_CURSES_LIB=0  bamtk.c -o bamtk.o
    gcc -c -g -Wall -O2 -fPIC  -D_FILE_OFFSET_BITS=64 -D_USE_KNETFILE -D_CURSES_LIB=0  kaln.c -o kaln.o
    gcc -g -Wall -O2 -fPIC  -o samtools bam_tview.o bam_maqcns.o bam_plcmd.o sam_view.o bam_rmdup.o bam_rmdupse.o bam_mate.o bam_stat.o bam_color.o bamtk.o kaln.o -lm   -lz -L. -lbam
    make[1]: Leaving directory `/home/syoung/base/apps/samtools/0.1.6'
    make[1]: Entering directory `/home/syoung/base/apps/samtools/0.1.6/misc'
    gcc -c -g -Wall -O2 -fPIC  -DMD5SUM_MAIN -o md5sum-lite.o md5.c
    gcc -g -Wall -O2 -fPIC  -o md5sum-lite md5sum-lite.o
    gcc -c -g -Wall -O2 -fPIC  -D_FILE_OFFSET_BITS=64 -D_USE_KNETFILE -D_CURSES_LIB=0  md5.c -o md5.o
    gcc -g -Wall -O2 -fPIC  -c -I.. -o md5fa.o md5fa.c
    gcc -g -Wall -O2 -fPIC  -o md5fa md5.o md5fa.o -lz
    gcc -g -Wall -O2 -fPIC  -o maq2sam-short maq2sam.c -lz
    gcc -g -Wall -O2 -fPIC  -DMAQ_LONGREADS -o maq2sam-long maq2sam.c -lz
    gcc -c -g -Wall -O2 -fPIC  -D_FILE_OFFSET_BITS=64 -D_USE_KNETFILE -D_CURSES_LIB=0  wgsim.c -o wgsim.o
    gcc -g -Wall -O2 -fPIC  -o wgsim wgsim.o -lm
    make[1]: Leaving directory `/home/syoung/base/apps/samtools/0.1.6/misc'






3. INSTALL Bio::SamTools
========================    

VERSION 1.0.1
-------------

export SAMTOOLS=/nethome/syoung/base/apps/samtools/0.1.6
mkdir -p /nethome/syoung/base/apps/samtools/biosamtools/1.0.1
cd /nethome/syoung/base/apps/samtools/Bio-SamTools-1.01
perl Build.PL --prefix /nethome/syoung/base/apps/samtools/biosamtools/1.0.1

    Found /nethome/syoung/base/apps/samtools/0.1.6/bam.h and /nethome/syoung/base/apps/samtools/0.1.6/libbam.a.
    Creating new 'MYMETA.yml' with configuration results
    Creating new 'Build' script for 'Bio-SamTools' version '1.01'

./Build
./Build test        # IGNORE 'EOF marker is absent' ERROR
./Build install
        
    Installing /nethome/syoung/base/apps/samtools/biosamtools/1.0.1/bin/bp_blast2tree.pl
    Installing /nethome/syoung/base/apps/samtools/biosamtools/1.0.1/bin/bp_biblio.pl
    Installing /nethome/syoung/base/apps/samtools/biosamtools/1.0.1/bin/bp_search2tribe.pl
    Installing /nethome/syoung/base/apps/samtools/biosamtools/1.0.1/bin/bp_query_entrez_taxa.pl
    Writing /nethome/syoung/base/apps/samtools/biosamtools/1.0.1/lib64/perl5/site_perl/5.8.8/x86_64-linux-thread-multi/auto/Bio/SamTools/.packlist



VERSION 1.1.4
-------------


ADD THIS TO Build.PL SO THAT IT FINDS Module::Build:

use lib "/nethome/syoung/base/apps/samtools/Bio-SamTools-1.01/lib/perl5/site_perl/5.8.8";


export SAMTOOLS=/nethome/syoung/base/apps/samtools/0.1.6
mkdir -p /nethome/syoung/base/apps/samtools/biosamtools/1.1.4
cd /nethome/syoung/base/apps/samtools/Bio-SamTools-1.14
perl Build.PL --prefix /nethome/syoung/base/apps/samtools/biosamtools/1.1.4


    Found /nethome/syoung/base/apps/samtools/0.1.6/bam.h and /nethome/syoung/base/apps/samtools/0.1.6/libbam.a.
    Creating new 'MYMETA.yml' with configuration results
    Creating new 'Build' script for 'Bio-SamTools' version '1.01'



./Build
./Build test        # IGNORE 'EOF marker is absent' ERROR
./Build install
    
    
    Installing /nethome/syoung/base/apps/samtools/biosamtools/1.1.4/bin/bp_blast2tree.pl
    Installing /nethome/syoung/base/apps/samtools/biosamtools/1.1.4/bin/bp_biblio.pl
    Installing /nethome/syoung/base/apps/samtools/biosamtools/1.1.4/bin/bp_search2tribe.pl
    Installing /nethome/syoung/base/apps/samtools/biosamtools/1.1.4/bin/bp_query_entrez_taxa.pl
    Writing /nethome/syoung/base/apps/samtools/biosamtools/1.1.4/lib64/perl5/site_perl/5.8.8/x86_64-linux-thread-multi/auto/Bio/SamTools/.packlist







TROUBLESHOOTING INSTALL BIO::SAMTOOLS


ERROR:

./Build test

    t/01sam....ok 1/93[bam_header_read] EOF marker is absent.                    
    [fai_load] build FASTA index.
    [bam_header_read] EOF marker is absent.
    t/01sam....dubious                                                           
            Test returned status 9 (wstat 2304, 0x900)
    DIED. FAILED tests 15-93
            Failed 79/93 tests, 15.05% okay
    Failed Test Stat Wstat Total Fail  Failed  List of Failed


SOLUTION:

IGNORE.



ERROR:

./Build

    Building Bio-SamTools
    gcc -shared -O2 -g -pipe -Wall -Wp,-D_FORTIFY_SOURCE=2 -fexceptions -fstack-protector --param=ssp-buffer-size=4 -m64 -mtune=generic -o blib/arch/auto/Bio/DB/Sam/Sam.so lib/Bio/DB/Sam.o -L/nethome/syoung/base/apps/samtools/0.1.6 -lbam -lz
    /usr/bin/ld: /nethome/syoung/base/apps/samtools/0.1.6/libbam.a(bgzf.o): relocation R_X86_64_32 against `a local symbol' can not be used when making a shared object; recompile with -fPIC
    /nethome/syoung/base/apps/samtools/0.1.6/libbam.a: could not read symbols: Bad value
    collect2: ld returned 1 exit status
    error building blib/arch/auto/Bio/DB/Sam/Sam.so from lib/Bio/DB/Sam.o at /nethome/syoung/base/apps/samtools/Bio-SamTools-1.01/lib/perl5/site_perl/5.8.8/ExtUtils/CBuilder/Base.pm line 244.


SOLUTION:

REmake SAMTOOLS ADDING "-fPIC" TO THE 'CFLAGS' LINE (SEE 2. ABOVE)






Bio-SamTools README:



This is a Perl interface to the SAMtools sequence alignment interface.
See http://samtools.sourceforge.net/.

To compile this module, you must first download, unpack and compile
SAMtools 0.1.4 or higher in some accessible directory.

AS OF SAMTOOLS 
VERSION 0.1.4, YOU MUST RUN "make -f makefile.generic" IN THE
DISTRIBUTION DIRECTORY IN ORDER TO CREATE THE REQUIRED libbam.a
LIBRARY FILE.


Then set the environment variable SAMTOOLS to point to this directory
and run:

  perl Build.PL
  ./Build
  ./Build test
  (sudo) ./Build install

If you encounter problems during compiling, you may need to edit
Build.PL so that extra_compiler_flags matches the CFLAGS and DFLAGS
settings in the Samtools Makefile. One issue that several people have
encountered is that 32 bit machines must not have -m64 set, and
vice-versa. Others have needed to add -fPIC to the Samtools CFLAGS
line in order for libbam.a to link properly with this module.

AUTHOR: Lincoln D. Stein <lincoln.stein@gmail.com>

Copyright (c) 2009 Ontario Institute for Cancer Research

This package and its accompanying libraries is free software; you can
redistribute it and/or modify it under the terms of the GPL (either
version 1, or at your option, any later version) or the Artistic
License 2.0.  Refer to LICENSE for the full license text.




</entry>



<entry [Tue Mar  9 14:50:14 EST 2010] UPDATE SAMTOOLS AND SAM FILE FORMAT INDEXED BY GENOMIC POSITION FOR EFFICIENT READ RETRIEVAL>





SAM (Sequence Alignment/Map) format is a generic format for storing large nucleotide sequence alignments. SAM aims to be a format that:

Is flexible enough to store all the alignment information generated by various alignment programs;
Is simple enough to be easily generated by alignment programs or converted from existing alignment formats;
Is compact in file size;
Allows most of operations on the alignment to work on a stream without loading the whole alignment into memory;
Allows the file to be indexed by genomic position to efficiently retrieve all reads aligning to a locus.
SAM Tools provide various utilities for manipulating alignments in the SAM format, including sorting, merging, indexing and generating alignments in a per-position format.

SAMtools is hosted by SourceForge.net. The project page is here. The source codes are available from the download page. You can check out the latest source codes with:



1. GET SAMTOOLS 

cd /nethome/syoung/base/apps/samtools/temp
svn co https://samtools.svn.sourceforge.net/svnroot/samtools/trunk/samtools

         ...
         A    samtools/bgzf.h
         A    samtools/bam_color.c
         Checked out revision 540.
         [syoung@ngsdev temp]$ ll
         
         

2. INSTALL NCURSES LOCALLY

mkdir -p /nethome/syoung/base/apps/libs/samtools/ncurses/5.7
cd /nethome/syoung/base/apps/libs/samtools
wget http://ftp.gnu.org/pub/gnu/ncurses/ncurses-5.7.tar.gz
tar xvfz *tar.gz
cd /nethome/syoung/base/apps/libs/samtools/ncurses-5.7


./configure --prefix=/nethome/syoung/base/apps/libs/samtools/ncurses-5.7

         ...
         make: Warning: File `Makefile' has modification time 68 s in the future
         
         ** Configuration summary for NCURSES 5.7 20081102:
         
              extended funcs: yes
              xterm terminfo: xterm-new
         
               bin directory: /nethome/syoung/base/apps/libs/samtools/ncurses-5.7/bin
               lib directory: /nethome/syoung/base/apps/libs/samtools/ncurses-5.7/lib
           include directory: /nethome/syoung/base/apps/libs/samtools/ncurses-5.7/include/ncurses
               man directory: /nethome/syoung/base/apps/libs/samtools/ncurses-5.7/man
          terminfo directory: /nethome/syoung/base/apps/libs/samtools/ncurses-5.7/share/terminfo
         
         ** Include-directory is not in a standard location
         make: warning:  Clock skew detected.  Your build may be incomplete.

make

make install
         ...
         installing /nethome/syoung/base/apps/libs/samtools/ncurses-5.7/man/man5/terminfo.5.gz
         installing /nethome/syoung/base/apps/libs/samtools/ncurses-5.7/man/man1/tic.1m.gz
         installing /nethome/syoung/base/apps/libs/samtools/ncurses-5.7/man/man1/toe.1m.gz
         installing /nethome/syoung/base/apps/libs/samtools/ncurses-5.7/man/man1/tput.1.gz
         .. installing alias reset.1.gz
         installing /nethome/syoung/base/apps/libs/samtools/ncurses-5.7/man/man1/tset.1.gz
         .. installing alias reset.1.gz
         installing /nethome/syoung/base/apps/libs/samtools/ncurses-5.7/man/man3/wresize.3x.gz
         make[1]: Leaving directory `/nethome/syoung/base/apps/libs/samtools/ncurses-5.7/man'
         cd include && make DESTDIR="" install
         make[1]: Entering directory `/nethome/syoung/base/apps/libs/samtools/ncurses-5.7/include'
         sh ./../mkdirs.sh /nethome/syoung/base/apps/libs/samtools/ncurses-5.7/include/ncurses
         mkdir /nethome/syoung/base/apps/libs/samtools/ncurses-5.7/include/ncurses
         installing term.h in /nethome/syoung/base/apps/libs/samtools/ncurses-5.7/include/ncurses
         installing curses.h in /nethome/syoung/base/apps/libs/samtools/ncurses-5.7/include/ncurses
         installing unctrl.h in /nethome/syoung/base/apps/libs/samtools/ncurses-5.7/include/ncurses
         installing termcap.h in /nethome/syoung/base/apps/libs/samtools/ncurses-5.7/include/ncurses
         installing ./ncurses_dll.h in /nethome/syoung/base/apps/libs/samtools/ncurses-5.7/include/ncurses
         installing ./tic.h in /nethome/syoung/base/apps/libs/samtools/ncurses-5.7/include/ncurses
         installing ./term_entry.h in /nethome/syoung/base/apps/libs/samtools/ncurses-5.7/include/ncurses
         installing ./nc_tparm.h in /nethome/syoung/base/apps/libs/samtools/ncurses-5.7/include/ncurses
         make[1]: Leaving directory `/nethome/syoung/base/apps/libs/samtools/ncurses-5.7/include'
         cd ncurses && make DESTDIR="" install
         make[1]: Entering directory `/nethome/syoung/base/apps/libs/samtools/ncurses-5.7/ncurses'
         installing ../lib/libncurses.a as /nethome/syoung/base/apps/libs/samtools/ncurses-5.7/lib/libncurses.a/usr/bin/install -c -m 644 ../lib/libncurses.a /nethome/syoung/base/apps/libs/samtools/ncurses-5.7/lib/libncurses.a/usr/bin/install: `../lib/libncurses.a' and `/nethome/syoung/base/apps/libs/samtools/ncurses-5.7/lib/libncurses.a' are the same file
         make[1]: *** [install] Error 1
         make[1]: Leaving directory `/nethome/syoung/base/apps/libs/samtools/ncurses-5.7/ncurses'
         make: *** [install] Error 2

[syoung@ngsdev ncurses-5.7]$ ll /nethome/syoung/base/apps/libs/samtools/ncurses-5.7/lib/libncurses.a

         -rw-r--r-- 1 syoung bioinfo 638598 Mar  9 17:21 /nethome/syoung/base/apps/libs/samtools/ncurses-5.7/lib/libncurses.a


ERROR BUT PROBABLY OKAY



3. COMPILE SAMTOOLS

cd /nethome/syoung/base/apps/samtools/temp/samtools
export LD_LIBRARY_PATH=/nethome/syoung/base/apps/libs/samtools/ncurses-5.7
export NCURSES_VERSION=5.7
export PATH=/nethome/syoung/base/apps/libs/samtools/ncurses-5.7:$PATH

make


FAILS AT THIS STAGE REPEATEDLY WITH DIFFERENT COMBINATIONS OF PATHS AND COMMENTED LINES IN MAKEFILE:

make
    make: Warning: File `Makefile' has modification time 90 s in the future
    make[1]: Entering directory `/nethome/syoung/base/apps/samtools/temp/samtools'
    make[1]: Warning: File `Makefile' has modification time 90 s in the future
    gcc -g -Wall -O2  -o samtools  libbam.a -lm   -lz
    /usr/lib/gcc/x86_64-redhat-linux/4.1.2/../../../../lib64/crt1.o: In function `_start':
    (.text+0x20): undefined reference to `main'
    collect2: ld returned 1 exit status
    make[1]: *** [samtools] Error 1
    make[1]: Leaving directory `/nethome/syoung/base/apps/samtools/temp/samtools'
    make: *** [all-recur] Error 1

make
    make: Warning: File `Makefile' has modification time 62 s in the future
    make[1]: Entering directory `/nethome/syoung/base/apps/samtools/temp/samtools'
    make[1]: Warning: File `Makefile' has modification time 62 s in the future
    gcc -g -Wall -O2  -o samtools  libbam.a -lm   -lz
    /usr/lib/gcc/x86_64-redhat-linux/4.1.2/../../../../lib64/crt1.o: In function `_start':
    (.text+0x20): undefined reference to `main'
    collect2: ld returned 1 exit status
    make[1]: *** [samtools] Error 1
    make[1]: Leaving directory `/nethome/syoung/base/apps/samtools/temp/samtools'
    make: *** [all-recur] Error 1


cd /nethome/syoung/base/apps/samtools/temp/samtools


gcc -g -Wall -O2  -o samtools  libbam.a -lm  -L/nethome/syoung/base/apps/libs/samtools/ncurses-5.7/lib -lcurses  -lz



SOLUTION:

USE samtools/0.1.6 FOR NOW.

TRY AGAIN LATER WITH EARLIER VERSION OF libcurses:

wget http://ftp.gnu.org/pub/gnu/ncurses/ncurses-5.6.tar.gz 





PROBLEM:

    [syoung@ngsdev samtools]$ make
    make[1]: Entering directory `/nethome/syoung/base/apps/samtools/temp/samtools'
    gcc -c -g -Wall -O2  -D_FILE_OFFSET_BITS=64 -D_USE_KNETFILE -D_CURSES_LIB=1  bam_tview.c -o bam_tview.o
    bam_tview.c:5:20: error: curses.h: No such file or directory
    bam_tview.c:7:2: warning: #warning "_CURSES_LIB=1 but NCURSES_VERSION not defined; tview is NOT compiled"
    bam_tview.c:409:2: warning: #warning "No curses library is available; tview is disabled."
    make[1]: *** [bam_tview.o] Error 1
    make[1]: Leaving directory `/nethome/syoung/base/apps/samtools/temp/samtools'
    make: *** [all-recur] Error 1


SOLUTION:

CREATE A LINK TO libcurses.a FROM libncurses.a IN THE lib DIRECTORY AND USE THE -L ARGUMENT FOR make

cd /nethome/syoung/base/apps/libs/samtools/ncurses-5.7/lib
ln -s libncurses.a libcurses.a
ln -s libncurses++.a libcurses++.a
ln -s libncurses_g.a libcurses_g.a

[syoung@ngsdev lib]$ ll
    lrwxrwxrwx  1 syoung bioinfo   12 Mar  9 20:48 libcurses.a -> libncurses.a
    lrwxrwxrwx  1 syoung bioinfo   14 Mar  9  2010 libcurses++.a -> libncurses++.a
    lrwxrwxrwx  1 syoung bioinfo   14 Mar  9  2010 libcurses_g.a -> libncurses_g.a
    -rw-r--r--  1 syoung bioinfo 123K Mar  9 17:23 libform.a
    -rw-r--r--  1 syoung bioinfo 726K Mar  9 17:23 libform_g.a
    -rw-r--r--  1 syoung bioinfo  68K Mar  9 17:23 libmenu.a
    -rw-r--r--  1 syoung bioinfo 394K Mar  9 17:23 libmenu_g.a
    -rw-r--r--  1 syoung bioinfo 624K Mar  9 17:21 libncurses.a
    -rw-r--r--  1 syoung bioinfo 176K Mar  9 17:28 libncurses++.a
    -rw-r--r--  1 syoung bioinfo 3.2M Mar  9 17:22 libncurses_g.a
    -rw-r--r--  1 syoung bioinfo  28K Mar  9 17:23 libpanel.a
    -rw-r--r--  1 syoung bioinfo 164K Mar  9 17:23 libpanel_g.a



gcc -g -Wall -O2  -o samtools  libbam.a -lm  -L/nethome/syoung/base/apps/libs/samtools/ncurses-5.7/lib -lcurses  -lz
/usr/lib/gcc/x86_64-redhat-linux/4.1.2/../../../../lib64/crt1.o: In function `_start':
(.text+0x20): undefined reference to `main'
collect2: ld returned 1 exit status

SO -lcurses IS FOUND BUT AN ERROR OCCURS.


(
    JUST TO CONFIRM, THIS IS THE ERROR WITHOUT USING THE -L ARGUMENT:
    
    [syoung@ngsdev samtools]$ gcc -g -Wall -O2  -o samtools  libbam.a -lm  -lcurses  -lz
    /usr/bin/ld: cannot find -lcurses
    collect2: ld returned 1 exit status
)






I needed to have the flag "-L/usr/X11R6/lib" somewhere before "-lX11" in the offending command.

 


NOTES
=====





cd /nethome/syoung/base/apps/samtools/temp
emacs INSTALL

         System Requirements
         ===================
         
         SAMtools depends on the zlib library <http://www.zlib.net>. The latest
         version 1.2.3 is preferred and with the latest version you can compile
         razip and use it to compress a FASTA file. SAMtools' faidx is able to
         index a razip-compressed FASTA file to save diskspace. Older zlib also
         works with SAMtools, but razip cannot be compiled.
         
         The text-based viewer (tview) requires the GNU ncurses library
         <http://www.gnu.org/software/ncurses/>, which comes with Mac OS X and
         most of the modern Linux/Unix distributions. If you do not have this
         library installed, you can still compile the rest of SAMtools by
         manually modifying one line in Makefile.
         
         
         Compilation
         ===========
         
         Type `make' to compile samtools. If you have zlib >= 1.2.2.1, you can
         compile razip with `make razip'.
         
         
         Installation
         ============
         
         Simply copy `samtools' and other executables/scripts in `misc' to a
         location you want (e.g. a directory in your $PATH). No further
         configurations are required.




</entry>



<entry [Tue Mar  9 14:50:14 EST 2010] SAMTOOLS C API EXAMPLE>


<!--

Wednesday, March 3, 2010
Samtools C example

A simple samtools C api example. This program reads the bam file provided in the first argument and dumps the contents:

#include <stdlib.h>
#include <stdio.h>
   
#include "bam.h"
#include "sam.h"
 
int main(int argc, char *argv[]) {
 
  samfile_t *fp_in = NULL;
  bam1_t *b=NULL;

  fp_in = samopen(argv[1], "rb", 0);

  if(NULL == fp_in) {
     printf("Could not open file\n");
  }
 
  b = bam_init1();
  int pos=0;
  int lastpos=0;

  while(samread(fp_in, b) > 0) {
    lastpos = pos;
    pos = b->core.pos;
         
    if(pos != lastpos) {
      printf("tid  : %d\n",b->core.tid);
      printf("pos  : %d\n",b->core.pos);
      char *name  = bam1_qname(b);
      char *qual  = bam1_qual(b);

      int n=0;
      char *qseq = (char *) malloc(b->core.l_qseq+1);
      char *s   = bam1_seq(b);
      for(n=0;n<(b->core.l_qseq);n++) {
        char v = bam1_seqi(s,n);
        qseq[n] = bam_nt16_rev_table[v];
      }
      qseq[n] = 0;

      printf("name : %s\n",name);
      printf("qseq : %s\n",qseq);
      //printf("s cigar: %s\n",cigar);

      printf("qual :");
      for(n=0;n<(b->core.l_qseq);n++) {
        printf(" %d",qual[n]);
      }
      printf("\n");
    }
    bam_destroy1(b);
    b = bam_init1();
  }
  bam_destroy1(b);

  samclose(fp_in);
  return 0;
}

Posted by new at 7:42 AM 0 comments


--></entry>



<entry [Tue Mar  9 14:49:14 EST 2010] RUN SAMTOOLS WITH MAQ AND BOWTIE>




http://linuxjunk.blogspot.com/2009/08/running-samtools-pileup-on-some-aligned.html

Wednesday, August 5, 2009
Running samtools pileup on some aligned reads

samtools needs a sorted file for pileup.. doesn't give you an error if it isn't sorted so watch out!

./samtools faidx phi.fa
./samtools import ./phi.fa.fai /scratch/nava/lane7.phi.sam /scratch/nava/lane7.phi.bam
./samtools sort /scratch/nava/lane7.phi.bam /scratch/nava/lane7.phi.bam.sort
./samtools pileup -f ./phi.fa /scratch/nava/lane7.phi.bam.sort.bam > pile




http://linuxjunk.blogspot.com/2009/08/attempt-to-use-bowtie-on-simulared.html
Wednesday, August 19, 2009
Simulate dataset with samtools, align with Bowtie, BWA, MAQ and pileup

Place your reference in to phi.fa (phix reference). Bowtie in bowtie subdirectory. Samtools in samtools subdirectory. Bwa in bwa subdirectory. Maq in the maq subdirectory. cd in to each directory and type make to build them. The phix reference I used had additional characters in the reference tag line which confused samtools when used with bwa. The sed in the following script removes them. The script also aligns each end of the simulated pair independently.

#!/bin/bash

#Generate simulated dataset
./samtools/misc/wgsim ./phi.fa ./sim_phi1.fq ./sim_phi2.fq > sim_phi.info

# Bowtie Create binary reference for bowtie
./bowtie/bowtie-build ./phi.fa phi

# Bowtie Align ends independently
./bowtie/bowtie -t phi ./sim_phi1.fq ./sim_phi1.fq.bowtie.align
./bowtie/bowtie -t phi ./sim_phi2.fq ./sim_phi2.fq.bowtie.align

# Bowtie Convert to SAM
./samtools/misc/bowtie2sam.pl ./sim_phi1.fq.bowtie.align > ./sim_phi1.fq.bowtie.align.sam
./samtools/misc/bowtie2sam.pl ./sim_phi2.fq.bowtie.align > ./sim_phi2.fq.bowtie.align.sam

# Clean up SAM reference tags (which in this case were screwy)
sed 's/ Coliphage phiX174, complete genome//' ./sim_phi1.fq.bowtie.align.sam > ./sim_phi1.fq.bowtie.align.sam.clean
sed 's/ Coliphage phiX174, complete genome//' ./sim_phi2.fq.bowtie.align.sam > ./sim_phi2.fq.bowtie.align.sam.clean

# Create sam phi index
./samtools/samtools faidx phi.fa

# Bowtie Convert to BAM
./samtools/samtools import ./phi.fa.fai ./sim_phi1.fq.bowtie.align.sam.clean ./sim_phi1.fq.bowtie.align.bam
./samtools/samtools import ./phi.fa.fai ./sim_phi2.fq.bowtie.align.sam.clean ./sim_phi2.fq.bowtie.align.bam

# Bowtie Sort alignments
./samtools/samtools sort ./sim_phi1.fq.bowtie.align.bam ./sim_phi1.fq.bowtie.align.bam.sorted
./samtools/samtools sort ./sim_phi2.fq.bowtie.align.bam ./sim_phi2.fq.bowtie.align.bam.sorted

# Bowtie Index alignments
./samtools/samtools index ./sim_phi1.fq.bowtie.align.bam.sorted.bam
./samtools/samtools index ./sim_phi2.fq.bowtie.align.bam.sorted.bam

# Bowtie Pileup
./samtools/samtools pileup -cf ./phi.fa ./sim_phi1.fq.bowtie.align.bam.sorted.bam > ./sim_phi1.fq.bowtie.align.pileup
./samtools/samtools pileup -cf ./phi.fa ./sim_phi2.fq.bowtie.align.bam.sorted.bam > ./sim_phi2.fq.bowtie.align.pileup

# Bowtie Filter to SNP locations
./samtools/misc/samtools.pl varFilter -p -D 200000 ./sim_phi1.fq.bowtie.align.pileup &> ./sim_phi1.fq.bowtie.align.pileup.snps
./samtools/misc/samtools.pl varFilter -p -D 200000 ./sim_phi2.fq.bowtie.align.pileup &> ./sim_phi2.fq.bowtie.align.pileup.snps

# BWA Build index
./bwa/bwa index phi.fa

# BWA
./bwa/bwa aln phi.fa sim_phi1.fq > sim_phi1.fq.bwa.align.sai
./bwa/bwa aln phi.fa sim_phi2.fq > sim_phi2.fq.bwa.align.sai

# BWA Convert to SAM
./bwa/bwa samse phi.fa sim_phi1.fq.bwa.align.sai ./sim_phi1.fq > sim_phi1.fq.bwa.align.sam
./bwa/bwa samse phi.fa sim_phi2.fq.bwa.align.sai ./sim_phi2.fq > sim_phi2.fq.bwa.align.sam

# BWA Convert to BAM
./samtools/samtools import ./phi.fa.fai ./sim_phi1.fq.bwa.align.sam ./sim_phi1.fq.bwa.align.bam
./samtools/samtools import ./phi.fa.fai ./sim_phi2.fq.bwa.align.sam ./sim_phi2.fq.bwa.align.bam

# BWA Sort alignments
./samtools/samtools sort ./sim_phi1.fq.bwa.align.bam ./sim_phi1.fq.bwa.align.bam.sorted
./samtools/samtools sort ./sim_phi2.fq.bwa.align.bam ./sim_phi2.fq.bwa.align.bam.sorted

# BWA Index alignments
./samtools/samtools index ./sim_phi1.fq.bwa.align.bam.sorted.bam
./samtools/samtools index ./sim_phi2.fq.bwa.align.bam.sorted.bam

# BWA Pileup
./samtools/samtools pileup -cf ./phi.fa ./sim_phi1.fq.bwa.align.bam.sorted.bam > ./sim_phi1.fq.bwa.align.pileup
./samtools/samtools pileup -cf ./phi.fa ./sim_phi2.fq.bwa.align.bam.sorted.bam > ./sim_phi2.fq.bwa.align.pileup

# BWA Filter to SNP locations
./samtools/misc/samtools.pl varFilter -p -D 200000 ./sim_phi1.fq.bwa.align.pileup &> ./sim_phi1.fq.bwa.align.pileup.snps
./samtools/misc/samtools.pl varFilter -p -D 200000 ./sim_phi2.fq.bwa.align.pileup &> ./sim_phi2.fq.bwa.align.pileup.snps

# MAQ Convert reference to binary fasta format
./maq/maq fasta2bfa ./phi.fa ./phi.bfa

# MAQ Convert reads to binary fastq format
./maq/maq fastq2bfq ./sim_phi1.fq ./sim_phi1.bfq
./maq/maq fastq2bfq ./sim_phi2.fq ./sim_phi2.bfq

# MAQ Align read to the reference
./maq/maq match ./sim_phi1.maq.map ./phi.bfa sim_phi1.bfq
./maq/maq match ./sim_phi2.maq.map ./phi.bfa sim_phi2.bfq

# MAQ Mapcheck
./maq/maq mapcheck phi.bfa sim_phi1.maq.map &> sim_phi1.mapcheck
./maq/maq mapcheck phi.bfa sim_phi2.maq.map &> sim_phi2.mapcheck

# MAQ Call SNPs
./maq/maq assemble ./sim_phi1.maq.cns ./phi.bfa ./sim_phi1.maq.map &> ./sim_phi1.maq.cns.log
./maq/maq assemble ./sim_phi2.maq.cns ./phi.bfa ./sim_phi2.maq.map &> ./sim_phi2.maq.cns.log

# MAQ Build Consensus
./maq/maq cns2fq ./sim_phi1.maq.cns > ./sim_phi1.maq.cns.fq
./maq/maq cns2fq ./sim_phi2.maq.cns > ./sim_phi2.maq.cns.fq

# MAQ Extract SNPs
./maq/maq cns2snp ./sim_phi1.maq.cns > ./sim_phi1.maq.snps
./maq/maq cns2snp ./sim_phi2.maq.cns > ./sim_phi2.maq.snps

# MAQ Alignments to SAM
./samtools/misc/maq2sam-long ./sim_phi1.maq.map > ./sim_phi1.maq.sam
./samtools/misc/maq2sam-long ./sim_phi2.maq.map > ./sim_phi2.maq.sam

# MAQ SAM to BAM
./samtools/samtools import ./phi.fa.fai ./sim_phi1.maq.sam ./sim_phi1.maq.bam
./samtools/samtools import ./phi.fa.fai ./sim_phi2.maq.sam ./sim_phi2.maq.bam

# MAQ Sort alignments
./samtools/samtools sort ./sim_phi1.maq.bam ./sim_phi1.maq.bam.sorted
./samtools/samtools sort ./sim_phi2.maq.bam ./sim_phi2.maq.bam.sorted

# MAQ Index alignments
./samtools/samtools index ./sim_phi1.maq.bam.sorted.bam
./samtools/samtools index ./sim_phi2.maq.bam.sorted.bam

# MAQ Run MAQ alignments against samtools for SNP calling
./samtools/samtools pileup -cf ./phi.fa ./sim_phi1.maq.bam.sorted.bam > ./sim_phi1.maq.pileup
./samtools/samtools pileup -cf ./phi.fa ./sim_phi2.maq.bam.sorted.bam > ./sim_phi2.maq.pileup

# MAQ Filter to SNP locations
./samtools/misc/samtools.pl varFilter -p -D 200000 ./sim_phi1.maq.pileup &> ./sim_phi1.maq.pileup.snps
./samtools/misc/samtools.pl varFilter -p -D 200000 ./sim_phi2.maq.pileup &> ./sim_phi2.maq.pileup.snps





</entry>



<entry [Tue Feb  9 15:17:16 EST 2010] SAMTOOLS SOURCEFORGE HELP AND DEVEL FORUMS>



ALSO SEQANSWERS
MOST RECENT
http://seqanswers.com/forums/showthread.php?t=978&page=10
START
http://seqanswers.com/forums/showthread.php?t=978

HELP FORUM 
http://sourceforge.net/mailarchive/forum.php?forum_name=samtools-help

DEVEL FORUM

http://sourceforge.net/mailarchive/forum.php?forum_name=samtools-devel


</entry>



<entry [Fri Oct 30 13:36:09 EDT 2009] samtools OPTIONS AND FILE FORMATS>

<!--

samtools 

Program: samtools (Tools for alignments in the SAM format)
Version: 0.1.6-19 (r494)

Usage:   samtools <command> [options]

Command: view        SAM<->BAM conversion
         sort        sort alignment file
         pileup      generate pileup output
         faidx       index/extract FASTA
         tview       text alignment viewer
         index       index alignment
         fixmate     fix mate information
         glfview     print GLFv3 file
         flagstat    simple stats
         calmd       recalculate MD/NM tags and '=' bases
         merge       merge sorted alignments
         rmdup       remove PCR duplicates


EXTRACT READS FROM MAQ ALIGNMENT FILE:

samtools view --l

    Usage:   samtools view [options] <in.bam>|<in.sam> [region1 [...]]
    
    Options: -b       output BAM
             -h       print header for the SAM output
             -H       print header only (no alignments)
             -S       input is SAM
             -u       uncompressed BAM output (force -b)
             -x       output FLAG in HEX (samtools-C specific)
             -X       output FLAG in string (samtools-C specific)
             -t FILE  list of reference names and lengths (force -S) [null]
             -T FILE  reference sequence file (force -S) [null]
             -o FILE  output file name [stdout]
             -f INT   required flag, 0 for unset [0]
             -F INT   filtering flag, 0 for unset [0]
             -q INT   minimum mapping quality [0]
             -l STR   only output reads in library STR [null]
             -r STR   only output reads in read group STR [null]
             -?       longer help
    
    Notes:
    
      1. By default, this command assumes the file on the command line is in
         the BAM format and it prints the alignments in SAM. If `-t' is
         applied, the input file is assumed to be in the SAM format. The
         file supplied with `-t' is SPACE/TAB delimited with the first two
         fields of each line consisting of the reference name and the
         corresponding sequence length. The `.fai' file generated by `faidx'
         can be used here. This file may be empty if reads are unaligned.
    
      2. SAM->BAM conversion: `samtools view -bT ref.fa in.sam.gz'.
    
      3. BAM->SAM conversion: `samtools view in.bam'.
    
      4. A region should be presented in one of the following formats:
         `chr1', `chr2:1,000' and `chr3:1000-2,000'. When a region is
         specified, the input alignment file must be an indexed BAM file.
    
      5. Option `-u' is preferred over `-b' when the output is piped to
         another samtools command.
    
      6. In a string FLAG, each character represents one bit with
         p=0x1 (paired), P=0x2 (properly paired), u=0x4 (unmapped),
         U=0x8 (mate unmapped), r=0x10 (reverse), R=0x20 (mate reverse)
         1=0x40 (first), 2=0x80 (second), s=0x100 (not primary), 
         f=0x200 (failure) and d=0x400 (duplicate). Note that `-x' and
         `-X' are samtools-C specific. Picard and older samtools do not
         support HEX or string flags.


RUN fixmate:

samtools fixmate --help

    samtools fixmate <in.nameSrt.bam> <out.nameSrt.bam>




SAM FILE FORMAT:


    Table 1. Mandatory fields in the SAM format
    No. Name Description
    1 QNAME Query NAME of the read or the read pair
    2 FLAG Bitwise FLAG (pairing, strand, mate strand, etc.)
    3 RNAME Reference sequence NAME
    4 POS 1-Based leftmost POSition of clipped alignment
    5 MAPQ MAPping Quality (Phred-scaled)
    6 CIGAR Extended CIGAR string (operations: MIDNSHP)
    7 MRNM Mate Reference NaMe (= if same as RNAME)
    8 MPOS 1-Based leftmost Mate POSition
    9 ISIZE Inferred Insert SIZE
    10 SEQ Query SEQuence on the same strand as the reference
    11 QUAL Query QUALity (ASCII-33=Phred base quality)



SAM FORMAT

    SAM is TAB-delimited. Apart from the header lines, which are started with the @ symbol, each alignment line consists of:

        Col	Field	Description
        1	QNAME	Query (pair) NAME
        2	FLAG	bitwise FLAG
        3	RNAME	Reference sequence NAME
        4	POS	1-based leftmost POSition/coordinate of clipped sequence
        5	MAPQ	MAPping Quality (Phred-scaled)
        6	CIAGR	extended CIGAR string
        7	MRNM	Mate Reference sequence NaMe (= if same as RNAME)
        8	MPOS	1-based Mate POSistion
        9	ISIZE	Inferred insert SIZE
        10	SEQ	query SEQuence on the same strand as the reference
        11	QUAL	query QUALity (ASCII-33 gives the Phred base quality)
        12	OPT	variable OPTional fields in the format TAG:VTYPE:VALUE

    Each bit in the FLAG field is defined as:

        Flag	Description
        0x0001	the read is paired in sequencing
        0x0002	the read is mapped in a proper pair
        0x0004	the query sequence itself is unmapped
        0x0008	the mate is unmapped
        0x0010	strand of the query (1 for reverse)
        0x0020	strand of the mate
        0x0040	the read is the first read in a pair
        0x0080	the read is the second read in a pair
        0x0100	the alignment is not primary
        0x0200	the read fails platform/vendor quality checks
        0x0400	the read is either a PCR or an optical duplicate



-->
</entry>



<entry [Fri Oct 30 13:36:09 EDT 2009] DOWNLOADED AND INSTALLED SAMTOOLS >




DOCUMENTATION

http://samtools.sourceforge.net/samtools.shtml



SAMTOOLS PAPER

http://bioinformatics.oxfordjournals.org/cgi/content/full/25/16/2078

Li H.*, Handsaker B.*, Wysoker A., Fennell T., Ruan J., Homer N., Marth G., Abecasis G., Durbin R. and 1000 Genome Project Data Processing Subgroup (2009) The Sequence alignment/map (SAM) format and SAMtools. Bioinformatics, 25, 2078-9. [PMID: 19505943]



DOWNLOADED FROM SOURCEFORGE:


http://sourceforge.net/projects/samtools/


GOT x86_64 VERSION, WHICH CONTAINS UTILITITES SUCH AS maq2sam-long, ETC.


GOT LATEST VERSION (OF samtools ONLY, NOT maq2sam-long, ETC.) ON KRONOS:

svn co https://samtools.svn.sourceforge.net/svnroot/samtools/trunk/samtools

Beta Release 0.1.6, r453 (2 September, 2009)


INSTALLED ON kronos:

cd /nethome/syoung/base/apps/samtools
make

WHICH CREATED THIS FILE:

-rwxr-xr-x  1 syoung bioinfo 749K Oct 30 13:54 samtools



TEST:

cd /nethome/syoung/base/apps/samtools
cp -r examples/ tmp
cd tmp

cat 00README.txt


    File: ex1.fa
    
    contains two sequences cut from the human genome
    build36. They were exatracted with command:
    
        samtools faidx human_b36.fa 2:2043966-2045540 20:67967-69550
    
    Sequence names were changed manually for simplicity.
    
    
    File: ex1.sam.gz
    
    contains MAQ alignments exatracted with (NB: 40 BP OFFSET FOR READ LENGTH):
    
        (samtools view NA18507_maq.bam 2:2044001-2045500;
        samtools view NA18507_maq.bam 20:68001-69500)
    
    and processed with `samtools fixmate' to make it self-consistent as a
    standalone alignment.

    To try samtools, you may run the following commands:
    
      samtools faidx ex1.fa                 # index the reference FASTA
      samtools import ex1.fa.fai ex1.sam.gz ex1.bam   # SAM->BAM
      samtools index ex1.bam                # index BAM
      samtools tview ex1.bam ex1.fa         # view alignment
      samtools pileup -cf ex1.fa ex1.bam    # pileup and consensus
      samtools pileup -cf ex1.fa -t ex1.fa.fai ex1.sam.gz


../samtools faidx ex1.fa                 # index the reference FASTA

CREATES BINARY FILE: -rw-r--r-- 1 syoung bioinfo   39 Oct 30 13:58 ex1.fa.fai


../samtools import ex1.fa.fai ex1.sam.gz ex1.bam   # SAM->BAM

OUTPUTS: [sam_header_read2] 2 sequences loaded.
CREATES BINARY FILE: -rw-r--r-- 1 syoung bioinfo 124K Oct 30 13:59 ex1.bam


../samtools index ex1.bam                # index BAM

CREATES BINARY FILE: -rw-r--r-- 1 syoung bioinfo   72 Oct 30 14:01 ex1.bam.bai


../samtools tview ex1.bam ex1.fa > ex1.view        # view alignment

NB: DOESN'T PRINT NICELY TO FILE:

cat ex1.view
    [1;81H81^[[1;91H91^[[1;101H101^M
    CACTAGTGGCTCATTGTAAATGTGTGGTTTAACTCGTCCATGGCCCAGCATTAGGGAGCTGTGGACCCTGCAGCCTGGCTGTGGGGGCCGCAGTGGCTGAGGGGTGCAGA\
    G^[[3;1H^[[0;4m^O.............................................................................................

<!--
../samtools pileup -cf ex1.fa ex1.bam   > ex1.pile # pileup and consensus

CREATES TSV FILE:

cat ex1.pile
    seq1    1       C       C       27      0       60      1       ^~.     <
    seq1    2       A       A       27      0       60      1       .       <
    seq1    3       C       C       33      0       60      2       .^~.    <<
    seq1    4       T       T       33      0       60      2       ..      <<
    seq1    5       A       A       36      0       60      3       ..^~.   <<<
    seq1    6       G       G       39      0       60      4       ...^`.  <<<(
    seq1    7       T       T       39      0       60      4       ....    <<<-
    seq1    8       G       G       39      0       60      4       ....    <<<&
    seq1    9       G       G       42      0       60      5       ....^~. <<<-<
    seq1    10      C       C       42      0       60      5       .....   <<<-<
    seq1    11      T       T       42      0       60      5       .....   <<<-<


../samtools pileup -cf ex1.fa -t ex1.fa.fai ex1.sam.gz



VIEW ALIGNMENT STATS:

../samtools flagstat ex1.bam

    3307 in total
    0 QC failure
    0 duplicates
    3271 mapped (98.91%)
    3307 paired in sequencing
    1654 read1
    1653 read2
    3144 properly paired (95.07%)
    3144 with itself and mate mapped
    127 singletons (3.84%)
    0 with mate mapped to a different chr
    0 with mate mapped to a different chr (mapQ>=5)


-->
</entry>






