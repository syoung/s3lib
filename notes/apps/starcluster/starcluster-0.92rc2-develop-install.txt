sudo python setup.py develop --multi-version
sudo: unable to resolve host domU-12-31-38-07-1A-E1
running develop
running egg_info
writing requirements to StarCluster.egg-info/requires.txt
writing StarCluster.egg-info/PKG-INFO
writing top-level names to StarCluster.egg-info/top_level.txt
writing dependency_links to StarCluster.egg-info/dependency_links.txt
reading manifest file 'StarCluster.egg-info/SOURCES.txt'
reading manifest template 'MANIFEST.in'
writing manifest file 'StarCluster.egg-info/SOURCES.txt'
running build_ext
Creating /usr/local/lib/python2.6/dist-packages/StarCluster.egg-link (link to .)
Installing starcluster script to /usr/local/bin

Installed /data/starcluster/0.92rc2

Because this distribution was installed --multi-version, before you can
import modules from this package in an application, you will need to
'import pkg_resources' and then use a 'require()' call similar to one of
these examples, in order to select the desired version:

    pkg_resources.require("StarCluster")  # latest installed version
    pkg_resources.require("StarCluster==0.92rc2")  # this exact version
    pkg_resources.require("StarCluster>=0.92rc2")  # this version or higher

Processing dependencies for StarCluster==0.92rc2
Searching for workerpool==0.9.2
Best match: workerpool 0.9.2
Processing workerpool-0.9.2-py2.6.egg

Using /usr/local/lib/python2.6/dist-packages/workerpool-0.9.2-py2.6.egg

Because this distribution was installed --multi-version, before you can
import modules from this package in an application, you will need to
'import pkg_resources' and then use a 'require()' call similar to one of
these examples, in order to select the desired version:

    pkg_resources.require("workerpool")  # latest installed version
    pkg_resources.require("workerpool==0.9.2")  # this exact version
    pkg_resources.require("workerpool>=0.9.2")  # this version or higher

Searching for boto==2.0b4
Best match: boto 2.0b4
Processing boto-2.0b4-py2.6.egg
Installing bundle_image script to /usr/local/bin
Installing sdbadmin script to /usr/local/bin
Installing lss3 script to /usr/local/bin
Installing route53 script to /usr/local/bin
Installing s3put script to /usr/local/bin
Installing fetch_file script to /usr/local/bin
Installing kill_instance script to /usr/local/bin
Installing pyami_sendmail script to /usr/local/bin
Installing list_instances script to /usr/local/bin
Installing taskadmin script to /usr/local/bin
Installing cq script to /usr/local/bin
Installing launch_instance script to /usr/local/bin
Installing elbadmin script to /usr/local/bin
Installing cfadmin script to /usr/local/bin

Using /usr/local/lib/python2.6/dist-packages/boto-2.0b4-py2.6.egg

Because this distribution was installed --multi-version, before you can
import modules from this package in an application, you will need to
'import pkg_resources' and then use a 'require()' call similar to one of
these examples, in order to select the desired version:

    pkg_resources.require("boto")  # latest installed version
    pkg_resources.require("boto==2.0b4")  # this exact version
    pkg_resources.require("boto>=2.0b4")  # this version or higher

Searching for paramiko==1.7.7.1
Best match: paramiko 1.7.7.1
Processing paramiko-1.7.7.1-py2.6.egg

Using /usr/local/lib/python2.6/dist-packages/paramiko-1.7.7.1-py2.6.egg

Because this distribution was installed --multi-version, before you can
import modules from this package in an application, you will need to
'import pkg_resources' and then use a 'require()' call similar to one of
these examples, in order to select the desired version:

    pkg_resources.require("paramiko")  # latest installed version
    pkg_resources.require("paramiko==1.7.7.1")  # this exact version
    pkg_resources.require("paramiko>=1.7.7.1")  # this version or higher

Searching for pycrypto==2.3
Best match: pycrypto 2.3
Processing pycrypto-2.3-py2.6-linux-x86_64.egg

Using /usr/local/lib/python2.6/dist-packages/pycrypto-2.3-py2.6-linux-x86_64.egg

Because this distribution was installed --multi-version, before you can
import modules from this package in an application, you will need to
'import pkg_resources' and then use a 'require()' call similar to one of
these examples, in order to select the desired version:

    pkg_resources.require("pycrypto")  # latest installed version
    pkg_resources.require("pycrypto==2.3")  # this exact version
    pkg_resources.require("pycrypto>=2.3")  # this version or higher

Finished processing dependencies for StarCluster==0.92rc2
