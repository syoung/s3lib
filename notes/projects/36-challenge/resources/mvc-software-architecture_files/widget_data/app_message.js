Appcelerator.Module.Message={getName:function(){return"appcelerator message"},getDescription:function(){return"message widget"},getVersion:function(){return 1},getSpecVersion:function(){return 1},getAuthor:function(){return"Jeff Haynie"},getModuleURL:function(){return"http://www.appcelerator.org"},isWidget:function(){return true},getWidgetName:function(){return"app:message"},execute:function(I,H,J,F,G){Appcelerator.Module.Message.sendMessage(H)},getAttributes:function(){return[{name:"on",optional:true,description:"May be used to express when the message should be fired (executed)."},{name:"name",optional:false,description:"The name of the message to be fired."},{name:"args",optional:true,description:"The arguement payload of the message."},{name:"version",optional:true,description:"The version attached to the message."},{name:"interval",optional:true,description:"Indicates that an interval (in milliseconds) that the message will continously be fired."}]},buildWidget:function(M,P){var N=P["name"];var O=P["args"];var J=P["version"];var K=P["on"];O=O?String.unescapeXML(O):null;var I=P["interval"];var L={args:O,name:N,scope:M.scope,interval:I,version:J};if(K){return{"position":Appcelerator.Compiler.POSITION_REMOVE,"functions":["execute"],"parameters":L}}else{Appcelerator.Module.Message.sendMessage(L);return{"position":Appcelerator.Compiler.POSITION_REMOVE}}},sendMessage:function(Q){var L=Q.name;var N=Q.args;var O=Q.version;var M=Q.scope;var J=Q.interval;if(N&&N!="null"){var P=Object.evalWithinScope(N,window)}$MQ(L,P,M,O);if(J!=null){var R=parseInt(J);if(R>0){var K=setInterval(function(){if(N&&N!="null"){P=Object.evalWithinScope(N,window)}$MQ(L,P,M,O)},R)}}}};Appcelerator.Core.registerModule("app:message",Appcelerator.Module.Message)