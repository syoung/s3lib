++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++Tue Feb  5 15:56:19 EST 2008CHECK TBLASTX ANNOTATIONS VERSUS BLASTN./blastevalueannotation.pl -d unigenex    Run time: 00:00:59    Completed ./blastevalueannotation.pl    3:51PM, 5 February 2008    ****************************************./blastevalueannotation.pl -d unigenex        Run time: 00:00:07    Completed ./blastevalueannotation.pl    3:51PM, 5 February 2008    ****************************************DO unigeneX===========#### PRINT CONTENTS OF blastevalueannotation TABLE TO FILE (PLUS AN EXTRA COLUMN FOR MANUAL MATCH)./blastevalueannotationverify.pl -d unigenex#### CHECK CONTENTS OF blastevalueannotation TABLEuse unigenex;select targetsource , count(collectionid) from blastevalueannotation group by targetsource ;    +---------------+---------------------+    | targetsource  | count(collectionid) |    +---------------+---------------------+    | swissprot     |                 374 |    | unigene-dog   |                 191 |    | unigene-mouse |                 280 |    | unigene-rat   |                 140 |    +---------------+---------------------+#### STORE BACKUPcp /Users/young/FUNNYBASE/pipeline/unigenex/collection/unigenex.blastevalueannotationverify.tsv /Users/young/FUNNYBASE/thesis/all/chap1/steffen#### COPY TO MANUAL#cp /Users/young/FUNNYBASE/pipeline/unigenex/collection/unigenex.blastevalueannotationverify.tsv /Users/young/FUNNYBASE/pipeline/unigenex/collection/unigenex.blastevalueannotationverifymanual.tsv#### DO MANUAL MATCHINGINPUT:  /Users/young/FUNNYBASE/pipeline/unigenex/collection/unigenex.blastevalueannotationverify.tsvOUTPUT: /Users/young/FUNNYBASE/pipeline/unigenex/collection/unigenex.blastevalueannotationverifymanual.tsv#### LOAD INTO *verifymanual TABLEfle2 /Users/young/FUNNYBASE/pipeline/unigenex/collection/unigenex.blastevalueannotationverifymanual.tsv./arrayloaddata.pl -d unigenex -t blastevalueannotationverifymanual -i /Users/young/FUNNYBASE/pipeline/unigenex/collection/unigenex.blastevalueannotationverifymanual.tsv -s /Users/young/FUNNYBASE/bin/orthologues/sql/create_blastevalueannotationverifymanual.sqlselect count(*) from blastevalueannotationverifymanual;+----------+| count(*) |+----------+|      985 |+----------+DO unigene==========#### PRINT CONTENTS OF blastevalueannotation TABLE TO FILE (PLUS AN EXTRA COLUMN FOR MANUAL MATCH)./blastevalueannotationverify.pl -d unigenex#### CHECK CONTENTS OF blastevalueannotation TABLEuse unigene;select targetsource , count(collectionid) from blastevalueannotation group by targetsource ;    +---------------+---------------------+    | targetsource  | count(collectionid) |    +---------------+---------------------+    | swissprot     |                 498 |    | unigene-dog   |                 252 |    | unigene-mouse |                 113 |    | unigene-rat   |                 120 |    +---------------+---------------------+#### PRINT CONTENTS OF blastevalueannotation TABLE TO FILE./blastevalueannotationverify.pl -d unigene#### STORE BACKUPcp /Users/young/FUNNYBASE/pipeline/unigenex/collection/unigene.blastevalueannotationverify.tsv /Users/young/FUNNYBASE/thesis/all/chap1/steffen#### COPY TO MANUAL#cp /Users/young/FUNNYBASE/pipeline/unigenex/collection/unigene.blastevalueannotationverify.tsv /Users/young/FUNNYBASE/pipeline/unigene/collection/unigenex.blastevalueannotationverifymanual.tsv#### DO MANUAL MATCHINGINPUT:  /Users/young/FUNNYBASE/pipeline/unigenex/collection/unigene.blastevalueannotationverify.tsvOUTPUT: /Users/young/FUNNYBASE/pipeline/unigenex/collection/unigene.blastevalueannotationverifymanual.tsv#### LOAD INTO *verifymanual TABLEfle2 /Users/young/FUNNYBASE/pipeline/unigene/collection/unigene.blastevalueannotationverifymanual.tsv./arrayloaddata.pl -d unigene -t blastevalueannotationverifymanual -i /Users/young/FUNNYBASE/pipeline/unigene/collection/unigene.blastevalueannotationverifymanual.tsv -s /Users/young/FUNNYBASE/bin/orthologues/sql/create_blastevalueannotationverifymanual.sql    select count(*) from blastevalueannotationverifymanual;    +----------+    | count(*) |    +----------+    |      983 |    +----------+./blastevalueannotationverifystats.pl -d unigene    database    matches predictedmatches    mismatches  bad total    unigene-dog     744     178     10      42      252    swissprot       569     3       17      25      498    unigene-mouse   580     14      2       51      113    unigene-rat     606     40      14      19      120    all     801     235     43      137     983./blastevalueannotationverifystats.pl -d unigenex    database    matches predictedmatches    mismatches  bad total    unigene-dog     152     135     9       29      191    unigene-mouse   149     20      6       124     280    swissprot       350     1       10      14      375    unigene-rat     112     41      5       22      140    all     763     197     30      189     986    For the TBLASTX UniGene hits, there were more that had lower E-values than the Swiss-Prot hits compared to the BLASTN UniGene hits against the 1,000 human UniGenes. However, there was a larger number of 'unknown' genes Hi Steffen,I'm sorry I haven't got back to you sooner. I've managed to make time to investigate further TBLASTX versus BLASTN by doing a manual comparison of the lowest E-value hits among the four databases (mouse, dog and rat UniGene and Swiss-Prot) for all 1,000 human UniGenes. It appears that the overall poorer quality of the TBLASTX hits results in a large proportion of poor quality TBLASTX lowest E-value hits where the annotations don't contain any functional information.I've put the results in the third table in the attached file:figure1-tblastx-matches.docI've attached the Excel files I produced in the manual matching step:unigene.blastevalueannotationverifymanual.xls (BLASTN)unigenex.blastevalueannotationverifymanual.xls (TBLASTX)The key for the 'manualmatch' is:0 = mismatch1 = match2 = insufficient information (poor quality)3 = match with 'predicted' in target annotationIt appears that this is a problem of the databases rather than TBLASTX. Given the high number of 'non-functional' TBLASTX annotations, which may or may not be true homologues, I investigated a few of the human UniGene sequences with poor quality best E-value TBLASTX annotations to see if the best TBLASTX hits with actual functional annotation matched the original human UniGene annotations ('functional' column in ungenex...xls file, match = 1, mismatch = 0):unigenex.blastevalueannotationverifymanual-function.xls (TBLASTX)I found that, in many but not all cases, the best 'functional' target annotation does match the query annotation. So TBLASTX does give more hits but at the price of more poor quality annotations, unless a manual or automated filter is used to accept only the best 'functional' annotation.If you have any more questions or comments about this issue or any other topic in Chapters 1, 2 or 3, please let me know.Thanks again for your great questions!Cheers,Stuart.EXTRA NOTES***********Lastly, I checked to see which sequences did not have hits with BLASTN but did have hits with TBLASTX and vice-versa.        SELECT DISTINCT unigenex.collectionblast.collectionid, unigenex.collectionblast.sourceannotation    FROM unigenex.collectionblast    LEFT JOIN unigene.collectionblast    ON    unigenex.collectionblast.collectionid = unigene.collectionblast.collectionid    WHERE unigene.collectionblast.collectionid IS NULL;        +--------------+---------------------------------------------------------------+    | collectionid | sourceannotation                                              |    +--------------+---------------------------------------------------------------+    |            1 | Nucleolar protein 7, 27kDa                                    |    |          277 | Transcription elongation factor B polypeptide 3C (elongin A3) |    |          653 | beta-defensin 136 (DEFB136) mRNA                              |    +--------------+---------------------------------------------------------------+    and which sequences have BLASTN hits but no TBLASTX hits:        SELECT DISTINCT unigene.collectionblast.collectionid, unigene.collectionblast.sourceannotation    FROM unigene.collectionblast    LEFT JOIN unigenex.collectionblast    ON    unigene.collectionblast.collectionid = unigenex.collectionblast.collectionid    WHERE unigenex.collectionblast.collectionid IS NULL;        +--------------+--------------------+    | collectionid | sourceannotation   |    +--------------+--------------------+    |          239 | Defensin, beta 123 |    +--------------+--------------------+CREATE TEMPORARY TABLE blastx SELECT DISTINCT collectionid, sourceannotation FROM unigenex.collectionblast WHERE targetsource != 'swissprot' ;CREATE TEMPORARY TABLE blast SELECT DISTINCT collectionid FROM unigene.collectionblast WHERE targetsource != 'swissprot' ;CREATE TEMPORARY TABLE blastxonlySELECT DISTINCT blastx.collectionid, blastx.sourceannotationFROM blastxLEFT JOIN blastONblastx.collectionid = blast.collectionidWHERE blast.collectionid IS NULL;    +--------------+-----------------------------------------------------------------------------------+    | collectionid | sourceannotation                                                                  |    +--------------+-----------------------------------------------------------------------------------+    |            1 | Nucleolar protein 7, 27kDa                                                        |    |          238 | Ribonuclease, RNase A family, 3 (eosinophil cationic protein)                     |    |          286 | C-type lectin domain family 2, member B                                           |    |          327 | Retinoic acid early transcript 1K pseudogene                                      |    |          371 | Apolipoprotein L, 4                                                               |    |          413 | NADH dehydrogenase (ubiquinone) Fe-S protein 5, 15kDa (NADH-coenzyme Q reductase) |    |          466 | G protein-coupled receptor 177                                                    |    |          571 | nonintegrin platelet receptor for type I collagen mRNA                            |    |          620 | immunoglobulin heavy chain variable region 194-3 mRNA                             |    |          734 | interferon                                                                        |    |          738 | tumor necrosis factor receptor superfamily                                        |    |          743 | mucin (MUC3) mRNA                                                                 |    |          973 | defensin alpha 9 (DEFA9P) pseudogene mRNA                                         |    |          277 | Transcription elongation factor B polypeptide 3C (elongin A3)                     |    |          454 | Peptidase inhibitor 3, skin-derived (SKALP)                                       |    |          653 | beta-defensin 136 (DEFB136) mRNA                                                  |    |          381 | Tetraspanin 32                                                                    |    |          558 | interleukin 4 (IL4)                                                               |    +--------------+-----------------------------------------------------------------------------------+#### *** MYSQL HUNG ***####CREATE TEMPORARY TABLE blastx SELECT DISTINCT collectionid, sourceannotation, targetsource, targetannotation, targetaccession, hitevalueexp, hitevaluedec FROM unigenex.collectionblast WHERE targetsource != 'swissprot' ;############CREATE TEMPORARY TABLE blast SELECT DISTINCT collectionid, sourceannotation, targetsource, targetannotation, targetaccession, hitevalueexp, hitevaluedec FROM unigene.collectionblast WHERE targetsource != 'swissprot' ;############SELECT DISTINCT blastx.collectionid, blastx.sourceannotation, blastx.targetsource, blastx.targetaccession, blastx.targetannotation, blastx.hitevalueexp, blastx.hitevaluedec####FROM blastx####LEFT JOIN blast####ON####blastx.collectionid = blast.collectionid####WHERE blast.collectionid IS NULL####ORDER BY blastx.hitevalueexp, blastx.hitevaluedec;CREATE TEMPORARY TABLE blastxonlySELECT DISTINCT blastx.collectionidFROM blastxLEFT JOIN blastONblastx.collectionid = blast.collectionidWHERE blast.collectionid IS NULL;18 rowsCREATE TEMPORARY TABLE  blastxallSELECT DISTINCT collectionblast.collectionid, collectionblast.sourceannotation, collectionblast.targetsource, collectionblast.targetaccession, collectionblast.targetannotation, collectionblast.hitevalueexp, collectionblast.hitevaluedecFROM collectionblast, blastxonlyWHERE blastxonly.collectionid = collectionblast.collectionidORDER BY collectionblast.collectionid, collectionblast.hitevalueexp, collectionblast.hitevaluedec;SELECT * FROM blastxall INTO OUTFILE '/private/var/tmp/unigene.blastxall.tsv';sudo rm /private/var/tmp/unigene.blastxonly.tsv Query OK, 1553 rows affected (0.12 sec)mkdir -p /Users/young/FUNNYBASE/thesis/all/chap1.images/figure1-tblastx-onlycd /Users/young/FUNNYBASE/thesis/all/chap1.images/figure1-tblastx-onlysudo mv /private/var/tmp/unigene.blastxonly.tsv /Users/young/FUNNYBASE/thesis/all/chap1.images/figure1-tblastx-only*************REMOVED COLLECTION ID = 0 FROM blastevalueannotation:SELECT blastevalueannotation.collectionidFROM blastevalueannotationLEFT JOIN blastevalueannotationverifymanualONblastevalueannotation.collectionid = blastevalueannotationverifymanual.collectionidWHERE blastevalueannotationverifymanual.collectionid IS NULL+--------------+| collectionid |+--------------+|            0 |+--------------+1 row in set (0.01 sec)mysql> delete from blastevalueannotation where collectionid = 0;Query OK, 1 row affected (0.00 sec)*************++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++Mon Jan 28 17:33:03 EST 2008CHECK NUMBER OF WU-BLAST HITS USING TBLASTX VERSUS BLASTN (human UniGene VS other UniGenes)1. BLAST AGAINST UNIGENE (MOUSE, DOG, RAT) AND SWISSPROT USING 'TBLASTX'sudo ./arrayblast.pl  -d unigenex -q unigenex -t unigene-mouse,unigene-dog,unigene-rat            Run time: 00:41:28    Completed ./arrayblast.pl    5:23PM, 28 January 2008    ****************************************sudo ./arrayblast.pl -d unigenex -q unigenex -t swissprot     Run time: 00:11:21    Completed ./arrayblast.pl    6:18PM, 28 January 2008    **************************************** ./arrayblastloaddata.pl -d unigenex -t swissprot    Run time: 00:00:36    Completed ./arrayblastloaddata.pl    6:21PM, 28 January 2008    ****************************************2. LOAD INTO collectionblast TABLE./arrayblastloaddata.pl  -d unigenex -t unigene-mouse,unigene-dog,unigene-rat    UNIGENE WITH BLASTN:select count(distinct collectionid) from collectionblast where targetsource = 'unigene-mouse';+------------------------------+| count(distinct collectionid) |+------------------------------+|                          928 |+------------------------------+ select count(distinct collectionid) from collectionblast where targetsource = 'unigene-dog';+------------------------------+| count(distinct collectionid) |+------------------------------+|                          819 |+------------------------------+select count(distinct collectionid) from collectionblast where targetsource = 'unigene-rat';+------------------------------+| count(distinct collectionid) |+------------------------------+|                          929 |+------------------------------+select count(distinct collectionid) from collectionblast;+------------------------------+| count(distinct collectionid) |+------------------------------+|                          983 |+------------------------------+NB: THIS IS ONE MORE THAN unigenex!!UNIGENE WITH BLASTX:select count(distinct collectionid) from collectionblast where targetsource = 'unigene-mouse';select count(distinct collectionid) from collectionblast where targetsource = 'unigene-mouse';+------------------------------+| count(distinct collectionid) |+------------------------------+|                          970 |+------------------------------+select count(distinct collectionid) from collectionblast where targetsource = 'unigene-rat';+------------------------------+| count(distinct collectionid) |+------------------------------+|                          965 |+------------------------------+select count(distinct collectionid) from collectionblast where targetsource = 'unigene-dog';+------------------------------+| count(distinct collectionid) |+------------------------------+|                          970 |+------------------------------+select count(distinct collectionid) from collectionblast;+------------------------------+| count(distinct collectionid) |+------------------------------+|                          982 |+------------------------------+SAME BLAST QUALITY TOO:./blastquality.pl -d unigene    BLASTN        Database	Hits	Dependent	%	Poor quality	%    swissprot       28820   1918    0.0666  3655    0.1268    unigene-mouse   3835    469     0.1223  990     0.2581    unigene-dog     1639    1181    0.7206  1397    0.8523    unigene-rat     3015    1621    0.5376  2107    0.6988    All     37309   5189    0.1391  8149    0.2184        Run time: 00:00:16    Completed ./blastquality.pl    10:25PM, 29 January 2008    ****************************************./blastquality.pl -d unigenex -t swissprot,unigene-mouse,unigene-dog,unigene-rat -e -05    TBLASTX        Database	Hits	Dependent	%	Poor quality	%    swissprot       23349   1665    0.0713  3040    0.1302    unigene-mouse   8160    1261    0.1545  2041    0.2501    unigene-dog     4815    3976    0.8258  4297    0.8924    unigene-rat     7702    4006    0.5201  4951    0.6428    All     44026   10908   0.2478  14329   0.3255        Run time: 00:01:20    Completed ./blastquality.pl    10:23PM, 29 January 2008    ****************************************CHECK COVERAGE:./blastcoverage.pl -d unigene -t swissprot,unigene-mouse,unigene-dog,unigene-rat./coverageannotation.pl -D -d unigene -c 0.90 -m 0.20 ./coverageannotation.pl -d unigene -c 0.70 -m 0.30 ./coverageannotation.pl -d unigene -c 0.50 -m 0.40         Total run time: 00:05:02    Completed ./coverageannotation.pl    0:25AM, 30 January 2008    ****************************************        select mismatchcutoff, coveragecutoff, count(distinct collectionid)  from coverageannotation group by mismatchcutoff, coveragecutoff;    +----------------+----------------+------------------------------+    | mismatchcutoff | coveragecutoff | count(distinct collectionid) |    +----------------+----------------+------------------------------+    |           0.20 |           0.90 |                          292 |    |           0.30 |           0.70 |                          511 |    |           0.40 |           0.50 |                          635 |    +----------------+----------------+------------------------------+./coverageevalueannotation.pl -D -d unigene -c 0.90 -m 0.20 ./coverageevalueannotation.pl -d unigene -c 0.70 -m 0.30 ./coverageevalueannotation.pl -d unigene -c 0.50 -m 0.40 select mismatchcutoff, coveragecutoff, count(collectionid) from coverageevalueannotation where concurrence = 'both' group by mismatchcutoff, coveragecutoff;select mismatchcutoff, coveragecutoff, count(collectionid) from coverageevalueannotation where concurrence = 'evalue' group by mismatchcutoff, coveragecutoff;select mismatchcutoff, coveragecutoff, count(collectionid) from coverageevalueannotation where concurrence = 'coverage' group by mismatchcutoff, coveragecutoff;select mismatchcutoff, coveragecutoff, count(collectionid) from coverageevalueannotation where concurrence = 'clash' group by mismatchcutoff, coveragecutoff;    NO CLASHES AND NO COVERAGE-ONLY TARGET HITS:        select mismatchcutoff, coveragecutoff, count(collectionid) from coverageevalueannotation where concurrence = 'both' group by mismatchcutoff, coveragecutoff;    +----------------+----------------+---------------------+    | mismatchcutoff | coveragecutoff | count(collectionid) |    +----------------+----------------+---------------------+    |           0.20 |           0.90 |                 292 |    |           0.30 |           0.70 |                 511 |    |           0.40 |           0.50 |                 635 |    +----------------+----------------+---------------------+    3 rows in set (0.01 sec)        mysql> select mismatchcutoff, coveragecutoff, count(collectionid) from coverageevalueannotation where concurrence = 'evalue' group by mismatchcutoff, coveragecutoff;    +----------------+----------------+---------------------+    | mismatchcutoff | coveragecutoff | count(collectionid) |    +----------------+----------------+---------------------+    |           0.20 |           0.90 |                 691 |    |           0.30 |           0.70 |                 472 |    |           0.40 |           0.50 |                 348 |    +----------------+----------------+---------------------+    3 rows in set (0.04 sec)        mysql> select mismatchcutoff, coveragecutoff, count(collectionid) from coverageevalueannotation where concurrence = 'coverage' group by mismatchcutoff, coveragecutoff;    Empty set (0.02 sec)        mysql> select mismatchcutoff, coveragecutoff, count(collectionid) from coverageevalueannotation where concurrence = 'clash' group by mismatchcutoff, coveragecutoff;    Empty set (0.01 sec)++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++Wed Dec 19 00:53:00 EST 2007FUZZY MATCH NOTES IN Notes-algorithm-fuzzymatch.txtSEE Notes-algorithm-fuzzymatch.txt FOR FINE-TUNING OF FUZZY MATCH++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++Thu Dec  6 11:35:04 EST 2007SWISSPROT VERSIONRelease 51.1 of 14-Nov-06 of UniProtKB/Swiss-Prot contains 241365 sequence entries++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++Thu Nov 29 21:40:02 EST 2007IPRSCAN ANNOTATION./collectionsequencesiprscanannotation.pl -d funnybase11        Run time: 00:00:10    Completed ./collectionsequencesiprscanannotation.pl    9:36PM, 29 November 2007    ****************************************mysql> select count(*) from collectionsequencesiprscanannotation;+----------+| count(*) |+----------+|     8091 |+----------+1 row in set (0.00 sec)mysql> select count(distinct collectionid) from collectionsequencesiprscanannotation;+------------------------------+| count(distinct collectionid) |+------------------------------+|                         2643 |+------------------------------+1 row in set (0.03 sec)mysql> select count(distinct collectionid) from collectionsequencesiprscanannotation where targetsource != 'seg';+------------------------------+| count(distinct collectionid) |+------------------------------+|                          471 |+------------------------------+1 row in set (0.03 sec)++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++Thu Nov 29 14:55:25 EST 2007COLLECTION SEQUENCE GO, EC, KEGG, ETC. MAPPINGcollectionsequencesannotationmapping.pl++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++Tue Nov 27 00:19:49 EST 2007GO ANNOTATION LINKS FOR SANDBOXDOWNLOAD GOA MAPPINGS:ftp://ftp.ebi.ac.uk/pub/databases/GO/goa/GO urlshttp://www.ebi.ac.uk/ego/DisplayGoTerm?id=GO:0005887&selected=GO:0005887&viz=http://www.ebi.ac.uk/ego/DisplayGoTerm?id=GO:0005887&selected=GO:0005887&viz=treehttp://www.ebi.ac.uk/ego/DisplayGoTerm?id=GO:0005887&selected=GO:0005887&viz=graphhttp://www.ebi.ac.uk/ego/gohierarchy?code=GO:0005887,GO:0005887++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++Sun Nov 25 19:56:13 EST 2007COMPLETED OPEN::DATABASE DISPLAY AND NEW::DATABASE	APPLICATION     workflow.cgi		PURPOSE		1. PROVIDE RESPONSES TO INTERACTIVE WORKFLOW-RELATED XMLHTTPRequest                    QUERIES FROM sandbox, INCLUDING:							- DATABASE, WORKFLOW, STAGE AND APPLICATION SELECT BOX												- DATABASE- AND WORKFLOW-DEPENDENT WORKFLOW XML									(WORKFLOW DISPLAYS ARE HANDLED ON CLIENT)				2. RUN WORKFLOWS ON REQUEST (AND PROVIDE WORKFLOW XML)		 		3. PROVIDE 'SLOW LOAD' DATA PUSH TO workflow.tmpl THROUGH iFRAME IF                    TRIGGERED BY 'RUN' COMMAND AT CLIENT OR IF CLIENT SENSES WORKFLOW                        IS NOT COMPLETE:				- DATABASE- AND WORKFLOW-DEPENDENT WORKFLOW XML									(WORKFLOW DISPLAY IS HANDLED ON CLIENT)	USAGE				./workflow.cgi <mode> <database> [additional_arguments]		    EXAMPLES		mode		database		workflow_number		output				type		----		-------- 		---------------		------				----		update		test5								workflow_select		text/html		workflow	test5			1					workflow			text/xml				mode		filename											output		type		----		-------- 											------		----		download	/pipeline/test5/collection/test5.readsphred.stdout	download	application/force-download		htmlfile	/pipeline/test5/collection/test5.readsphred.stdout	page		text/html	APPLICATION 	admin.cgi		PURPOSE			RESPOND TO XMLHTTPRequest LOGIN AUTHENTICATION QUERIES FROM sandbox		        TO DO:                    - Login USING USERNAME AND PASSWORD                        - Validation USING USERNAME AND SESSION ID                        - CREATE NEW DATABASE	USAGE		./admin.cgi <mode> <database> [additional_arguments]	        mode : login | validate | newuser | newdatabase | deletedatabase | newworkflow | deleteworkflow++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++Tue Nov  6 21:44:32 EST 2007INCORPORATED KOG INTO orthologues WORKFLOW                        ==========================================================================Clusters of Orthologous Groups from 7 eukaryotic complete genomes (KOGs)A  Ath  Arabidopsis thalianaC  Cel  Caenorhabditis elegansD  Dme  Drosophila melanogasterH  Hsa  Homo sapiensY  Sce  Saccharomyces cerevisiaeP  Spo  Schizosaccharomyces pombeE  Ecu  Encephalitozoon cuniculi==========================================================================kog        contains information on each KOG, including the KOG name,           functional classification (using a one-letter code), function           description, and the list of proteins (or domains)lse        lineage specific expansion groups.twog       candidate KOGs - proteins from 2 species.kyva       FASTA file containing all the proteins (or domains) from the           7 complete genomes, including those not included into any KOG.kyva=gb    The list of protein names and corresponding GI numbers.fun.txt    explains one-letter functional classification used in the KOG           databasepa         the results of BLAST for all the proteins/domains in the format:           a - b (score p-value) astart..astop bstart..bstop,           where a and b are protein/domain names.++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++Tue Nov  6 18:16:50 EST 2007BOND download of BINDhttp://bond.unleashedinformatics.com/Action?pg=24000++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++Tue Nov  6 18:13:15 EST 2007Integr8 Orthologue downloads   	http://www.ebi.ac.uk/integr8/HelpAction.do?action=searchById&refId=61Data concerning putative orthologues of each protein in Integr8 is available for perusal in the Integr8 application, and also for download via FTP. Orthologues are identified on a reciprocal best-matching basis, using the CluSTr database as a resource for protein similarity data. CluSTr uses the Smith Waterman algorithm to accurately measure protein similarity. The raw Smith-Waterman score is converted into a statistical measure of the significance of the similarity (see http://www.ebi.ac.uk/clustr/documentation.html for details). Putative orthologues are identified for each species pair by looking for reciprocal best-matching proteins (i.e. the best match of protein X from species A in species B is protein Y; and X is Y's best match in A. Only the longest isoform of each gene is included in the algorithm; thus, strictly, speaking, protein similarity is used to find orthology at the gene level. Where multiple gene products from the same species have identical (or, identically similar) sequences, it is possible for a protein to have >1 orthologue by this definition.The Integr8 orthologues are putative: no attempt has been made to reconstruct the evolutionary ancestry of each gene. However, the advantage of this approach is coverage, with over 450 species included in the first release (January 2007).The data is initially available in tab-delineated files, with one file available per proteome and one row representing one orthologue pair (between a gene in a species, and the orthologous genes in one other species) Columns provide the following information:   1. Integr8 Gene Identifier. A stable identifier for this gene, of the following format IGI\d{9} e.g. IGI000000001, IGI000000100.   2. Gene name   3. Protein identifier (from UniProtKB or IPI)   4. Protein name   5. Integr8 proteome ID (of species containing orthologues)   6. Name of species containing orthologues   7. Integr8 gene IDs of orthologous genes in this species (';' separated)   8. Protein identifiers of orthologous protein products in this species (;' separated)   9. Statistical signficance.  10. Common ancestral taxonomic lineage shared by the two orthologues. Protein identifiers are taken from UniProtKB or from IPI. IPI identifiers are used when no UniProtKB entries are available, and can be distinguished as they begin with the three letters 'IPI', e.g. IPI000000005.In some cases, where the same protein is found in two closely-related organisms, the same UniProtKB entry is used to refer to the protein in both. In these cases, the protein identifier of the gene being referred to, and the protein identifier of its orthologue, are the same, and there is no Z-score (a '-' appears in the 9th column).If the 10th column is labelled '-', this means that there is no common ancestral lineage of the two species. For a small quantity of data, the taxonomic spread might not yet have been converted. In these cases, the 10th column will be marked 'NA'. ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++Tue Nov  6 15:44:20 EST 2007ADDED ScoobyDo AND DGSScoobyDo========gcc ScoobyDo.c -lm -o ScoobyDoDGS===1. INSTALLED NCBI TOOLKIT:(SEE ~/FUNNYBASE/apps/ncbi.toolkit/ncbi/make/readme.unx)~/FUNNYBASE/apps young$ ./ncbi/make/makedis.csh 2>&1|tee out.makedis.txt    wblast2.c:1573: warning: assignment from incompatible pointer type    wblast2.c:1574: warning: assignment from incompatible pointer type    wblast2.c:1582: warning: passing argument 1 of 'Nlm_BSWrite' from incompatible pointer type    wblast2.c: In function 'Nlm_Main':    wblast2.c:2525: warning: this decimal constant is unsigned only in ISO C90    cc -pipe -o bl2bag.cgi -framework CoreServices -O2 -I../include  -L../lib -DWIN_MAC -I/Developer/Headers/FlatCarbon bl2bag.c -lncbi -lc    Put the date stamp to the file ../VERSION    *********************************************************    *The new binaries are located in ./ncbi/build/ directory*    *********************************************************2. INSTALLED/Users/young/FUNNYBASE/apps/dgsmakeWOULD NOT COMPILE WITH ncbi.mk FILE:NCBI_CC = gccNCBI_CFLAGS1 = -cNCBI_LDFLAGS1 = NCBI_OPTFLAG = -ONCBI_INCDIR = /Users/young/FUNNYBASE/apps/ncbi/includeNCBI_LIBDIR = /Users/young/FUNNYBASE/apps/ncbi/libNCBI_ALTLIB  = /Users/young/FUNNYBASE/apps/ncbi/libNCBI_VIBFLAG = NCBI_VIBLIBS  = NCBI_OTHERLIBS = ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++Wed Oct 31 03:32:31 EDT 2007REDID SELFBLAST BINS FOR swissprot AND THE refseqsdlc-genomics:~/FUNNYBASE/bin/orthologues young$ DID NOT LOAD!/common/pipeline/indexer/collection/indexer.refseqdogselfblastbins.4.tsv/common/pipeline/indexer/collection/indexer.refseqdogselfblastbins.5.tsv/common/pipeline/indexer/collection/indexer.refseqdogselfblastbins.6.tsv/common/pipeline/indexer/collection/indexer.refseqdogselfblastbins.7.tsv/common/pipeline/indexer/collection/indexer.refseqdogselfblastbins.8.tsvDBD::mysql::db do warning: File '/common/pipeline/indexer/collection/indexer.refseqdogselfblastbins.8.tsv' not found (Errcode: 2) at /Users/young/FUNNYBASE/lib/Database.pm line 836.Query failed: File '/common/pipeline/indexer/collection/indexer.refseqdogselfblastbins.8.tsv' not found (Errcode: 2) (0)DID NOT LOAD!/common/pipeline/indexer/collection/indexer.refseqdogselfblastbins.9.tsv/common/pipeline/indexer/collection/indexer.refseqdogselfblastbins.10.tsvDBD::mysql::db do warning: File '/common/pipeline/indexer/collection/indexer.refseqdogselfblastbins.10.tsv' not found (Errcode: 2) at /Users/young/FUNNYBASE/lib/Database.pm line 836.Query failed: File '/common/pipeline/indexer/collection/indexer.refseqdogselfblastbins.10.tsv' not found (Errcode: 2) (0)DID NOT LOAD!/common/pipeline/indexer/collection/indexer.refseqdogselfblastbins.11.tsv/common/pipeline/indexer/collection/indexer.refseqdogselfblastbins.12.tsv/common/pipeline/indexer/collection/indexer.refseqdogselfblastbins.13.tsv/common/pipeline/indexer/collection/indexer.refseqdogselfblastbins.14.tsv/common/pipeline/indexer/collection/indexer.refseqdogselfblastbins.15.tsv/common/pipeline/indexer/collection/indexer.refseqdogselfblastbins.16.tsv/common/pipeline/indexer/collection/indexer.refseqdogselfblastbins.17.tsv/common/pipeline/indexer/collection/indexer.refseqdogselfblastbins.18.tsv/common/pipeline/indexer/collection/indexer.refseqdogselfblastbins.19.tsv/common/pipeline/indexer/collection/indexer.refseqdogselfblastbins.20.tsv/common/pipeline/indexer/collection/indexer.refseqdogselfblastbins.21.tsv/common/pipeline/indexer/collection/indexer.refseqdogselfblastbins.22.tsv/common/pipeline/indexer/collection/indexer.refseqdogselfblastbins.23.tsv/common/pipeline/indexer/collection/indexer.refseqdogselfblastbins.24.tsv/common/pipeline/indexer/collection/indexer.refseqdogselfblastbins.25.tsv/common/pipeline/indexer/collection/indexer.refseqdogselfblastbins.26.tsvFinished loading data.Run time: 03:19:33Completed ./arrayselfblastbinsdaemon.pl5:54AM, 30 October 2007****************************************/common/pipeline/indexer/collection/indexer.swissprotselfblastbins.21.tsv/common/pipeline/indexer/collection/indexer.swissprotselfblastbins.22.tsv/common/pipeline/indexer/collection/indexer.swissprotselfblastbins.23.tsv/common/pipeline/indexer/collection/indexer.swissprotselfblastbins.24.tsv/common/pipeline/indexer/collection/indexer.swissprotselfblastbins.25.tsv/common/pipeline/indexer/collection/indexer.swissprotselfblastbins.26.tsvFinished loading data.Run time: 06:04:16Completed ./arrayselfblastbinsdaemon.pl3:13AM, 31 October 2007****************************************++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++Tue Oct 30 04:28:35 EDT 2007COMPLETED blastbins.pl AND blastbinsgraph.pl    NAME     blastbins        PURPOSE            BIN THE BLAST HITS FOR EACH COLLECTION SEQUENCE BY E-VALUE         INPUT            1. collectionblast TABLE        OUTPUT             1. blastbins TABLE        USAGE            ./blastbins.pl <-d database> <-s selfblast> <-b bins> [-h]            -d database     :   name of database (i.e., indexer)        -s selfblast    :   name of BLAST index table        -b bins         :   number of bins        -h help         :   print this message            EXAMPLES    sudo ./blastbins.pl -d unigene2 -b 32    Output file printed:        /Users/young/FUNNYBASE/pipeline/unigene2/collection/unigene2.blastbins.tsv            Run time: 00:10:10    Completed ./blastbins.pl    4:20AM, 30 October 2007    ****************************************    NAME     blastbinsgraph        PURPOSE            CREATE THE HTML GRAPH OF THE BLAST HIT E-VALUE DISTRIBUTION FOR                EACH COLLECTION SEQUENCES BASED ON THE CUSTOM BINNED DATA IN THE                blastbins TABLE           INPUT            1. blastbins TABLE         OUTPUT             1. blastbinsgraph TABLE        USAGE            ./blastbinsgraph.pl <-d database> [-h]        EXAMPLES    ./blastbinsgraph.pl -d unigene2++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++Mon Oct 29 21:59:13 EDT 2007blastbesthitbins.pl - DO BLAST BEST HIT BINS IN PREPARATION FOR SHOWING E-VALUE DISTRIBUTION BLAST HITS./addfultext.pl -d indexer -t swissprotselfblastbins -n accession -f accessionTO ACCOMPLISH:ALTER TABLE swissprotselfblastbins ADD fulltext accession (accession);ALTER TABLE swissprotselfblastbins ADD fulltext accession (accession);Query OK, 69660536 rows affected (53 min 13.51 sec)Records: 69660536  Duplicates: 0  Warnings: 0ALTER TABLE refseqhumanselfblastbins ADD fulltext accession (accession);Query OK, 14076513 rows affected (4 min 58.86 sec)Records: 14076513  Duplicates: 0  Warnings: 0THEN RUN:./blastbesthitbins.pl -d unigene2    NAME     blastbesthitbins        PURPOSE            FOR EACH COLLECTION SEQUENCE WITH BLAST HITS, GET THE BEST THREE                UNIQUE ANNOTATION HITS PER TARGET DATABASE FROM THE collectionblast                 TABLE AND RETRIEVE THEIR OWN BINNED SELFBLAST HITS          INPUT            1. collectionblast TABLE        OUTPUT             1. blastbesthitbins TABLE        USAGE            ./blastbesthitbins.pl <-d database> <-s selfblast> <-b bins> [-h]            -d database     :   name of database (i.e., indexer)        -s selfblast    :   name of BLAST index table        -b bins         :   number of bins        -h help         :   print this message            EXAMPLES    sudo ./blastbesthitbins.pl -d unigene2++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++Mon Oct 29 15:34:18 EDT 2007DO E-VALUE DISTRIBUTION GRAPH USING selfblastbinsgraph.pl./selfblastbinsgraph.pl -d indexer -s swissprotselfblast > swissprotselfblastbinsgraph.html    NAME     selfblastbinsgraph        PURPOSE            CREATE THE HTML BASED ON THE CUSTOM BINNED DATA IN THE                <selfblast>stats TABLE (CUSTOMISED FROM <selfblast>bins TABLE                BY selflblaststats.pl)          INPUT            1. <selfblast>stats TABLE         OUTPUT             1. <selfblast>binsgraph TABLE        USAGE            ./selfblastbinsgraph.pl <-d database> [-h]        EXAMPLES    ./selfblastbinsgraph.pl -d indexer -s swissprotselfblast++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++Mon Oct 29 03:53:44 EDT 2007E-VALUE DISTRIBUTION WORKFLOW: arrayselfblastbins --> selfblaststats --> blastbinsgraph    NAME     arrayselfblastbins        PURPOSE            BIN THE SELF-BLAST HITS DATA INTO E-VALUE BINS          INPUT            1. <DATABASE>selfblast TABLE         OUTPUT             1. <DATABASE>selfblastbins TABLE        USAGE            ./arrayselfblastbins.pl <-d database> <-s selfblast> <-b bins> [-h]            -d database     :   name of database (i.e., indexer)        -s selfblast    :   name of BLAST index table        -b bins         :   number of bins        -h help         :   print this message            EXAMPLES    sudo ./arrayselfblastbins.pl 1 /common/pipeline/indexer/collection/indexer.swissprotselfblast.argssudo ./arrayselfblastbins.pl 1 /common/pipeline/indexer/collection/indexer.refseqhumanselfblast.args    NAME     selfblaststats        PURPOSE            USE THE DATA IN THE <selfblast>bins TABLE (E.G., swissprotselfblastbins )                TO CREATE A CUSTOM BINNING OF THE DATA TO BE FED INTO blastbinsgraph.pl                select count(*) from swissprotselfblastbins;        +----------+        | count(*) |        +----------+        | 69660536 |        +----------+                     select * from swissprotselfblastbins limit 1\G       *************************** 1. row ***************************          accession: O00057            binstop: -204              count: 1       matchboolean: 1          INPUT            1. orthologuesblast TABLE         OUTPUT             1. selfblaststats TABLE        USAGE            ./selfblaststats.pl <-d database> [-h]        EXAMPLES    ./selfblaststats.pl -d indexer -s swissprotselfblast -b 32 -f -320 -t 0        SELECT COUNT(count) FROM swissprotselfblastbins        WHERE binstop >= '-10'        AND binstop < '0'        AND matchboolean = 0    Mismatches: 656413    0       0       656576  656413    Doing bin 32 of 32    SELECT COUNT(count) FROM swissprotselfblastbins        WHERE binstop >= '0'        AND binstop < '10'        AND matchboolean = 1    Matches: 0    SELECT COUNT(count) FROM swissprotselfblastbins        WHERE binstop >= '0'        AND binstop < '10'        AND matchboolean = 0    Mismatches: 0    0       10      0       0    Output file printed:        /Users/young/FUNNYBASE/pipeline/indexer/collection/indexer.swissprotselfblaststats.bins32.start-320.end0.tsv        Dropping table 'swissprotselfblaststats'... done.    Creating table 'swissprotselfblaststats'... done.    Loading data into table 'swissprotselfblaststats'... done.        Run time: 01:15:18    Completed ./selfblaststats.pl    5:32AM, 29 October 2007    ****************************************./blastbinsgraph.pl -d indexer -t swissprotselfblastbins++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++Sun Oct 28 22:35:16 EDT 2007DID SWISSPROT SELFBLAST COUNTSsudo ./arrayselfblastcountsdaemon.pl -d indexer -t 22 -s swissprotselfblastsudo ./arrayselfblastcountsdaemon.pl -d indexer -t 24 -s refseqhumanselfblast++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++Sun Oct 28 22:35:16 EDT 2007BINNED REFSEQ SELFBLASTSsudo ./arrayselfblastbinsdaemon.pl -d indexer -t 26 -b 320 -s refseqhumanselfblast        Your job-array 1310645.1-26:1 ("refseqhumanselfblastbins.sh") has been submitted    Job 1310645.7 exited with exit code 255.    Job 1310645.12 exited with exit code 0.    Job 1310645.25 exited with exit code 0.    Job 1310645.2 exited with exit code 0.    Job 1310645.26 exited with exit code 0.    Job 1310645.17 exited with exit code 0.    Job 1310645.9 exited with exit code 0.    Job 1310645.5 exited with exit code 0.    Job 1310645.3 exited with exit code 0.    Job 1310645.14 exited with exit code 0.    Job 1310645.18 exited with exit code 0.    Job 1310645.23 exited with exit code 0.    Job 1310645.8 exited with exit code 0.    Job 1310645.6 exited with exit code 0.    Job 1310645.15 exited with exit code 0.    Job 1310645.16 exited with exit code 0.    Job 1310645.22 exited with exit code 0.    Job 1310645.24 exited with exit code 0.    Job 1310645.21 exited with exit code 0.    Job 1310645.11 exited with exit code 0.    Job 1310645.20 exited with exit code 0.    Job 1310645.10 exited with exit code 0.    Job 1310645.4 exited with exit code 0.    Job 1310645.1 exited with exit code 0.    Job 1310645.13 exited with exit code 0.    Job 1310645.19 exited with exit code 0.        Job exit codes: 0 = Success, 99 = Requeue, Rest = Success: exit code in accounting file        Dropping table 'refseqhumanselfblastbins... done.    Creating table 'refseqhumanselfblastbins' if not exists... done.    Loading data into table 'refseqhumanselfblastbins'... /common/pipeline/indexer/collection/indexer.refseqhumanselfblastbins.1.tsv    /common/pipeline/indexer/collection/indexer.refseqhumanselfblastbins.2.tsv    /common/pipeline/indexer/collection/indexer.refseqhumanselfblastbins.3.tsv    /common/pipeline/indexer/collection/indexer.refseqhumanselfblastbins.4.tsv    /common/pipeline/indexer/collection/indexer.refseqhumanselfblastbins.5.tsv    /common/pipeline/indexer/collection/indexer.refseqhumanselfblastbins.6.tsv    /common/pipeline/indexer/collection/indexer.refseqhumanselfblastbins.7.tsv    DBD::mysql::db do warning: File '/common/pipeline/indexer/collection/indexer.refseqhumanselfblastbins.7.tsv' not found (Errcode: 2) at /Users/young/FUNNYBASE/lib/Database.pm line 836.    Query failed: File '/common/pipeline/indexer/collection/indexer.refseqhumanselfblastbins.7.tsv' not found (Errcode: 2) (0)    DID NOT LOAD!    /common/pipeline/indexer/collection/indexer.refseqhumanselfblastbins.8.tsv    /common/pipeline/indexer/collection/indexer.refseqhumanselfblastbins.9.tsv    /common/pipeline/indexer/collection/indexer.refseqhumanselfblastbins.10.tsv    /common/pipeline/indexer/collection/indexer.refseqhumanselfblastbins.11.tsv    /common/pipeline/indexer/collection/indexer.refseqhumanselfblastbins.12.tsv    /common/pipeline/indexer/collection/indexer.refseqhumanselfblastbins.13.tsv    /common/pipeline/indexer/collection/indexer.refseqhumanselfblastbins.14.tsv    /common/pipeline/indexer/collection/indexer.refseqhumanselfblastbins.15.tsv    /common/pipeline/indexer/collection/indexer.refseqhumanselfblastbins.16.tsv    /common/pipeline/indexer/collection/indexer.refseqhumanselfblastbins.17.tsv    /common/pipeline/indexer/collection/indexer.refseqhumanselfblastbins.18.tsv    ndexer.refseqhumanselfblastbins.7.tsv' not found (Errcode: 2) (0)    /common/pipeline/indexer/collection/indexer.refseqhumanselfblastbins.19.tsv    /common/pipeline/indexer/collection/indexer.refseqhumanselfblastbins.20.tsv    /common/pipeline/indexer/collection/indexer.refseqhumanselfblastbins.21.tsv    /common/pipeline/indexer/collection/indexer.refseqhumanselfblastbins.22.tsv    /common/pipeline/indexer/collection/indexer.refseqhumanselfblastbins.23.tsv    /common/pipeline/indexer/collection/indexer.refseqhumanselfblastbins.24.tsv    /common/pipeline/indexer/collection/indexer.refseqhumanselfblastbins.25.tsv    DBD::mysql::db do warning: File '/common/pipeline/indexer/collection/indexer.refseqhumanselfblastbins.25.tsv' not found (Errcode: 2) at /Users/young/FUNNYBASE/lib/Database.pm line 836.    Query failed: File '/common/pipeline/indexer/collection/indexer.refseqhumanselfblastbins.25.tsv' not found (Errcode: 2) (0)    DID NOT LOAD!    /common/pipeline/indexer/collection/indexer.refseqhumanselfblastbins.26.tsv    done.        Run time: 01:07:31    Completed ./arrayselfblastbinsdaemon.pl    11:44PM, 28 October 2007    ****************************************++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++Sun Oct 28 22:33:32 EDT 2007BINNED ALL OF SWISSPROT SELFBLASTsudo ./arrayselfblastbinsdaemon.pl -d indexer -t 26 -b 320 -s swissprotselfblast    Job 1310636.13 exited with exit code 0.    Job 1310636.23 exited with exit code 0.    Job 1310636.10 exited with exit code 0.        Job exit codes: 0 = Success, 99 = Requeue, Rest = Success: exit code in accounting file        Dropping table 'swissprotselfblastbins... done.    Creating table 'swissprotselfblastbins' if not exists... done.    Loading data into table 'swissprotselfblastbins'... /common/pipeline/indexer/collection/indexer.swissprotselfblastbins.1.tsv    /common/pipeline/indexer/collection/indexer.swissprotselfblastbins.2.tsv    /common/pipeline/indexer/collection/indexer.swissprotselfblastbins.3.tsv    /common/pipeline/indexer/collection/indexer.swissprotselfblastbins.4.tsv    /common/pipeline/indexer/collection/indexer.swissprotselfblastbins.5.tsv    /common/pipeline/indexer/collection/indexer.swissprotselfblastbins.6.tsv    /common/pipeline/indexer/collection/indexer.swissprotselfblastbins.7.tsv    /common/pipeline/indexer/collection/indexer.swissprotselfblastbins.8.tsv    /common/pipeline/indexer/collection/indexer.swissprotselfblastbins.9.tsv    /common/pipeline/indexer/collection/indexer.swissprotselfblastbins.10.tsv    /common/pipeline/indexer/collection/indexer.swissprotselfblastbins.11.tsv    /common/pipeline/indexer/collection/indexer.swissprotselfblastbins.12.tsv    /common/pipeline/indexer/collection/indexer.swissprotselfblastbins.13.tsv    /common/pipeline/indexer/collection/indexer.swissprotselfblastbins.14.tsv    /common/pipeline/indexer/collection/indexer.swissprotselfblastbins.15.tsv    /common/pipeline/indexer/collection/indexer.swissprotselfblastbins.16.tsv    /common/pipeline/indexer/collection/indexer.swissprotselfblastbins.17.tsv    /common/pipeline/indexer/collection/indexer.swissprotselfblastbins.18.tsv    /common/pipeline/indexer/collection/indexer.swissprotselfblastbins.19.tsv    /common/pipeline/indexer/collection/indexer.swissprotselfblastbins.20.tsv    /common/pipeline/indexer/collection/indexer.swissprotselfblastbins.21.tsv    /common/pipeline/indexer/collection/indexer.swissprotselfblastbins.22.tsv    /common/pipeline/indexer/collection/indexer.swissprotselfblastbins.23.tsv    /common/pipeline/indexer/collection/indexer.swissprotselfblastbins.24.tsv    /common/pipeline/indexer/collection/indexer.swissprotselfblastbins.25.tsv    /common/pipeline/indexer/collection/indexer.swissprotselfblastbins.26.tsv    done.        Run time: 07:14:57    Completed ./arrayselfblastbinsdaemon.pl    11:24AM, 28 October 2007    ****************************************++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++Sun Oct 28 20:01:13 EDT 2007LOAD REFSEQS selfblast TABLES ONTO CLUSTER NODESLOAD refseqs============ON genomics:sudo em /common/pipeline/indexer/collection/copytablesgems.sh#!/bin/shsudo cp /usr/local/mysql/data/indexer/refseqhumanselfblast.MYD /common/mysql/data/indexer/refseqhumanselfblast.MYDsudo cp /usr/local/mysql/data/indexer/refseqhumanselfblast.MYI /common/mysql/data/indexer/refseqhumanselfblast.MYIsudo cp /usr/local/mysql/data/indexer/refseqhumanselfblast.frm /common/mysql/data/indexer/refseqhumanselfblast.frmsudo cp /usr/local/mysql/data/indexer/refseqmouseselfblast.MYD /common/mysql/data/indexer/refseqmouseselfblast.MYDsudo cp /usr/local/mysql/data/indexer/refseqmouseselfblast.MYI /common/mysql/data/indexer/refseqmouseselfblast.MYIsudo cp /usr/local/mysql/data/indexer/refseqmouseselfblast.frm /common/mysql/data/indexer/refseqmouseselfblast.frmsudo cp /usr/local/mysql/data/indexer/refseqratselfblast.MYD /common/mysql/data/indexer/refseqratselfblast.MYDsudo cp /usr/local/mysql/data/indexer/refseqratselfblast.MYI /common/mysql/data/indexer/refseqratselfblast.MYIsudo cp /usr/local/mysql/data/indexer/refseqratselfblast.frm /common/mysql/data/indexer/refseqratselfblast.frmsudo cp /usr/local/mysql/data/indexer/refseqdogselfblast.MYD /common/mysql/data/indexer/refseqdogselfblast.MYDsudo cp /usr/local/mysql/data/indexer/refseqdogselfblast.MYI /common/mysql/data/indexer/refseqdogselfblast.MYIsudo cp /usr/local/mysql/data/indexer/refseqdogselfblast.frm /common/mysql/data/indexer/refseqdogselfblast.frmsudo chmod 775 /common/pipeline/indexer/collection/copytablesgems.shsudo /common/pipeline/indexer/collection/copytablesgems.shON gems:CREATE THIS SHELL SCRIPT:sudo em /common/pipeline/indexer/collection/copytablesnodes.sh#!/bin/sh/common/bin/dsh -a cp /common/mysql/data/indexer/refseqhumanselfblast.MYD /private/var/mysql/indexer/refseqhumanselfblast.MYD/common/bin/dsh -a cp /common/mysql/data/indexer/refseqhumanselfblast.MYI /private/var/mysql/indexer/refseqhumanselfblast.MYI/common/bin/dsh -a cp /common/mysql/data/indexer/refseqhumanselfblast.frm /private/var/mysql/indexer/refseqhumanselfblast.frm/common/bin/dsh -a cp /common/mysql/data/indexer/refseqmouseselfblast.MYD /private/var/mysql/indexer/refseqmouseselfblast.MYD/common/bin/dsh -a cp /common/mysql/data/indexer/refseqmouseselfblast.MYI /private/var/mysql/indexer/refseqmouseselfblast.MYI/common/bin/dsh -a cp /common/mysql/data/indexer/refseqmouseselfblast.frm /private/var/mysql/indexer/refseqmouseselfblast.frm/common/bin/dsh -a cp /common/mysql/data/indexer/refseqratselfblast.MYD /private/var/mysql/indexer/refseqratselfblast.MYD/common/bin/dsh -a cp /common/mysql/data/indexer/refseqratselfblast.MYI /private/var/mysql/indexer/refseqratselfblast.MYI/common/bin/dsh -a cp /common/mysql/data/indexer/refseqratselfblast.frm /private/var/mysql/indexer/refseqratselfblast.frm/common/bin/dsh -a cp /common/mysql/data/indexer/refseqdogselfblast.MYD /private/var/mysql/indexer/refseqdogselfblast.MYD/common/bin/dsh -a cp /common/mysql/data/indexer/refseqdogselfblast.MYI /private/var/mysql/indexer/refseqdogselfblast.MYI/common/bin/dsh -a cp /common/mysql/data/indexer/refseqdogselfblast.frm /private/var/mysql/indexer/refseqdogselfblast.frmsudo chmod 775 /common/pipeline/indexer/collection/copytablesnodes.shsudo /common/pipeline/indexer/collection/copytablesnodes.shCREATE THIS SHELL SCRIPT TO REMOVE THE *blastindex MYSQL TABLES:ON genomics:sudo em /common/pipeline/indexer/collection/removeblastindex.sh#!/bin/sh/common/bin/dsh -a rm /private/var/mysql/indexer/refseqhumanblastindex.MYD/common/bin/dsh -a rm /private/var/mysql/indexer/refseqhumanblastindex.MYI/common/bin/dsh -a rm /private/var/mysql/indexer/refseqhumanblastindex.frm/common/bin/dsh -a rm /private/var/mysql/indexer/refseqmouseblastindex.MYD/common/bin/dsh -a rm /private/var/mysql/indexer/refseqmouseblastindex.MYI/common/bin/dsh -a rm /private/var/mysql/indexer/refseqmouseblastindex.frm/common/bin/dsh -a rm /private/var/mysql/indexer/refseqratblastindex.MYD/common/bin/dsh -a rm /private/var/mysql/indexer/refseqratblastindex.MYI/common/bin/dsh -a rm /private/var/mysql/indexer/refseqratblastindex.frm/common/bin/dsh -a rm /private/var/mysql/indexer/refseqdogblastindex.MYD/common/bin/dsh -a rm /private/var/mysql/indexer/refseqdogblastindex.MYI/common/bin/dsh -a rm /private/var/mysql/indexer/refseqdogblastindex.frmsudo chmod 775 /common/pipeline/indexer/collection/removeblastindex.shON gems:sudo /common/pipeline/indexer/collection/removeblastindex.shRESET PERMISSIONS AND RESTART MYSQL:cd /common/myEST/bin/utilssudo /common/bin/dsh -a chmod -R 660 /private/var/mysql/indexersudo /common/bin/dsh -a chmod 700 /private/var/mysql/indexersudo /common/bin/dsh -a chown -R mysql:wheel /private/var/mysql/indexercd /common/myEST/bin/utilssudo /common/bin/dsh -a /common/myEST/bin/utils/restartmysql.pl++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++Sat Oct 27 19:06:34 PDT 2007LOAD swissprotselfblast sudo utils/clusterloadtable.pl -d indexer -t swissprotselfblastTHEN ON gems (TO RUN dsh):cd /common/pipeline/indexer/collectionsudo ./clusterloadtable.sh( WHICH DOES THIS:/common/bin/dsh -a mkdir -p /private/var/mysql/indexer/common/bin/dsh -a cp /common/mysql/data/indexer/swissprotselfblast.MYD /private/var/mysql/indexer/swissprotselfblast.MYD/common/bin/dsh -a cp /common/mysql/data/indexer/swissprotselfblast.MYI /private/var/mysql/indexer/swissprotselfblast.MYI/common/bin/dsh -a cp /common/mysql/data/indexer/swissprotselfblast.frm /private/var/mysql/indexer/swissprotselfblast.frm/common/bin/dsh -a chmod -R 660 /private/var/mysql/indexer/common/bin/dsh -a chmod 700 /private/var/mysql/indexer/common/bin/dsh -a chown -R mysql:wheel /private/var/mysql/indexerecho `pwd`/common/bin/dsh -a /common/myEST/bin/utils/restartmysql.pl)RESET PERMISSIONS AND RESTART MYSQL:cd /common/myEST/bin/utilssudo /common/bin/dsh -a chmod -R 660 /private/var/mysql/indexersudo /common/bin/dsh -a chmod 700 /private/var/mysql/indexersudo /common/bin/dsh -a chown -R mysql:wheel /private/var/mysql/indexersudo /common/bin/dsh -a /common/myEST/bin/utils/restartmysql.pl++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++Mon Oct 15 13:00:17 EDT 2007CREATED arrayloaddata.pl FOR SELF-BLAST WITHOUT INDEXING OF BLAST OUTPUT FILE1. SELF-BLASTsudo ./arrayblast.pl -d swissprot -q swissprot -t swissprot~5.5 hours2. LOAD DATA./arrayloaddata.pl -d indexer -t swissprotselfblast -i /common/pipeline/indexer/data/swissprot.selfblast/swissprot-swissprot.blast.tsv -s /Users/young/FUNNYBASE/bin/mappings/sql/create_blast.sql3. ADD FULLTEXT KEY./addfulltext.pl -d swissprotselfblast -t test -n queryaccession -f queryaccession~ 3 hours./arrayloaddata.pl -d indexer -t refseqhumanselfblast -i /common/pipeline/indexer/data/refseq.selfblast/refseq-human-refseq-human.blast.tsv -s /Users/young/FUNNYBASE/bin/mappings/sql/create_blast.sql./arrayloaddata.pl -d indexer -t refseqmouseselfblast -i /common/pipeline/indexer/data/refseq.selfblast/refseq-mouse-refseq-mouse.blast.tsv -s /Users/young/FUNNYBASE/bin/mappings/sql/create_blast.sql./arrayloaddata.pl -d indexer -t refseqratselfblast -i /common/pipeline/indexer/data/refseq.selfblast/refseq-rat-refseq-rat.blast.tsv -s /Users/young/FUNNYBASE/bin/mappings/sql/create_blast.sql./arrayloaddata.pl -d indexer -t refseqdogselfblast -i /common/pipeline/indexer/data/refseq.selfblast/refseq-dog-refseq-dog.blast.tsv -s /Users/young/FUNNYBASE/bin/mappings/sql/create_blast.sql++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++Thu Oct 25 22:50:42 PDT 2007FINISHED OFF TESTING OF Match::SynonymIN orthologues:RAN iprscanevalueverify AT MATCH CUTOFF 0.8TO CALCULATE MATCHES BETWEEN IPRSCAN AND BLAST ANNOTATIONS THEN COMPARED WITH MANUALLY CHECKED MATCHES (ALL 66) BETWEEN BLAST AND IPRSCANIN THE iprscanevalueverifycheck TABLE:./iprscanevalueverify.pl -d unigene2  -c 0.80RAN iprscanevalueverifycheckstats:./iprscanevalueverifycheckstats.pl -d unigene2    type I: 0    type II: 0.133333333333333    Predicted matches: 52    Predicted mismatches: 14    Total positive: 60    Total negative: 6    False positives: 0    False negatives: 8    Accuracy: 0.655462184873949    Output .TSV file printed:        /Users/young/FUNNYBASE/pipeline/unigene2/collection/unigene2.iprscanevalueverifycheckstats.tsv        66      60      6       0       8       0       0.133333333333333       0.655462184873949    Dropping 'iprscanevalueverifycheckstats' if exists... done.    Creating table 'iprscanevalueverifycheckstats'...done.    Loading data into table 'iprscanevalueverifycheckstats'... done.        Run time: 00:00:03    Completed ./iprscanevalueverifycheckstats.pl    2:41AM, 26 October 2007    ****************************************RAN iprscanevalueverify AT MATCH CUTOFF 0.4:./iprscanevalueverify.pl -d unigene2  -c 0.4RAN iprscanevalueverifycheckstats:./iprscanevalueverifycheckstats.pl -d unigene2    False positive: coverage match = , predicted match: 1    type I: 0.166666666666667    type II: 0.0166666666666667    Predicted matches: 60    Predicted mismatches: 6    Total positive: 60    Total negative: 6    False positives: 1    False negatives: 1    Accuracy: 0.840749414519906    Output .TSV file printed:        /Users/young/FUNNYBASE/pipeline/unigene2/collection/unigene2.iprscanevalueverifycheckstats.tsv        66      60      6       1       1       0.166666666666667       0.0166666666666667      0.840749414519906    Dropping 'iprscanevalueverifycheckstats' if exists... done.    Creating table 'iprscanevalueverifycheckstats'...done.    Loading data into table 'iprscanevalueverifycheckstats'... done.    ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++Thu Oct 25 22:50:27 PDT 2007FIX selfblast BLAST PARSINGMOST OF THESE CAME UP WITH A SINGLE HIT AND AN INCORRECT LOCATION GIVEN BYTHE INDEX PRODUCED BY blastindex.pl:    Id: P44186    No. hits for accession P44186: 1    Query:    $VAR1 = [              '2'            ];    Target:    $VAR1 = [              '274'            ];    Match boolean: 0    Id: P44187    No. hits for accession P44187: 4    Local output file printed:        /collection/pipeline/indexer/collection/indexer.swissprotblastindexdata.1.tsv        Copying local output file to remote file...    Remote output file:        /common/pipeline/indexer/collection/indexer.swissprotblastindexdata.1.tsv        Copy complete.        Run time: 00:00:02    Completed ./arrayselfblastdistributiondata.pl    7:22PM, 25 October 2007    ****************************************SO GOT THE FASTA LINES FOR THESE AND SOME OTHERS:P44076P44077P44078P44079P44080P44081P44082P44083P44083P44084P44085P44086INTO THE FILE:/common/pipeline/indexer/data/swissprot.selfblast/P44076plusAND BLAST AGAINST swissprot TO AN OUTFILE:BLASTMAT=/common/apps/wublast/matrix; export BLASTMAT; sudo /common/apps/wublast/wu-blastall -p blastp -d /common/data/swissprot -i /common/pipeline/indexer/data/swissprot.selfblast/P44076plus.blast -e 1 mformat 7 -cpus 2 -filter seg -span2THEN RAN THE PARSER:/common/myEST/bin/pipeline4/blastxml2tsv.pl < /common/pipeline/indexer/data/swissprot.selfblast/P44076plus.blastRAN arrayselfblastdistributiondata.pl ON node005:    ...    No. hits for accession Q9DFR6: 37    Id: Q9DFS4    No. hits for accession Q9DFS4: 28    Id: Q9DFZ3    No. hits for accession Q9DFZ3: 1    Query:    $VAR1 = [              '2'            ];    Target:    $VAR1 = [              '274'            ];    Match boolean: 0    Id: Q9DFZ4    No. hits for accession Q9DFZ4: 1    Query:    $VAR1 = [              '2'            ];    Target:    $VAR1 = [              '274'            ];    Match boolean: 0    Id: Q9DG08    No. hits for accession Q9DG08: 26    Id: Q9DG09    No. hits for accession Q9DG09: 26    Id: Q9DG10    ...    SO CHECKED BACK IN P44076plus file for their fastaSEEMED OKAY SO MUST HAVE BEEN SOME DISTURBANCE IN THE INDEXING.... SO SCRAPINDEXING AND STICK TO STRAIGHT LOAD OF PARSED BLAST OUTPUT!!++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++Wed Oct 24 02:10:52 EDT 2007SWISSPROTBLAST INDEX DATA COMPLETED AND PROCESSEDselect count(*) from swissprotblastindexdata;+----------+| count(*) |+----------+| 24454080 |+----------+ALSO REFSEQS COMPLETED:select count(*) from refseqratselfblast;+----------+| count(*) |+----------+|  2508961 |+----------+ select count(*) from refseqhumanselfblast;+----------+| count(*) |+----------+|  3864415 |+----------+1 row in set (0.00 sec)mysql> select count(*) from refseqmouseselfblast;+----------+| count(*) |+----------+|  2956831 |+----------+1 row in set (0.00 sec)mysql> select count(*) from refseqdogselfblast;+----------+| count(*) |+----------+|  5466382 |+----------+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++Wed Oct 17 16:27:00 EDT 2007LOAD MYSQL DATABASES ON CLUSTER WITH utils/clusterloadtable.pl*** NOT FINISHED -- NEED TO SORT OUT PERMISSIONS WITH dsh THROUGH SGE USERLOADED swissprotiprscan ON CLUSTER:sudo utils/clusterloadtable.pl -d indexer -t swissprotiprscancd /common/pipeline/indexer/collectionsudo ./clusterloadtable.shOR DO IT LINE BY LINE:sudo /common/bin/dsh -a mkdir -p /private/var/mysql/indexersudo /common/bin/dsh -a cp /common/mysql/data/indexer/swissprotiprscan.MYD /private/var/mysql/indexer/swissprotiprscan.MYDsudo /common/bin/dsh -a cp /common/mysql/data/indexer/swissprotiprscan.MYI /private/var/mysql/indexer/swissprotiprscan.MYIsudo /common/bin/dsh -a cp /common/mysql/data/indexer/swissprotiprscan.frm /private/var/mysql/indexer/swissprotiprscan.frmsudo /common/bin/dsh -a chmod -R 660 /private/var/mysql/indexersudo /common/bin/dsh -a chmod 700 /private/var/mysql/indexersudo /common/bin/dsh -a chown -R mysql:wheel /private/var/mysql/indexersudo /common/bin/dsh -a sudo /common/myEST/bin/utils/restartmysql.plLOADED THE FOLLOWING TABLES:The SEQUENCE/NAME tables:sudo ./clusterloadtable.pl -d indexer -t swissprotsudo ./clusterloadtable.pl -d indexer -t refseqhumansudo ./clusterloadtable.pl -d indexer -t refseqmousesudo ./clusterloadtable.pl -d indexer -t refseqratsudo ./clusterloadtable.pl -d indexer -t refseqdogThe IPRSCAN tables:sudo ./clusterloadtable.pl -d indexer -t swissprotiprscansudo ./clusterloadtable.pl -d indexer -t swissprotgene3dsudo ./clusterloadtable.pl -d indexer -t swissprotpanthersudo ./clusterloadtable.pl -d indexer -t swissprotpfamsudo ./clusterloadtable.pl -d indexer -t swissprotprintssudo ./clusterloadtable.pl -d indexer -t swissprotprodomsudo ./clusterloadtable.pl -d indexer -t swissprotprofilesudo ./clusterloadtable.pl -d indexer -t swissprotprositesudo ./clusterloadtable.pl -d indexer -t swissprotsmartsudo ./clusterloadtable.pl -d indexer -t swissprottigrfamsThe SELF BLAST tables:sudo ./clusterloadtable.pl -d indexer -t swissprotblastindexsudo ./clusterloadtable.pl -d indexer -t refseqhumanblastindexsudo ./clusterloadtable.pl -d indexer -t refseqmouseblastindexsudo ./clusterloadtable.pl -d indexer -t refseqratblastindexsudo ./clusterloadtable.pl -d indexer -t refseqdogblastindexWHICH I REINDEXED:./blastindex.pl -d swissprot -i /common/pipeline/indexer/data/swissprot.selfblast/swissprot-swissprot.blast.tsv #### FASTER INDEXING WITHOUT REGEX, HOPEFULLY WON'T GET THE PROBLEM:mitogen-activated protein kinase organizer 1-----------------------WD repeat domain 37***********************1070    0       mitogen-activated protein kinase organizer 1    refseq-human    14150114                WD repeat domain 37     refseq-human    41281564                7.11580 -15              \***********************mitogen-activated protein kinase organizer 1-----------------------F-box and WD-40 domain protein 2***********************1070    0       mitogen-activated protein kinase organizer 1    refseq-human    14150114                F-box and WD-40 domain protein 2        refseq-human    6912360         2.74773 -12      \Target accession: Q9V3J8 (Will die slowly protein)        SELECT DISTINCT file, location, offset        FROM swissprotblastindex        WHERE MATCH(queryaccession)        AGAINST('Q9V3J8')***********************2-----------------------274***********************1070    0       2       in) (PheRS)     -52             274     490     1                       1***********************CAUSED BY THIS RECORD:9114342:swissprot	Q7VLG3	SYFB_HAEDU	Phenylalanyl-tRNA synthetase beta chain (EC 6.1.1.20) (Phenylalanine--tRNA ligase beta chain) (PheRS)	swissprot	Q7U6V9	SYFB_SYNPX	Phenylalanyl-tRNA synthetase beta chain (EC 6.1.1.20) (Phenylalanine--tRNA ligase beta chain) (PheRS)	1.27235	-52	2	490	280	1	274		1	279	0.42	TABS SEEM CORRECT:9114342:swissprot-->Q7VLG3-->SYFB_HAEDU-->Phenylalanyl-tRNA synthetase beta chain (EC 6.1.1.20) (Phenylalanine--tRNA ligase beta chain) (PheRS)-->swissprot-->Q7U6V9-->SYFB_SYNPX-->Phenylalanyl-tRNA synthetase beta chain (EC 6.1.1.20) (Phenylalanine--tRNA ligase beta chain) (PheRS)-->1.27235-->-52-->2-->490-->280-->1-->274-->-->1-->279-->0.42-->16510000Completed indexing.Dropping table 'swissprotblastindex' if exists... done.Creating custom table 'swissprotblastindex'... done.Loading data into table 'swissprotblastindex'... doneDoing fultext key 'queryaccession' (queryaccession) ... done.Doing fultext key 'accessions' (queryaccession, targetaccession) ... done.Run time: 00:25:19Completed ./blastindex.pl8:54PM, 18 October 2007****************************************FASTER THAN USING REGEX BEFORE:    16510000    Completed indexing.    Dropping table 'swissprotblastindex' if exists... done.    Creating custom table 'swissprotblastindex'... done.    Loading data into table 'swissprotblastindex'... done    Doing fultext key 'queryaccession' (queryaccession) ... done.    Doing fultext key 'accessions' (queryaccession, targetaccession) ... done.        Run time: 01:18:41    Completed ./blastindex.pl    1:18AM, 18 October 2007    ****************************************BUT REINDEXED SLOWER AGAIN LATER:    16490000    16500000    16510000    Completed indexing.    Dropping table 'swissprotblastindex' if exists... done.    Creating custom table 'swissprotblastindex'... done.    Loading data into table 'swissprotblastindex'... done    Doing fultext key 'queryaccession' (queryaccession) ... done.    Doing fultext key 'accessions' (queryaccession, targetaccession) ... done.        Run time: 01:17:59    Completed ./blastindex.pl    10:39PM, 18 October 2007    ****************************************            2950000    Completed indexing.    Dropping table 'refseqmouseblastindex' if exists... done.    Creating custom table 'refseqmouseblastindex'... done.    Loading data into table 'refseqmouseblastindex'... done    Doing fultext key 'queryaccession' (queryaccession) ... done.    Doing fultext key 'accessions' (queryaccession, targetaccession) ... done.        Run time: 00:04:24    Completed ./blastindex.pl    10:52PM, 18 October 2007    ****************************************            5440000    5450000    5460000    Completed indexing.    Dropping table 'refseqdogblastindex' if exists... done.    Creating custom table 'refseqdogblastindex'... done.    Loading data into table 'refseqdogblastindex'... done    Doing fultext key 'queryaccession' (queryaccession) ... done.    Doing fultext key 'accessions' (queryaccession, targetaccession) ... done.        Run time: 00:08:37    Completed ./blastindex.pl    11:02PM, 18 October 2007    ****************************************        3850000    3860000    Completed indexing.    Dropping table 'refseqhumanblastindex' if exists... done.    Creating custom table 'refseqhumanblastindex'... done.    Loading data into table 'refseqhumanblastindex'... done    Doing fultext key 'queryaccession' (queryaccession) ... done.    Doing fultext key 'accessions' (queryaccession, targetaccession) ... done.        Run time: 00:07:45    Completed ./blastindex.pl    11:18PM, 18 October 2007    ****************************************        2500000    Completed indexing.    Dropping table 'refseqratblastindex' if exists... done.    Creating custom table 'refseqratblastindex'... done.    Loading data into table 'refseqratblastindex'... done    Doing fultext key 'queryaccession' (queryaccession) ... done.    Doing fultext key 'accessions' (queryaccession, targetaccession) ... done.        Run time: 00:03:53    Completed ./blastindex.pl    11:37PM, 18 October 2007    ****************************************++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++Tue Oct 16 04:04:56 EDT 2007IMPROVE SPEED OF iprscancompleteset.plUSE FULLTEXT:ALTER TABLE swissprotiprscan ADD FULLTEXT accession (accession);Query OK, 14910035 rows affected (2 hours 12 min 38.39 sec)Records: 14910035  Duplicates: 0  Warnings: 0LINE 277:my $query = qq{SELECT * FROM swissprotiprscan WHERE MATCH(accession) AGAINST ('$accession')};PROBLEM:THE GENE3D TABLE IDS NOT VERY SPECIFIC - RETURN LARGE NUMBERS OF SEQUENCES SO SLOW DOWNTHE PROCESS.    Collection id: 15    Iprscans:    GENE3D  G3DSA:1.10.395.10    GENE3D  G3DSA:1.10.40.20    GENE3D  G3DSA:3.90.244.10    PANTHER PTHR11573:SF6    PFAM    PF00317    PFAM    PF02867    PFAM    PF03477    PRINTS  PR01183    PROFILE PS00089    PROFILE PS51161    TIGRFAMs        TIGR02506    Target id: G3DSA:1.10.395.10    ****swissprotgene3d has sequences: 198002        Target id: G3DSA:1.10.40.20    ****swissprotgene3d has sequences: 447719        Target id: G3DSA:3.90.244.10    ****swissprotgene3d has sequences: 224501        Target id: PTHR11573:SF6    ****swissprotpanther has sequences: 3989        Target id: PF00317    ****swissprotpfam has sequences: 753        Target id: PF02867    ****swissprotpfam has sequences: 976        Target id: PF03477    ****swissprotpfam has sequences: 966        Target id: PR01183    ****swissprotprints has sequences: 866        Target id: PS00089    No sequences in swissprotprofile have motif PS00089    Target id: PS51161    ****swissprotprofile has sequences: 1025        Target id: TIGR02506    ****swissprottigrfams has sequences: 607        Calculating unique hits per candidate... done.    Calculating stringency... done.    Stringency: 7    Number of candidates passing strigency filter: 304    0    10    20    30    40    50    60    70    80    90SOLUTION:SPLIT THE GENE3D TABLE INTO SEVERAL SUBTABLES AND ACCESS THEM SEPARATELY, ALTHOUGHTHE MAIN COST IS THE RETRIEVAL TIME OF THE ENTRIES, NOT THE SEARCH TIME...mysql> SELECT COUNT(*) FROM swissprotgene3d;+----------+| COUNT(*) |+----------+|   736885 |+----------+SELECT COUNT(*) FROM swissprotgene3d  where targetid like 'G3DSA:1.1%';+----------+| COUNT(*) |+----------+|   166306 |+----------+1 row in set (1.60 sec)mysql> SELECT COUNT(*) FROM swissprotgene3d  where targetid like 'G3DSA:1.%';+----------+| COUNT(*) |+----------+|   269829 |+----------+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++Tue Oct 16 00:58:44 EDT 2007DOWNLOADED LATEST RELEASE (071002) OF TREMBL AND INDEXED AS trembl IN indexer DATABASEftp://ftp.ebi.ac.uk/pub/databases/uniprot/knowledgebase/uniprot_trembl.fasta.gz908355 KB  	10/2/07  	(880 MB)cd ~/FUNNYBASE/pipeline/indexer/datawget ftp://ftp.ebi.ac.uk/pub/databases/uniprot/knowledgebase/uniprot_trembl.fasta.gz~1 HOUR TO DOWNLOAD./swissprot.pl -t trembl -i /Users/young/FUNNYBASE/pipeline/indexer/data/uniprot_trembl.tsv -f fasta    Loading file: /Users/young/FUNNYBASE/pipeline/indexer/iprscan/indexer.trembl.246.tsv ... done.    Loading file: /Users/young/FUNNYBASE/pipeline/indexer/iprscan/indexer.trembl.247.tsv ... done.    Finished loading data into table    Updating fulltext... done.        Run time: 00:24:30    Completed ./swissprot.pl    2:55AM, 16 October 2007    ****************************************    ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++Mon Oct 15 13:00:17 EDT 2007RERAN SWISSPROT SELF-BLAST AND REINDEXED OUTPUT FILEsudo ./arrayblast.pl -d swissprot -q swissprot -t swissprot~5.5 hoursDIAGNOSIS:SAME DURATION AS BEFORE, EVEN THOUGH THIS TIME THE ALIGNMENT SEQUENCES WERENOT INCLUDED IN THE PARSED OUTPUT.THEREFORE, THE TIME TAKEN LIES IN THE XML OUTPUT (CAN'T SWITCH OFF SEQUENCE OUTPUTWITH THE XML OUTPUT AS YOU CAN WITH noseqs WITH THE VANILLA OUTPUT).SOLUTION:REDO BLAST PARSER TO PARSE VANILLA OUTPUT AND USE noseqsREINDEXED SWISSPROT:./blastindex.pl -d swissprot -i /Users/young/FUNNYBASE/pipeline/indexer/data/swissprot-swissprot.blast.tsv     7360000    7370000    7380000    Completed indexing.    Dropping table 'swissprotblastindex' if exists... done.    Creating custom table 'swissprotblastindex'... done.    Loading data into table 'swissprotblastindex'...    done    Doing fultext key 'queryaccession' (queryaccession) ... done.    Doing fultext key 'accessions' (queryaccession, targetaccession) ... done.        Run time: 00:13:55    Completed ./blastindex.pl    11:52PM, 15 October 2007    ****************************************++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++CREATED evalueannotationverified.pl TO COMPARE BEST HIT WITH DISTRIBUTION OF SELF BEST HITS IN THE EXTERNAL DATABASEFor example, if a sequence has its Best hit against a sequence in the Swissprot database, all BLAST hits (passing an E-value cutoff of 1e-05) for that Swissprot sequence against the Swissprot database itself were collected and the E-value distribution of those hits calculated. Correct and incoverage hits were calculated based on a Fuzzy match of annotations. The area under the curve at a given E-value cutoff could then be calculated as the percentage of coveragely annotated hits out of the total hits with E-values equal to or less than the particular cutoff. If the E-value of the original collection sequence hit against the Swissprot sequence lay within the 95% E-value range of coverage annotations, it was considered a coverage annotation.One of the problems with this approach is that it relies upon the completeness and intergrity of the annotations within the database: all sequences must be annotated, annotations must be consistent (only one annotation for the same function) but not necessarily nonredundant (one protein may have several functions and therefore annotations).This can be assumed with the Swissprot database, which is manually curated using a controlled vocabulary. However, other databases are less tightly quality-controlled. There is a significant heterogeneity in the consistency and accuracy of annotations in the Genbank 'non-redundant' sequence database, which are uploaded by thousands of different sequence donors.++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++Sun Oct 14 22:40:29 EDT 2007DID SELF BLAST OF REFSEQ DATABASES AND INDEXEDDATABASE SIZES:refseq-dog      22MBrefseq-human    16MBrefseq-rat      14MBrefseq-mouse    14MBsudo ./arrayblast.pl -d refseq -q refseq-mouse -t refseq-mousesudo ./arrayblast.pl -d refseq -q refseq-dog -t refseq-dogsudo ./arrayblast.pl -d refseq -q refseq-human -t refseq-humansudo ./arrayblast.pl -d refseq -q refseq-rat -t refseq-ratMOUSE        Job 1298213.5 exited with exit code 0.    Job 1298213.20 exited with exit code 0.        Job exit codes: 0 = Success, 99 = Requeue, Rest = Success: exit code in accounting file        Merging output files... done.        Run time: 00:16:25    Completed ./arrayblast.pl    11:38PM, 14 October 2007    ****************************************    DOG        Job 1298214.30 exited with exit code 0.        Job exit codes: 0 = Success, 99 = Requeue, Rest = Success: exit code in accounting file        Merging output files... done.        Run time: 00:34:26    Completed ./arrayblast.pl    0:44AM, 15 October 2007    ****************************************HUMAN    Job exit codes: 0 = Success, 99 = Requeue, Rest = Success: exit code in accounting file        Merging output files... done.        Run time: 00:21:40    Completed ./arrayblast.pl    1:07AM, 15 October 2007    ****************************************RAT        Job 1298216.10 exited with exit code 0.    Job 1298216.7 exited with exit code 0.        Job exit codes: 0 = Success, 99 = Requeue, Rest = Success: exit code in accounting file        Merging output files... done.        Run time: 00:14:49    Completed ./arrayblast.pl    1:22AM, 15 October 2007    ****************************************INDEXED ALL===========MOUSE./blastindex.pl -d refseq-mouse -i /common/pipeline/refseq/blast/refseq-mouse-refseq-mouse.blast.tsv     2950000    Completed indexing.    Dropping table 'refseqmouseblastindex' if exists... done.    Creating custom table 'refseqmouseblastindex'... done.    Loading data into table 'refseqmouseblastindex'...    done    Doing fultext key 'queryaccession' (queryaccession) ... done.    Doing fultext key 'accessions' (queryaccession, targetaccession) ... done.        Run time: 00:04:23    Completed ./blastindex.pl    1:16AM, 15 October 2007    ****************************************DOG./blastindex.pl -d refseq-dog -i /common/pipeline/refseq/blast/refseq-dog-refseq-dog.blast.tsv     5460000    Completed indexing.    Dropping table 'refseqdogblastindex' if exists... done.    Creating custom table 'refseqdogblastindex'... done.    Loading data into table 'refseqdogblastindex'...    done    Doing fultext key 'queryaccession' (queryaccession) ... done.    Doing fultext key 'accessions' (queryaccession, targetaccession) ... done.        Run time: 00:08:39    Completed ./blastindex.pl    1:32AM, 15 October 2007    ****************************************HUMAN./blastindex.pl -d refseq-human -i /common/pipeline/refseq/blast/refseq-human-refseq-human.blast.tsv         3860000    Completed indexing.    Dropping table 'refseqhumanblastindex' if exists... done.    Creating custom table 'refseqhumanblastindex'... done.    Loading data into table 'refseqhumanblastindex'...    done    Doing fultext key 'queryaccession' (queryaccession) ... done.    Doing fultext key 'accessions' (queryaccession, targetaccession) ... done.        Run time: 00:05:33    Completed ./blastindex.pl    2:04AM, 15 October 2007    ****************************************RAT./blastindex.pl -d refseq-rat -i /common/pipeline/refseq/blast/refseq-rat-refseq-rat.blast.tsv     2490000    2500000    Completed indexing.    Dropping table 'refseqratblastindex' if exists... done.    Creating custom table 'refseqratblastindex'... done.    Loading data into table 'refseqratblastindex'...    done    Doing fultext key 'queryaccession' (queryaccession) ... done.    Doing fultext key 'accessions' (queryaccession, targetaccession) ... done.        Run time: 00:04:00    Completed ./blastindex.pl    2:26AM, 15 October 2007    ****************************************++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++Sat Oct 13 22:06:05 EDT 2007CREATED swissprotblastindex.pl TO INDEX SWISSPROT SELF-BLAST OUTPUT TSV FILES    ...    /Volumes/terabook/selfblast/swissprot.blast.7.tsv.index    /Volumes/terabook/selfblast/swissprot.blast.8.tsv.index    /Volumes/terabook/selfblast/swissprot.blast.9.tsv.index    done    Doing fultext key 'queryaccession' (queryaccession) ... done.    Doing fultext key 'accessions' (queryaccession, targetaccession) ... done.        Run time: 00:06:34    Completed ./swissprotblastindex.pl    10:04PM, 13 October 2007    ****************************************FULLTEXT KEYS:'queryaccession' (queryaccession) 'accessions' (queryaccession, targetaccession) 	NAME		swissprotblastindex		PURPOSE			INDEX THE SWISSPROT SELF BLAST OUTPUT TSV FILES			USAGE			./swissprotblastindex.pl [-h]		EXAMPLE	   ./swissprotblastindex.plTHEN RAN arrayblast ON swissprot BUT WITH THE 'PIPED' ARGUMENT AND noseqs IN THE BLAST ARGUMENTS:sudo ./arrayblast.pl -d swissprot -q swissprot -t swissprot    ...    Getting target type... protein    Getting query type... protein    Database: swissprot    Target type: protein    Xdformat: /Users/young/FUNNYBASE/apps/blast/xdformat    Number of sequences: **188477**            Doing ARRAYBLAST of 'swissprot' (total 188477) against swissprot    Cluster::initialise()    $VAR1 = bless( {                     '_tasks' => 30,                     '_commands' => '            BLASTMAT=/common/apps/wublast/matrix            export BLASTMAT        /common/apps/wublast/wu-blastall -p blastp -d /common/data/swissprot -i /common/pipeline/swissprot/blast/swissprot-swissprot.$SGE_TASK_ID -e 1e-5 mformat 7 -cpus 2 -filter seg -span2 noseqs | /usr/bin/perl /common/myEST/bin/pipeline4/blastxml2tsv.pl > /common/pipeline/swissprot/blast/swissprot-swissprot.blast.$SGE_TASK_ID.tsv    ',                     '_verbose' => 1,                     '_scriptfile' => '/common/pipeline/swissprot/blast/swissprot-swissprot.sh'                   }, 'Cluster::ArrayJob::SGE' );    qsub command: qsub -sync y -t 1-30 /common/pipeline/swissprot/blast/swissprot-swissprot.sh    ...        Job 1298196.9 exited with exit code 0.    Job 1298196.13 exited with exit code 0.    Job 1298196.24 exited with exit code 0.    Job 1298196.28 exited with exit code 0.        Job exit codes: 0 = Success, 99 = Requeue, Rest = Success: exit code in accounting file        ++++ Alignment::Blast::merge_files(self, files, outputfile)        Run time: 01:11:51    Completed ./arrayblast.pl    4:09AM, 14 October 2007    ****************************************++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++Sat Oct 13 00:44:34 EDT 2007CREATED verifyannotationstats.pl TO CHECK E-VALUE BASED ANNOTATION	16700	16800	Output .TSV file printed:		/Users/young/FUNNYBASE/pipeline/funnybase11/collection/funnybase11.verifyannotation.tsv		Dropping 'verifyannotation' if exists... done.	Creating table 'verifyannotation'...done.	Loading data into table 'verifyannotation'... done.		Run time: 01:39:00	Completed ./verifyannotation.pl	4:13AM, 12 October 2007	****************************************The 'coverage annotation' table contains those BLAST hits that have coverages and mismatch values above thecutoffs for these two criteria. The cutoffs were varied in a complete combination of all values to get an impression of the interaction of these two criteria on the rate of annotation mismatch among those sequences meeting the cutoff criteria.The 'verify annotation statistics' table uses as its input the 'verify annotation' table, which was created as follows:		- For all sequences in the 'coverage annotation' table (at varying cutoff stringencies), get the 'collection BLAST coverages' table coverage values of the best coverage BLAST hits (Maximum 50 hits)					-	For each high coverage hit, do a lexical Fuzzy match to decide if it is the same as the highest E-value annotation			THE QUESTIONS WERE AS FOLLOWS:HIGHEST E-VALUE ANNOTATION IS THE SAME AS BEST COVERAGE ANNOTATIONSFor each collection sequence, the BLAST hits that meet or surpass the more stringent 'coverage' and 'mismatch' cutoffs can be considered with a greater confidence to have a higher degree of structural homology and hence functional similarity to the collection sequence.But, what proportion of the high coverage hits have matching annotation to the highest E-value annotations? What does this tell us about the amount of confidence to put in the high E-value annotation method. Alternately, what does it tell us about the DISTRIBUTION OF COVERAGES PER SEQUENCE AND AS A WHOLEWhat level of coverage should we consider a 'coverage annotation' threshold? With reducing the stringency of these cutoffs, the expected increase in mismatches between the high E-value hit and the high coverage hits, and the increase in mismatches between the highest coverage hit and the rest of the high coverage hits should show us where to place the bar. But is this bar the same for each sequence?select count(distinct targetid) as count, collectionid from verifyannotation group by collectionid;select count(distinct targetid) as count, collectionid from verifyannotation group by collectionid where matchboolean = 0;Calculate the average, median, and standard deviation of the proportion of mismatches per sequence.Did sequences with more high coverage hits have proportionally more or less mismatches between the high-coverage annotations and the high E-value annotation?select count(*) from verifyannotation;+----------+| count(*) |+----------+|   533306 |+----------+1 row in set (0.00 sec++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++Thu Oct 11 22:09:19 EDT 2007RAN IPRSCAN ANNOTATION TO ANNOTATE SEQUENCES WITH NO BLAST HITS BUT WITH IPRSCAN HITS./iprscanannotation.pl -d funnybase11Doing InterProScan annotations for collection sequences (total 2643)010020030040050060070080090010001100120013001400150016001700180019002000210022002300240025002600Output .TSV file printed:/Users/young/FUNNYBASE/pipeline/funnybase11/collection/funnybase11.iprscanannotation.tsvDropping table 'iprscanannotation... done.Creating table 'iprscanannotation' if not exists... done.Loading data into table 'iprscanannotation'... done.Updating FULLTEXT targetannotation (targetannotation, targetsource, targetid, targetname)... done.****************************************No. iprscan annotations: 471Run time: 00:00:09Completed ./iprscanannotation.pl10:08PM, 11 October 2007****************************************select count(distinct collectionid) from iprscanannotation;+------------------------------+| count(distinct collectionid) |+------------------------------+|                          471 |+------------------------------+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++Thu Oct 11 21:09:19 EDT 2007CREATED coverageannotation.pl AND RAN (03:14:45 DURATION) WITH A RANGE OF COVERAGE CUTOFF AND MISMATCH CUTOFF VALUES	NAME     coverageannotation.pl		PURPOSE			 CONSIDER CORRECT ANNOTATIONS THOSE THAT HAVE COVERAGE		 		 ABOVE A PRESET TARGET MATCH COVERAGE THRESHOLD (DEFAULT = 80%)		 				1. PRINT CORRECT ANNOTATIONS TO TSV FILE				2. LOAD INTO coverageannotation TABLE		INPUT			1. collectionsequencesannotation TABLE				2. collectionblastcoverageTABLE		OUTPUT			1. coverageannotation TABLE	NOTES			CORRECT ANNOTATION WHEN MATCH IS A HIGH PROPORTION OF THE TARGET				SEQUENCE AND NON-MATCHING PART IS VERY SHORT					GOOD MATCH			++++++++++++++++++++++++++++++++++++++++++++++++	++++++++++++++++++++++++++++++++++++++++	SEQUENCE ENDS		MODERATE MATCH			++++++++++++++++++++++++++++++++++++++++++++++++	++++++++++++++++++++++++++++++++++++++++------------	MISMATCH				POOR MATCH			++++++++++++++++++++++++++++++++++++++++++++++++		+++++++++++------------++++++++++++-------------	SEVERAL MISMATCHES		BAD MATCH			++++++++++++++++++++++++++++++++++++++++++++++++		           ------------++++++++++++-------------	LOW COVERAGE															SEVERAL MISMATCHES			USAGE			./coverageannotation.pl <-d database> [-c coverage_cutoff] [-m mismatch_cutoff] [-X drop_table] [-h]	-d database         :	name of the sequence database    -c coverage_cutoff  :   target coverage cutoff value (0-1)    -m mismatch_cutoff  :   target mismatch cutoff value (0-1)    -X drop_table       :   drop table (Erase all existing data)	-h help             :	print this help message	EXAMPLES./coverageannotation.pl -d funnybase11 -c 0.90,0.80,0.70,0.60 -m 0.30,0.25,0.20,0.15,0.10,0.05 -X./coverageannotation.pl -d funnybase11 -c 0.90,0.60 -m 0.30,0.25 -XRAN WITH THESE MISMATCH AND COVERAGE CUTOFFS:./coverageannotation.pl -d funnybase11 -c 0.90,0.80,0.70,0.60 -m 0.30,0.25,0.20,0.15,0.10,0.05 -X		5100	****************************************	Coverage cutoff: 0.60	Mismatch cutoff: 0.05	No. coverage: 299		Run time: 00:10:40	2:18AM, 12 October 2007	Output .TSV file printed:		/Users/young/FUNNYBASE/pipeline/funnybase11/collection/funnybase11.coverageannotation.tsv		Dropping 'coverageannotation' if exists... done.	Creating table 'coverageannotation'...done.	Loading data into table 'coverageannotation'... done.		Total run time: 03:14:45	Completed ./coverageannotation.pl	2:18AM, 12 October 2007	****************************************TEST RUN FOR TIMINGS:./coverageannotation.pl -d funnybase11 -c 0.90,0.60 -m 0.30,0.25 -X	Are you sure you want to drop the table (erase all the data)?	y	Doing annotations for collection sequences (total 5184)	Coverage cutoff: 0.90	Mismatch cutoff: 0.30	0	100	...	5000	5100	****************************************	Coverage cutoff: 0.90	Mismatch cutoff: 0.30	No. coverage: 700		Run time: 00:05:29	9:55PM, 11 October 2007	Coverage cutoff: 0.90	Mismatch cutoff: 0.25	0	100	...	5000	5100	****************************************	Coverage cutoff: 0.90	Mismatch cutoff: 0.25	No. coverage: 655		Run time: 00:05:36	10:01PM, 11 October 2007	Coverage cutoff: 0.60	Mismatch cutoff: 0.30	0	100	...	5000	5100	****************************************	Coverage cutoff: 0.60	Mismatch cutoff: 0.30	No. coverage: 1297		Run time: 00:10:53	10:12PM, 11 October 2007	Coverage cutoff: 0.60	Mismatch cutoff: 0.25	0	100	...	5000	5100	****************************************	Coverage cutoff: 0.60	Mismatch cutoff: 0.25	No. coverage: 1161		Run time: 00:10:34	10:22PM, 11 October 2007	Output .TSV file printed:		/Users/young/FUNNYBASE/pipeline/funnybase11/collection/funnybase11.coverageannotation.tsv		Dropping 'coverageannotation' if exists... done.	Creating table 'coverageannotation'...done.	Loading data into table 'coverageannotation'... done.		Total run time: 00:32:32	Completed ./coverageannotation.pl	10:22PM, 11 October 2007	****************************************++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++Wed Oct 10 17:48:42 EDT 2007collectionblastcoverage VERY SLOW (100 entries IN HALF AN HOUR)CREATED TO GATHER COVERAGE STATS ON TOP 100 (OR ALL AVAILABLE IF < 100) BLASTHITS FOR EACH COLLECTION SEQUENCE( WILL USE TO DEFINE CORRECT ANNOTATIONS USING collectionsequencescoverageannotation.pl )9899Output .TSV file printed:/Users/young/FUNNYBASE/pipeline/funnybase11/collection/funnybase11.collectionblastcoverage.tsvDropping table 'collectionblastcoverage... done.Creating table 'collectionblastcoverage' if not exists... done.Loading data into table 'collectionblastcoverage'... done.Updating FULLTEXT targetannotation (targetannotation, targetsource, targetid, targetname)... done.Run time: 00:34:30Completed ./collectionblastcoverage.pl5:17PM, 10 October 2007****************************************SOLUTION: DO TOP 50 HITS	11970	11971	11972	Output .TSV file printed:		/Users/young/FUNNYBASE/pipeline/funnybase11/collection/funnybase11.collectionblastcoverage.tsv		Dropping table 'collectionblastcoverage... done.	Creating table 'collectionblastcoverage' if not exists... done.	Loading data into table 'collectionblastcoverage'... done.	Updating FULLTEXT targetannotation (targetannotation, targetsource, targetid, targetname)... done.		Run time: 07:56:54	Completed ./collectionblastcoverage.pl	7:39AM, 11 October 2007	****************************************++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++Mon Oct  8 18:06:30 EDT 2007INDEX BLAST DATABASES FOR SEQUENCE AND DESCRIPTIONSWISSPROTmappings/swissprotsequence.pl -f /Users/young/FUNNYBASE/pipeline/indexer/data/uniprot_sprot.dat -t data274295 records FROM FASTA FILEREFSEQsrefseq-human		29528refseq-mouse		26916refseq-rat			24085refseq-dog			33740mappings/refseqsequence.pl -f /Users/young/FUNNYBASE/databases/refseq/species/Homo_sapiens.refseq.uniq -t refseqhumanmappings/refseqsequence.pl -f /Users/young/FUNNYBASE/databases/refseq/species/Mus_musculus.refseq.uniq -t refseqmousemappings/refseqsequence.pl -f /Users/young/FUNNYBASE/databases/refseq/species/Rattus_norvegicus.refseq.uniq -t refseqratmappings/refseqsequence.pl -f /Users/young/FUNNYBASE/databases/refseq/species/Canis_familiaris.refseq.uniq -t refseqdog++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++Thu Oct  4 00:09:58 EDT 2007CREATED arrayiprscan.pl AND arrayirpscandaemon.pl REFACTORED FROM ORTHOLOGUES COUNTERPARTS	NAME		arrayiprscan.pl		PURPOSE			RUN iprscan ON ALL COLLECTION SEQUENCES		USAGE	  	  ./arrayiprscan.pl <-d database> [-h]	  	  -d database         :  name of database	  -h print_help       :  print out help info		EXAMPLES		sudo ./arrayiprscan.pl -d funnybase10	NAME     arrayiprscandaemon.pl		PURPOSE		  RUN MULTIPLE INSTANCES OF iprscan ON ALL COLLECTION SEQUENCES		INPUT			1. XML FILE arrayiprscan.xml for arrayiprscan.pl			2. App MODULE TO RUN arrayiprscan.pl AS OBJECT USING IO::Pipe 		OUTPUT			1. OUTPUT OF arrayiprscan.pl, I.E.:				- IPRSCAN OUTPUT FILES IN iprscan DIRECTORY:					<orthologue_database>.out.<orthologue_number>.<sequence_number> 				- ERROR AND OUTPUT FILES IN iprscan DIRECTORY IF FAILED OR INCOMPLETE					<orthologue_database>.out.<orthologue_number>.<sequence_number>.STDOUT 			<orthologue_database>.out.<orthologue_number>.<sequence_number>.STDERR 		USAGE	  	  ./arrayiprscandaemon.pl <-d database> [-n number_instances] [-h]	  		  -d database         :  name of database		  -n number_instances :  name of database		  -h print_help       :  print out help info		EXAMPLES:	./arrayiprscandaemon.pl -d unigene -n 10++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++Thu Sep 27 16:51:51 EDT 2007NO SEQUENCE FOR SOME ENTRIES IN collectionsequencesDIAGNOSIS: PROBLEM IS IN FILTER AT assemblyreadsassemblysequences.plselect * from assemblysequences where collectionid=10584     -> \G*************************** 1. row ***************************        collectionid: 10584 collectionaccession: 1 assemblydescription:     assemblydatetime: 2007-05-31 18:12:59        assemblyname: funnybase11      assemblynumber: 1        assemblytype: cap3      sequencenumber: 14354        sequencetype: singlet    assemblysequence:      assemblyquality: assemblysequencetrim:  assemblyqualitytrim:            trimstart: 0            trimstop: 0                snps:       averagequality: 0.00         numberreads: 1           readnames: 159-102-D12        minreaddepth: 0.00        maxreaddepth: 0.00        readcoverage: 0.00              divtag:                  svg: 1 row in set (0.16 sec)FASTA SEQUENCE IS EMPTY:getlines -f *singlets -n 156980 -l 10 AATATACGTTATTTGATCAATTCTATTGGTTTTTCTTGATTTATCTTAACATCTTTTATTTATATATAATTTTGCAACTTGCATATAATACCATCATCTTCAGATATCTAAATTTGTTCATGCCTCACATATTCAACTATAATCCTATACAATAATTATTTGTCTGAACATAGATACACACCTGCACGTAACGACCTTATCATATGGCCGTTATTGTAGCTGTTCTCTGTGCATATATATGA>159-102-D12>159-102-E02TTTTTTTTTTACTGTAAAAAACTTCATTACTTTATTTTCTTTCAGTTATGTAAAATCATCACAAGTACATCCAAATACAAAATATTCTCACTTAAATTGTGACATTCTGGAAAAATGTGACAAAGTTTAGAGATATGTTCAACAAAAGTCAGATACATCAGCGTCAGCAATTAAAAAGGTmysql> select count(*) from assemblysequences where assemblysequence='' and sequencetype ='contig';+----------+| count(*) |+----------+|        0 |+----------+1 row in set (0.16 sec)mysql> select count(*) from assemblysequences where assemblysequence='' and sequencetype ='singlet';+----------+| count(*) |+----------+|      225 |+----------+1 row in set (0.16 sec)getlines -f *singlets -n 156980 -l 10 AATATACGTTATTTGATCAATTCTATTGGTTTTTCTTGATTTATCTTAACATCTTTTATTTATATATAATTTTGCAACTTGCATATAATACCATCATCTTCAGATATCTAAATTTGTTCATGCCTCACATATTCAACTATAATCCTATACAATAATTATTTGTCTGAACATAGATACACACCTGCACGTAACGACCTTATCATATGGCCGTTATTGTAGCTGTTCTCTGTGCATATATATGA>159-102-D12>159-102-E02TTTTTTTTTTACTGTAAAAAACTTCATTACTTTATTTTCTTTCAGTTATGTAAAATCATCACAAGTACATCCAAATACAAAATATTCTCACTTAAATTGTGACATTCTGGAAAAATGTGACAAAGTTTAGAGATATGTTCAACAAAAGTCAGATACATCAGCGTCAGCAATTAAAAAGGTselect collectionid, sequencenumber, readnames from assemblysequences where assemblysequence = '';|        10009 |          13389 | 159-073-A01 ||        10093 |          13546 | 159-077-B03 ||        10150 |          13651 | 159-080-B04 ||        10584 |          14354 | 159-102-D12 ||        10622 |          14415 | 159-104-C03 ||        10640 |          14444 | 159-105-A06 ||        10650 |          14462 | 159-105-E10 ||        11144 |          15363 | 159-131-D02 |+--------------+----------------+-------------+225 rows in set (0.16 sec)dlc-genomics:~/FUNNYBASE/pipeline/funnybase11/edit_dir young$ fastaseq -f *singlets -n 14444>159-105-A06dlc-genomics:~/FUNNYBASE/pipeline/funnybase11/edit_dir young$ fastaseq -f *singlets -n 14462>159-105-E10dlc-genomics:~/FUNNYBASE/pipeline/funnybase11/edit_dir young$ fastaseq -f *singlets -n 15363>159-131-D02++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++Fri Sep 14 05:41:40 EDT 2007AFTER LOADING readsdbest OF funnybase11array7K:select experiment, count(*) from readsdbest group by experiment;+------------+----------+| experiment | count(*) |+------------+----------+|          0 |        1 ||        123 |       59 ||        124 |       18 ||        125 |      192 ||        126 |     1319 ||        130 |      473 ||        151 |      272 ||        152 |      177 ||        153 |      294 ||        154 |      218 ||        155 |      195 ||        156 |      247 ||        157 |      242 ||        158 |      281 ||        159 |     2398 |+------------+----------+AFTER LOADING readsdbest OF funnybase11:|      21705 |        1 ||      21706 |        1 ||      21707 |        1 ||      21708 |        1 ||      21709 |        1 ||      21710 |        1 ||      21711 |        1 |+------------+----------+17525 rows in set (0.23 sec)++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++Fri Sep 14 04:10:55 EDT 20077K ARRAY WORKFLOW SCHEMATO DO: array.collectionannotation.xml		<STAGE>			<STAGENAME>Contig-read alignments</STAGENAME>			<STAGEDESCRIPTION>Extract 7K array entries from the read-contig alignments table</STAGEDESCRIPTION>			<XMLFILE>%ROOTDIR%/bin/pipeline%PIPELINE_GENERATION%/xml/collectionsequencesextractrows.xml</XMLFILE>			<ARGUMENTS>"-d%DATABASE%", "-tfunnybase11", "-bcollectionsequencesalignment", "-fcollectionid", "-i%ROOTDIR%/pipeline/funnybase11array7K/collection/funnybase11array7K.collectionsequenceslist.tsv"</ARGUMENTS>			<DATABASE>funnybase11array7K</DATABASE>			<USER>%USER%</USER>			<PASSWORD>%PASSWORD%</PASSWORD>				</STAGE>		<STAGE>			<STAGENAME>7K array download</STAGENAME>			<STAGEDESCRIPTION>Create the 7K array collection sequences download file</STAGEDESCRIPTION>			<XMLFILE>%ROOTDIR%/bin/pipeline%PIPELINE_GENERATION%/xml/collectionsequencesdownload.xml</XMLFILE>			<ARGUMENTS>"-dfunnybase11array7K", "-g19"</ARGUMENTS>			<DATABASE>funnybase11array7K</DATABASE>			<USER>%USER%</USER>			<PASSWORD>%PASSWORD%</PASSWORD>				</STAGE>++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++Wed Sep 12 20:24:34 EDT 2007MASTER WORKFLOW SCHEMA(TO DO: reseq SCHEMA FOR karenia AND funnybase, CUMULATIVE ASSEMBLY FROM aplysia)assemblyCollect reads, screen for vector, load into mysql and assemble with CAP3	readscollect	readsphred	readsarrayscreened	reads	readsfasta	readsassemblyCAP3collectionLoad into assemblysequences table and populate collectionsequences table	Create singlest .qual file	readsfastasingletsqualfile.pl -d funnybase11	Run time: 00:00:02		Filter assembled sequences by trimmed length cutoff, print to .tsv files for assemblyreads and assemblysequences tables	assemblyreadsassemblysequences.pl -d funnybase11 -q 10	Run time: 00:04:52		Load .tsv files into assemblyreads and assemblysequences tables	./assemblyreadsassemblysequencesloaddata.pl -d funnybase11	3 secs.		Populate collectionsequences with assembly sequences	./collectionsequences.pl -d funnybase11	Run time: 00:00:13				Parse assembled sequence-reads alignment from *.cap.out file	collectionsequencesalignmentsnps1. PREDICT SNPs WITH polyphredassemblysequencespolyphred.pl2. CONDENSE .poly FILE INTO .stats FILESNPassemblysequences.pl -d funnybase113. UPDATE snp_stats FIELD OF stats TABLESNPstats.pl -d funnybase11blast (first time - on funnybase11 sequences)BLAST COLLECTION SEQUENCESsudo ./collectionarrayblast.pl -d funnybase11    Run time: 00:55:49LOAD BLAST DATAsudo ./collectionblastloaddata.pl -d funnybase11Run time: 00:01:22POPULATE collectionsequencesannotation./collectionsequencesannotation.pl -d funnybase11Run time: 00:01:55	collectionsequencesarrayblast	collectionsequencesarrayblastloaddata	|	|	collectionblastbesthits 	|           |	|           |	|        collectionsequencesannotation	|               |	|               |	collectionsequencesdownload		pathwayscollectionsequencesannotationeccollectionsequencesannotationgocollectionsequencesannotationkeggiprscan	collectionsequencesorf	collectionsequencesuniqueorf	collectionsequencesuniqueorfarrayiprscandaemon	collectionsequencesiprscancomparisonDO ANNOTATION COMPARISON BETWEEN supercraw0 AND funnybase11GET supercraw0 UNIQUE SEQUENCES:./collectionsequencesuniquesequences.pl -d supercraw0GET funnybase11 UNIQUE SEQUENCES:./collectionsequencesuniquesequences.pl -d funnybase11Run time: 00:00:36COMPARE WITH supercraw0 UNIQUE SEQUENCES:./comparemultiplecollectionannotation.pl -d supercraw0 -t funnybase11Run time: 00:00:36extractionEXTRACT ASSEMBLY SEQUENCES (CONTIGS AND SINGLETS) FROM supercraw0 THAT DON'T SHARE ANNOTATION WITH funnybase11 AND LOAD INTO assemblysequences AND assemblyreadsCreate *.extract.singlets and *.extract.contigs files./comparemultipleextractassemblysequences.pl -d supercraw0 -m funnybase11 -t comparemultipleannotation_supercraw0_funnybase11Run time: 00:00:01CREATE *.extract.singlets.qual FILE./readsfastasingletsqualfile.pl -d supercraw0 -f /Users/young/FUNNYBASE/pipeline/supercraw0/annotation/comparemultiple.supercraw0-funnybase11.extract.singletsRun time: 00:00:01CREATE .extract.contigs.qual FILE:./readsfastacontigsqualfile.pl -d supercraw0 -f /Users/young/FUNNYBASE/pipeline/supercraw0/annotation/comparemultiple.supercraw0-funnybase11.extract.contigs -t contigsRun time: 00:00:01    PREPARE DATA TO POPULATE assemblyreads AND assemblysequences TABLES:./assemblyreadsassemblysequences.pl -d funnybase11 -n supercraw0 -f /Users/young/FUNNYBASE/pipeline/supercraw0/annotation/comparemultiple.supercraw0-funnybase11.extract.contigsRun time: 00:00:12LOAD DATA into assemblyreads AND assemblysequences TABLES./assemblyreadsassemblysequencesloaddata.pl -d funnybase11 -n supercraw0 -f /Users/young/FUNNYBASE/pipeline/supercraw0/annotation/comparemultiple.supercraw0-funnybase11.extract.contigs -w    POPULATE collectionsequences WITH supercraw0 UNIQUE SEQUENCES./collectionsequences.pl -d funnybase11 -n supercraw0redo blastBLAST supercraw0 + funnybase11 SEQUENCES (JUST IN CASE) sudo ./collectionarrayblast.pl -d funnybase11POPULATE collectionsequencesannotation WITH supercraw0 + funnybase11 SEQUENCES./collectionsequencesannotation.pl -d funnybase11CALCULATE READ COVERAGEcollectionsequencesreadcoverage./assemblysequencesreadcoverage.pl -d funnybase11Run time: 00:22:23DO COLLECTION SEQUENCES HTML FOR WEBSITEPOPULATE collectionsequencesdiv TABLE./collectionsequencesdiv.pl -d funnybase11POPULATE collectionsequencesblastdiv TABLE./collectionsequencesblastdiv.pl -d funnybase11Analyse platesDO selectexperiment HTML OF platesinfo TABLE:./experimentplatesdiv.pl -d funnybase11FOR HTML divs OF ALL PLATES IN THE MYSQL TABLE 'plates'./plates.pl -d funnybase11./platesinfo.pl -d funnybase11./platesdiv.pl -d funnybase11DO QUALITY DISTRIBUTION GRAPHS./sequencequalitybargraphengine.pl -d funnybase11CALCULATE STATS./stats.pl -d funnybase11COMPARE funnybase11 with funnybase10 ./compare.pl -d funnybase11 -t funnybase10Runtime: LONG (overnight)++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++Fri Aug 24 01:48:58 EDT 2007GET EC ID-NAME MAPPINGThe SWISS-PROT, PROSITE and ENZYME database files are available by FTPfrom the following file servers:   ftp.expasy.ch   ftp.ebi.ac.ukSWISS-PROT   ftp://ftp.expasy.ch/databases/swiss-prot   ftp://ftp.ebi.ac.uk/pub/databases/swissprot/releasePROSITE   ftp://ftp.expasy.ch/databases/prosite   ftp://ftp.ebi.ac.uk/pub/databases/prositeENZYME   ftp://ftp.expasy.ch/databases/enzyme   ftp://ftp.ebi.ac.uk/pub/databases/enzyme   README FOR ENZYME FILES:>>>ftp://ftp.ebi.ac.uk/pub/databases/enzyme/README********************************* ENZYME nomenclature database *********************************FTP site:   Organization   Swiss Institute of Bioinformatics   Address        ftp.expasy.org   Directory      /databases/enzymeThis directory contains the following files: File name       Description                                  ------------    ------------------------------------------------------------enzyme  .dat    ENZYME database data fileenzclass.txt    Definition of enzymes classes, subclasses and sub-subclassesenzuser .txt    User manual for ENZYMEenzyme  .get    How to obtain ENZYME<<<RELEASE DATES:README  	1 KB  	6/20/2006  	12:00:00 AMenzclass.txt 	16 KB 	8/21/2007 	8:57:00 PMenzuser.txt 	15 KB 	8/21/2007 	8:57:00 PMenzyme.dat 	3672 KB 	8/21/2007 	8:57:00 PMenzyme.get 	4 KB 	8/21/2007 	8:57:00 PMDirectory: release 		7/26/2006 	12:00:00 AMDirectory: release_with_updates 		7/26/2006 	12:00:00 AM++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++Thu Aug 23 18:20:10 EDT 2007DISJOINTED spkw NAMES BETWEEN THE swissprot2spkw AND spkw2go TABLES?swissprot2spkw - FROM uniprot_sprot.dat ENTRIES 951392800 Nov 14  2006 uniprot_sprot.datftp://ftp.expasy.ch/databases/uniprot/current_release/knowledgebase/complete/uniprot_sprot.dat.gzspkw2go - FROM FILE DOWNLOADED FROM GO53567 Feb 25 12:31 2007 spkw2goTEST:UNIPROT SHOWS 'ATP-binding' AND spkw2go SHOWS 'ATP-binding'UNIPROT SHOWS 'ATP synthesis' AND spkw2go SHOWS 'ATP synthesis'316350:KW   Acetylation; ATP-binding; Cytoskeleton; Methylation; Muscle protein;316409:KW   ATP-binding; Cytoskeleton; Muscle protein; Nucleotide-binding;316582:KW   3D-structure; Acetylation; ATP-binding; Cytoskeleton;316737:KW   Acetylation; ATP-binding; Cytoskeleton; Methylation; Muscle protein;1206408:KW   ATP synthesis; ATP-binding; CF(1); Chloroplast;1206469:DR   GO; GO:0042777; P:ATP synthesis coupled proton transport (sen...; IEA:HAMAP.select * from spkw2go limit 10;+---------+------------------------------------+---------+---------------------------------+| goid    | goname                             | spkwid  | spkwname                        |+---------+------------------------------------+---------+---------------------------------+| 0051537 | 2 iron, 2 sulfur cluster binding   | KW-0001 | 2Fe-2S                          || 0051538 | 3 iron, 4 sulfur cluster binding   | KW-0003 | 3Fe-4S                          || 0051539 | 4 iron, 4 sulfur cluster binding   | KW-0004 | 4Fe-4S                          || 0046872 | metal ion binding                  | KW-0066 | ATP synthesis                   || 0006754 | ATP biosynthetic process           | KW-0066 | ATP synthesis                   || 0005524 | ATP binding                        | KW-0067 | ATP-binding                     || 0009688 | abscisic acid biosynthetic process | KW-0937 | Abscisic acid biosynthesis      |A TEST OF THE KEYWORDS FOUND ON THE 'KW' LINE OF THE uniprot_sprot.dat:KW   Complete proteome; GPI-anchor; Lipoprotein; Membrane; Repeat; Signal;BUT ONLY SOME OF THE KEYWORD NAMES ARE FOUND IN spkw2go:select * from spkw2go where spkwname = 'GPI-anchor';+---------+--------------------+---------+------------+| goid    | goname             | spkwid  | spkwname   |+---------+--------------------+---------+------------+| 0048503 | GPI anchor binding | KW-0336 | GPI-anchor |+---------+--------------------+---------+------------+mysql> select * from spkw2go where spkwname = 'Lipoprotein';Empty set (0.00 sec)mysql> select * from spkw2go where spkwname like '%Lipoprotein%';Empty set (0.00 sec)mysql> select * from spkw2go where spkwname like '%lipoprotein%';Empty set (0.01 sec)mysql> select * from spkw2go where spkwname like '%lipo%';+---------+-----------------------------------------+---------+---------------------------------+| goid    | goname                                  | spkwid  | spkwname                        |+---------+-----------------------------------------+---------+---------------------------------+| 0009103 | lipopolysaccharide biosynthetic process | KW-0448 | Lipopolysaccharide biosynthesis || 0031405 | lipoic acid binding                     | KW-0450 | Lipoyl                          |+---------+-----------------------------------------+---------+---------------------------------+mysql> select * from spkw2go where spkwname like '%Complete proteome%';Empty set (0.00 sec)mysql> select * from spkw2go where spkwname = 'Complete proteome';Empty set (0.00 sec)mysql> select * from spkw2go where spkwname = 'Membrane';+---------+----------+---------+----------+| goid    | goname   | spkwid  | spkwname |+---------+----------+---------+----------+| 0016020 | membrane | KW-0472 | Membrane |+---------+----------+---------+----------+1 row in set (0.07 sec)mysql> select * from spkw2go where spkwname = 'Repeat';Empty set (0.08 sec)mysql> select * from spkw2go where spkwname = 'Signal';Empty set (0.10 sec)COMPLETE RECORD:uniprot_sprot.dat ENTRY: 104K_THEANAccession: Q4U9M9Keyword: Complete proteome; GPI-anchor; Lipoprotein; Membrane; Repeat; Signal;Sporozoite.>>>104K_THEAN              Reviewed;         893 AA.AC   Q4U9M9;DT   18-APR-2006, integrated into UniProtKB/Swiss-Prot.DT   05-JUL-2005, sequence version 1.DT   31-OCT-2006, entry version 8.DE   104 kDa microneme-rhoptry antigen precursor (p104).GN   ORFNames=TA08425;OS   Theileria annulata.OC   Eukaryota; Alveolata; Apicomplexa; Piroplasmida; Theileriidae;OC   Theileria.OX   NCBI_TaxID=5874;RN   [1]RP   NUCLEOTIDE SEQUENCE [LARGE SCALE GENOMIC DNA].RC   STRAIN=Ankara;RX   PubMed=15994557; DOI=10.1126/science.1110418;RA   Pain A., Renauld H., Berriman M., Murphy L., Yeats C.A., Weir W.,RA   Kerhornou A., Aslett M., Bishop R., Bouchier C., Cochet M.,RA   Coulson R.M.R., Cronin A., de Villiers E.P., Fraser A., Fosker N.,RA   Gardner M., Goble A., Griffiths-Jones S., Harris D.E., Katzer F.,RA   Larke N., Lord A., Maser P., McKellar S., Mooney P., Morton F.,RA   Nene V., O'Neil S., Price C., Quail M.A., Rabbinowitsch E.,RA   Rawlings N.D., Rutter S., Saunders D., Seeger K., Shah T., Squares R.,RA   Squares S., Tivey A., Walker A.R., Woodward J., Dobbelaere D.A.E.,RA   Langsley G., Rajandream M.A., McKeever D., Shiels B., Tait A.,RA   Barrell B.G., Hall N.;RT   "Genome of the host-cell transforming parasite Theileria annulataRT   compared with T. parva.";RL   Science 309:131-133(2005).CC   -!- SUBCELLULAR LOCATION: Cell membrane; lipid-anchor; GPI-anchorCC       (Potential). In microneme/rhoptry complexes (By similarity).CC   -----------------------------------------------------------------------CC   Copyrighted by the UniProt Consortium, see http://www.uniprot.org/termsCC   Distributed under the Creative Commons Attribution-NoDerivs LicenseCC   -----------------------------------------------------------------------DR   EMBL; CR940353; CAI76474.1; -; Genomic_DNA.DR   InterPro; IPR007480; DUF529.DR   Pfam; PF04385; FAINT; 4.KW   Complete proteome; GPI-anchor; Lipoprotein; Membrane; Repeat; Signal;KW   Sporozoite.FT   SIGNAL        1     19       Potential.FT   CHAIN        20    873       104 kDa microneme-rhoptry antigen.FT                                /FTId=PRO_0000232680.FT   PROPEP      874    893       Removed in mature form (Potential).FT                                /FTId=PRO_0000232681.FT   COMPBIAS    215    220       Poly-Leu.FT   COMPBIAS    486    683       Lys-rich.FT   COMPBIAS    854    859       Poly-Arg.FT   LIPID       873    873       GPI-anchor amidated aspartateFT                                (Potential).SQ   SEQUENCE   893 AA;  101921 MW;  2F67CEB3B02E7AC1 CRC64;     MKFLVLLFNI LCLFPILGAD ELVMSPIPTT DVQPKVTFDI NSEVSSGPLY LNPVEMAGVK     YLQLQRQPGV QVHKVVEGDI VIWENEEMPL YTCAIVTQNE VPYMAYVELL EDPDLIFFLK     EGDQWAPIPE DQYLARLQQL RQQIHTESFF SLNLSFQHEN YKYEMVSSFQ HSIKMVVFTP     KNGHICKMVY DKNIRIFKAL YNEYVTSVIG FFRGLKLLLL NIFVIDDRGM IGNKYFQLLD     DKYAPISVQG YVATIPKLKD FAEPYHPIIL DISDIDYVNF YLGDATYHDP GFKIVPKTPQ     CITKVVDGNE VIYESSNPSV ECVYKVTYYD KKNESMLRLD LNHSPPSYTS YYAKREGVWV     TSTYIDLEEK IEELQDHRST ELDVMFMSDK DLNVVPLTNG NLEYFMVTPK PHRDIIIVFD     GSEVLWYYEG LENHLVCTWI YVTEGAPRLV HLRVKDRIPQ NTDIYMVKFG EYWVRISKTQ     YTQEIKKLIK KSKKKLPSIE EEDSDKHGGP PKGPEPPTGP GHSSSESKEH EDSKESKEPK     EHGSPKETKE GEVTKKPGPA KEHKPSKIPV YTKRPEFPKK SKSPKRPESP KSPKRPVSPQ     RPVSPKSPKR PESLDIPKSP KRPESPKSPK RPVSPQRPVS PRRPESPKSP KSPKSPKSPK     VPFDPKFKEK LYDSYLDKAA KTKETVTLPP VLPTDESFTH TPIGEPTAEQ PDDIEPIEES     VFIKETGILT EEVKTEDIHS ETGEPEEPKR PDSPTKHSPK PTGTHPSMPK KRRRSDGLAL     STTDLESEAG RILRDPTGKI VTMKRSKSFD DLTTVREKEH MGAEIRKIVV DDDGTEADDE     DTHPSKEKHL STVRRRRPRP KKSSKSSKPR KPDSAFVPSI IFIFLVSLIV GIL//...<<<> select * from spkw2go limit 10;+---------+------------------------------------+---------+---------------------------------+| goid    | goname                             | spkwid  | spkwname                        |+---------+------------------------------------+---------+---------------------------------+| 0051537 | 2 iron, 2 sulfur cluster binding   | KW-0001 | 2Fe-2S                          || 0051538 | 3 iron, 4 sulfur cluster binding   | KW-0003 | 3Fe-4S                          || 0051539 | 4 iron, 4 sulfur cluster binding   | KW-0004 | 4Fe-4S                          || 0046872 | metal ion binding                  | KW-0066 | ATP synthesis                   || 0006754 | ATP biosynthetic process           | KW-0066 | ATP synthesis                   || 0005524 | ATP binding                        | KW-0067 | ATP-binding                     || 0009688 | abscisic acid biosynthetic process | KW-0937 | Abscisic acid biosynthesis      || 0009738 | abscisic acid mediated signaling   | KW-0938 | Abscisic acid signaling pathway || 0045151 | acetoin biosynthetic process       | KW-0005 | Acetoin biosynthesis            || 0045150 | acetoin catabolic process          | KW-0006 | Acetoin catabolism              |+---------+------------------------------------+---------+---------------------------------+SOLUTION:UPDATE uniprot_sprot.dat FILE AND TRY spkw NAMES AGAIN:1. DOWNLOAD CURRENT VERSION OF uniprot_sprot.dat.gzftp://ftp.expasy.ch/databases/uniprot/current_release/knowledgebase/complete/uniprot_sprot.dat.gz224265 KB  	8/21/2007  	2:00:00 PM    EXAMPLE DIFFERENCES:        ID   104K_THEAN              Reviewed;         893 AA.    AC   Q4U9M9;    DT   18-APR-2006, integrated into UniProtKB/Swiss-Prot.    DT   05-JUL-2005, sequence version 1.    DT   24-JUL-2007, entry version 13.        KW   Complete proteome; Glycoprotein; GPI-anchor; Lipoprotein; Membrane;    KW   Repeat; Signal; Sporozoite.        COMPARED TO ENTRY IN OLDER FILE (951392800 Nov 14  2006 uniprot_sprot.dat):        ID   104K_THEAN              Reviewed;         893 AA.    AC   Q4U9M9;    DT   18-APR-2006, integrated into UniProtKB/Swiss-Prot.    DT   05-JUL-2005, sequence version 1.    DT   31-OCT-2006, entry version 8.        KW   Complete proteome; GPI-anchor; Lipoprotein; Membrane; Repeat; Signal;    KW   Sporozoite.    2. DOWNLOAD LIST OF SWISSPROT KEYWORDS:    http://expasy.org/cgi-bin/keywlist.pl    SAVED AS        /Users/young/FUNNYBASE/pipeline/indexer/data/spkw_list.txt    477K Aug 23 19:20 spkw_list.txt3. PARSE spkw ID-NAME MAPPINGS FROM spkw_list.txt FILE        %ROOTDIR%/bin/mappings/spkw.pl    %ROOTDIR%/bin/mappings/sql/create_spkw.sql4. PARSE spkw NAMES FROM UNIPROT FILE USING spkw TABLE TO LOOK UP IDs:    ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++Sun Aug 12 20:28:50 EDT 2007CHECKED MISSING REFSEQ ANNOTATIONS IN funnybase11DIAGNOSIS:	1. SOME NEW SEQUENCES DO NOT APPEAR IN THE OLD VERSION OF THE REFSEQ				DATABASES THAT WE ARE USING			2. SOME HITS APPEAR IN THE collectionblast TABLE BUT DO NOT APPEAR IN			collectionsequencesblastdiv TABLE UNTIL collectionsequencesblastdiv.pl				IS RERUN		SOLUTION:	1. RERUN collectionsequencesblastdiv.pl FOR NOW		2. DOWNLOAD LATEST REFSEQ DATABASES		3. REDO WHOLE BLAST ANNOTATION (USING A WORKFLOW TO AVOID RISK OF MISSING A STEP)FUNNYBASE11 SEQUENCE 11129==========================>11129.1 funnybase11 PH domain leucine-rich repeat protein phosphatase (EC 3.1.3.16) (Pleckstrin homology domain containing family E protein 1) (Suprachiasmatic nucleus circadian oscillatory protein) (hSCOP) (Source: swissprot)GTCGTCGAAGCCGCACTCCACGCTGCAGTTGCCATTTTGGTCGGTCTTGGAGCCGCCGTCGGTGCGAAAAACGCGCACGACGGAGCTCGACTTGCTGCGGAGTTCACTCAGACGGAGCGCCACCTCGCCGGCCGTGTTGTCCATGGTGCACAGCACCGGCCTGGGGTGCGAGGACGGCAGCCTGTCGTGTACGTGAATGCAGCCGCGGTGCAGATCCGCTCTCACCCACTCGCGATCGGCGGGCTGCGGCTGCAGGTTGAGCCGGTGCTTGAGCAGCGTCTTCCTGTCCAGGCTGCGGGTGTGAAGGGACGCGGAGGACAGGGCCGAGCTCATCTTGGCGCTGACAGCCGAGGAGGAGGAGGAGGCGGCCGCAAGCTTCTCGAGGATATCC0) Sandbox 18 SHOWS SwissProt & Rat HITS BUT NOT refseq-human, refseq-mouse OR refseq-dog1) BUT MANUAL WEB BLAST (BY DOUG) GIVES A GOOD HIT AGAINST refseq-mouseMouse>ref|XP_001475889.1|  PREDICTED: similar to PH domain leucine-rich repeat-containing protein phosphatase (PH domain leucine-rich repeat protein phosphatase) (Pleckstrin homology domain-containing family E protein 1) (Suprachiasmatic nucleus circadian oscillatory protein)... [Mus musculus]Length=1683 Score = 84.7 bits (208),  Expect = 1e-15 Identities = 45/65 (69%), Positives = 51/65 (78%), Gaps = 2/65 (3%) Frame = -2Query  306  LHTRSLDRKTLL-KHRLNLQPQPADREWVRADLHRGCIHVHDR-LPSSHPRPVLCTMDNT  133            L TRSLDRKTLL KHR  LQ QP+DR+WVR  L RGC+HV DR + SS+ RPVLCT+D TSbjct  144  LCTRSLDRKTLLLKHRQLLQLQPSDRDWVRHQLQRGCVHVFDRHMASSYLRPVLCTLDTT  203Query  132  AGEVA  118            A EVASbjct  204  AAEVA  208Mouse>ref|XP_129968.3|  PREDICTED: PH domain and leucine rich repeat protein phosphatase isoform 1 [Mus musculus]Length=1687 Score = 84.7 bits (208),  Expect = 1e-15 Identities = 45/65 (69%), Positives = 51/65 (78%), Gaps = 2/65 (3%) Frame = -2Query  306  LHTRSLDRKTLL-KHRLNLQPQPADREWVRADLHRGCIHVHDR-LPSSHPRPVLCTMDNT  133            L TRSLDRKTLL KHR  LQ QP+DR+WVR  L RGC+HV DR + SS+ RPVLCT+D TSbjct  142  LCTRSLDRKTLLLKHRQLLQLQPSDRDWVRHQLQRGCVHVFDRHMASSYLRPVLCTLDTT  201Query  132  AGEVA  118            A EVASbjct  202  AAEVA  2062) MANUAL BLAST AGAINST refseq-human SHOWS NO HITS:BLASTMAT=/common/data/blastmatexport BLASTMAT/common/bin/blastall -p blastx -i funnybase11.11129_1.fasta -o funnybase11.11129_1.refseq-human.blast -d /common/data/refseq-human>>>...                                                                Score    ESequences producing significant alignments:                      (bits) Valueref|NP_115964.1| GLIS family zinc finger 2 [Homo sapiens]              31   0.22ref|NP_056422.2| hypothetical protein LOC26097 [Homo sapiens]          31   0.29ref|NP_620585.2| hypothetical protein LOC128439 [Homo sapiens]         30   0.65...<<<3) MANUAL BLAST AGAINST refseq-mouse SHOWS NO HITS:BLASTMAT=/common/data/blastmatexport BLASTMAT/common/bin/blastall -p blastx -i funnybase11.11129_1.fasta -o funnybase11.11129_1.refseq-mouse.blast -d /common/data/refseq-mouse>>>...Database: refseq-mouse           26,916 sequences; 12,890,828 total lettersSearching..................................................done                                                                 Score    ESequences producing significant alignments:                      (bits) Valueref|XP_137057.4| PREDICTED: similar to Na+ dependent glucose tra...    31   0.20ref|NP_075704.2| hypothetical protein LOC66511 [Mus musculus]          31   0.26ref|XP_146511.3| PREDICTED: hypothetical protein XP_146511 [Mus ...    30   0.44...<<<4) SEQUENCE XP_001475889 WAS NOT FOUND IN THE /common/data/refseq-mouseFASTA FILE:grep -n XP_001475889 /common/data/refseq-mouseFUNNYBASE SEQUENCE 1343=======================>1343.1 funnybase11 Prefoldin subunit 1 (Source: swissprot)CTTCTCTGAGCTGCAGGTCAAGATGATCGACACGCAGCAGAAGGTGAAGCTGGCCGACCTGCAGATCGATCAGCTCAGCCGGGTCCACAAACACACCAAGCTGACCCAGGCCGAGATCTCCACCCTGCCCAGCAACACGCGCCTCTACGAGGGCGTCGGCCGCATGTTCATCCTGCAGTCCAAGGAGGAGATCGACAGCCTGCTGACGGACAAACAGAAGACCGTCGATGACAAGATCAAAGAGCTGGAGAAGAAGGTGTACCTGGAGCGCAGCGTCAAAGAAGCGGAGGACAACATCAGAGAGATGCTGCTGTCCAGGAGAGCTCACTGACCAATCACCTTGACTTCCTGTTTCCACCTCACCTGTTCATAATAAACCAATTAAGCTCCGCCCTCACC0) Sandbox 18 SHOWS SwissProt AND refseq-mouse HITS BUT NOT refseq-human, refseq-rat OR refseq-dog1) BUT MANUAL WEB BLAST (BY DOUG) GIVES A GOOD HIT AGAINST refseq-mousehuman>ref|NP_002613.2|  prefoldin subunit 1 [Homo sapiens]Length=122 Score =  147 bits (372),  Expect = 1e-34 Identities = 78/109 (71%), Positives = 89/109 (81%), Gaps = 1/109 (0%) Frame = +2Query  2    FSELQVKMIDTQQKVKLADLQIDQLSRVHKHTKLTQAEISTLPSNTRLYEGVGRMFILQS  181            F+ELQ K+IDTQQKVKLAD+QI+QL+R  KH  LT  EI TL   T +YEGVGRMFILQSSbjct  13   FTELQAKVIDTQQKVKLADIQIEQLNRTKKHAHLTDTEIMTLVDETNMYEGVGRMFILQS  72Query  182  KEEIDSLLTDKQKTVDDKIKELE-KKVYLERSVKEAEDNIREMLLSRRA  325            KE I S L +KQK  ++KIKELE KK YLERSVKEAEDNIREML++RRASbjct  73   KEAIHSQLLEKQKIAEEKIKELEQKKSYLERSVKEAEDNIREMLMARRA  121Canis>ref|XP_848520.1|  PREDICTED: similar to prefoldin 1 isoform 1 [Canis familiaris] ref|XP_547780.2|  PREDICTED: similar to prefoldin 1 [Canis familiaris]Length=122 Score =  147 bits (371),  Expect = 1e-34 Identities = 78/109 (71%), Positives = 89/109 (81%), Gaps = 1/109 (0%) Frame = +2Query  2    FSELQVKMIDTQQKVKLADLQIDQLSRVHKHTKLTQAEISTLPSNTRLYEGVGRMFILQS  181            F+ELQ K+IDTQQKVKLAD+QI+QL+R  KH  LT  EI TL   T +YEGVGRMFILQSSbjct  13   FTELQAKVIDTQQKVKLADIQIEQLNRTKKHAHLTDTEIMTLVDETNMYEGVGRMFILQS  72Query  182  KEEIDSLLTDKQKTVDDKIKELE-KKVYLERSVKEAEDNIREMLLSRRA  325            KE I S L +KQK  ++KIKELE KK YLERSVKEAEDNIREML++RRASbjct  73   KEVIHSQLLEKQKIAEEKIKELEQKKSYLERSVKEAEDNIREMLMARRA  121Ratref|XP_001063625.1|  PREDICTED: similar to prefoldin 1 [Rattus norvegicus]Length=122 Score =  146 bits (368),  Expect = 3e-34 Identities = 77/109 (70%), Positives = 89/109 (81%), Gaps = 1/109 (0%) Frame = +2Query  2    FSELQVKMIDTQQKVKLADLQIDQLSRVHKHTKLTQAEISTLPSNTRLYEGVGRMFILQS  181            F+ELQ K+IDTQQKVKLAD+QI+QL+R  KH  LT  EI TL   T +YEGVGRMFILQSSbjct  13   FTELQAKVIDTQQKVKLADIQIEQLNRTKKHAHLTDTEIMTLVDETNMYEGVGRMFILQS  72Query  182  KEEIDSLLTDKQKTVDDKIKELE-KKVYLERSVKEAEDNIREMLLSRRA  325            KE I + L +KQK  ++KIKELE KK YLERSVKEAEDNIREML++RRASbjct  73   KEVIHNQLLEKQKIAEEKIKELEQKKSYLERSVKEAEDNIREMLMARRA  1212) MANUAL BLAST AGAINST refseq-human SHOWS A GOOD HIT AGAINST refseq-human:BLASTMAT=/common/data/blastmatexport BLASTMAT/common/bin/blastall -p blastx -i funnybase11.1343.fasta -o funnybase11.1343.refseq-human.blast -d /common/data/refseq-human>>> Database: refseq-human           29,528 sequences; 14,991,107 total lettersSearching..................................................done                                                                 Score    ESequences producing significant alignments:                      (bits) Valueref|NP_002613.2| prefoldin 1 [Homo sapiens]                           147   2e-36ref|NP_001839.1| collagen, type VI, alpha 1 precursor [Homo sapi...    37   0.0063) AND THE refseq-human HIT IS ALSO PRESENT IN collectionblast:select * from collectionblast where targetsource = 'refseq-human' and collectionid = 1343\G*************************** 1. row ***************************       collectionid: 1343collectionaccession: 1  collectionversion: 0.00       targetsource: refseq-human      targetversion:          targetname: 21536449           targetid: NP_002613   targetannotation: prefoldin 1 [Homo sapiens]      blastdatetime: 2007-06-12 23:12:36       evaluecutoff: 1e-05       hitevaluedec: 1.73       hitevalueexp: -36          hspnumber: 1           hspscore: 372          hsplength: 109         querystart: 2          querystop: 325         queryframe: 2        targetstart: 13         targetstop: 121           identity: 75      querysequence: FSELQVKMIDTQQKVKLADLQIDQLSRVHKHTKLTQAEISTLPSNTRLYEGVGRMFILQSKEEIDSLLTDKQKTVDDKIKELE-KKVYLERSVKEAEDNIREMLLSRRA     targetsequence: FTELQAKVIDTQQKVKLADIQIEQLNRTKKHAHLTDTEIMTLVDETNMYEGVGRMFILQSKEAIHSQLLEKQKIAEEKIKELEQKKSYLERSVKEAEDNIREMLMARRA  alignmentsequence: F+ELQ K+IDTQQKVKLAD+QI+QL+R  KH  LT  EI TL   T +YEGVGRMFILQSKE I S L +KQK  ++KIKELE KK YLERSVKEAEDNIREML++RRA      queryhitstart: 0       queryhitstop: 0     targethitstart: 13      targethitstop: 1211 row in set (0.07 sec)4) collectionsequencesblastdiv DOES NOT CONTAIN THE refseq-human HIT:select * from collectionsequencesblastdiv where collectionid = 1343\G                    <!-- START OF refseq BLAST HIT DESCRIPTION -->                    <div class="refseq-description"                        id="refseq-human.No hit.description"                        style="position: relative; top: 10px; left: 10px; width: 190px; white-space: normal; height: 30px; color: #E9E;"                        ondblclick="javascript:link_refseq('No hit')"                                                       >                                                <A  title="refseq-human ID: No hit"                            text="Annotation: ; Hit E-value: "                            subtext="Max identity: 0%" >                            <span class="Swissprot_function"> refseq-human </span>                            No hit                             <br>                            <span class="Swissprot_function">                                                            </span>                        </A>                                    </div>                    <!-- END OF refseq-human BLAST HIT DESCRIPTION-->      5) BUT refseq-human HIT APPEARED AFTER RERAN collectionsequencesblastdiv.pl                    <!-- START OF refseq BLAST HIT DESCRIPTION -->                    <div class="refseq-description"                        id="refseq-human.NP_002613.description"                        style="position: relative; top: 10px; left: 10px; width: 190px; white-space: normal; height: 30px; color: #E9E;"                        ondblclick="javascript:link_refseq('NP_002613')"                        onmouseover="this.style.color='#F84'; this.style.borderColor='#F66'; this.style.fontWeight='bold';"                        onmouseout="this.style.color='white';this.style.borderColor='#BBF'; this.style.fontWeight='bold';"       >                                                <A  title="refseq-human ID: NP_002613"                            text="Annotation: prefoldin 1 [Homo sapiens]; Hit E-value: 1.73e-36"                            subtext="Max identity: 75%" >                            <span class="Swissprot_function"> refseq-human </span>                            NP_002613                             <br>                            <span class="Swissprot_function">                                prefoldin 1 [Homo sapiens]...                            </span>                        </A>                                    </div>                    <!-- END OF refseq-human BLAST HIT DESCRIPTION-->FUNNYBASE11 SEQUENCE 11662==========================>11662.1 funnybase11 Zinc finger protein 330 (Nucleolar autoantigen 36) (Source: swissprot)CAAGTCGGCCGAGGTCTTCTTATGCGAGGATGATCAATTTGAGCACCAGGCAAGCTGTCCAGACCTCCAGGCAGAAACCTATAAATGCGTTTCCTGTAACAGACTGGGGCAACATTCATGTCTGCGCTGTAAGGCTTGTTACTGTGATGACCACGTCAAGAGTAAGGTGTTCAAGCAGGAGAAGGGCAAATCTCTGCCTTGTCCGAAGTGTGGCCACGAGACTCAGGAGACAAAAGACCTCAGCATGTCCACCCGTACCTTGAAGTTTGGTCGGCAGGCCGGTGCCGACGACGATGACTACGAAGGAGCATCAGGGTACGACGCCTACTGGAAGAACCTGGCAGCTGGAGGAAGCCAACGAGACGACTACGGAGATGACGATGATGATGAGGAGGAGGAAGAGGAGGACGATGGGTATGAGGATGAGGACGAAGAGGAGGATGACGAGGAGGACGAAACTGCTTCGGAGTCTCTGGCTGAGCTGAAATTAGATGGCGCGGCAGCCTAAACTAAGACTGAGGAGTCGGTGGTGCTGTTGGTCAGGGTGGATTTTAACTGAACGTACGGCGCTGTGCAGAAGTCGAGAGCATTTTTCTATTCAACAAGCTAAACATTCTTGTGATCTTCCAAGTGGCCTTGATCAATAGCTTTCCTGTGCTTTCTGATGGCCTGTCAAGTTTTTCTACATTTCTTTGCTATCTTTAAGTTTTGTTGCGGTCCTGCTATCTGACTGAAACACATTGTGGAGTATTGGCAGTGGTCAGGGCGGAGCACACAAGCACGAGTTCAGCATGAGAGCATGTTCAGCAATAATCGTACGTAACTCAGTCTTTAATAAATAGGAGGCGTTGTATAGTCAGTGGAGATAC0) Sandbox 18 SHOWS SwissProt, refseq-rat AND refseq-mouse HITS BUT NOT refseq-human OR refseq-dog1) BUT MANUAL WEB BLAST (BY DOUG) GIVES A GOOD HIT AGAINST refseq-dog>ref|XP_533282.2|  PREDICTED: similar to Zinc finger protein 330 (Nucleolar autoantigen 36) [Canis familiaris]Length=320 Score =  203 bits (516),  Expect = 9e-51 Identities = 91/110 (82%), Positives = 100/110 (90%), Gaps = 2/110 (1%) Frame = +2Query  17   FLCEDDQFEHQASCPDLQAETYKCVSCNRLGQHSCLRCKACYCDDHVKSKVFKQEKGKSL  196            FLCEDDQFEHQASC  L+AET+KCVSCNRLGQHSCLRCKAC+CDDH +SKVFKQEKGK  Sbjct  152  FLCEDDQFEHQASCQVLEAETFKCVSCNRLGQHSCLRCKACFCDDHTRSKVFKQEKGKQP  211Query  197  PCPKCGHETQETKDLSMSTRTLKFGRQAGADDDDYEGASGYDAYWKNLAA  346            PCPKCGHETQETKDLSMSTR+LKFGRQ G ++ D  GASGYDAYWKNL++Sbjct  212  PCPKCGHETQETKDLSMSTRSLKFGRQTGGEEGD--GASGYDAYWKNLSS  259Human>ref|NP_055302.1|  zinc finger protein 330 [Homo sapiens]Length=320 Score =  203 bits (516),  Expect = 9e-51 Identities = 91/110 (82%), Positives = 100/110 (90%), Gaps = 2/110 (1%) Frame = +2Query  17   FLCEDDQFEHQASCPDLQAETYKCVSCNRLGQHSCLRCKACYCDDHVKSKVFKQEKGKSL  196            FLCEDDQFEHQASC  L+AET+KCVSCNRLGQHSCLRCKAC+CDDH +SKVFKQEKGK  Sbjct  152  FLCEDDQFEHQASCQVLEAETFKCVSCNRLGQHSCLRCKACFCDDHTRSKVFKQEKGKQP  211Query  197  PCPKCGHETQETKDLSMSTRTLKFGRQAGADDDDYEGASGYDAYWKNLAA  346            PCPKCGHETQETKDLSMSTR+LKFGRQ G ++ D  GASGYDAYWKNL++Sbjct  212  PCPKCGHETQETKDLSMSTRSLKFGRQTGGEEGD--GASGYDAYWKNLSS  2592) MANUAL BLAST AGAINST refseq-human GIVES A GOOD HIT:BLASTMAT=/common/data/blastmatexport BLASTMAT/common/bin/blastall -p blastx -i funnybase11.11662.fasta -o funnybase11.11662.refseq-human.blast -d /common/data/refseq-human>>>...Database: refseq-human           29,528 sequences; 14,991,107 total lettersSearching..................................................done                                                                 Score    ESequences producing significant alignments:                      (bits) Valueref|NP_055302.1| zinc finger protein 330 [Homo sapiens]               203   2e-52ref|XP_497218.1| PREDICTED: similar to zinc finger protein 91 (H...    33   0.27...<<<3) MANUAL BLAST AGAINST refseq-dog GIVES A GOOD HIT:BLASTMAT=/common/data/blastmatexport BLASTMAT/common/bin/blastall -p blastx -i funnybase11.11662.fasta -o funnybase11.11662.refseq-dog.blast -d /common/data/refseq-dog>>>...Database: refseq-dog           33,740 sequences; 19,270,122 total lettersSearching..................................................done                                                                 Score    ESequences producing significant alignments:                      (bits) Valueref|XP_533282.2| PREDICTED: similar to Zinc finger protein 330 (...   203   2e-52ref|XP_532356.2| PREDICTED: similar to cleavage and polyadenylat...    32   0.60...<<<4) FOUND refseq-human HIT IN refseq-human FASTA FILE:grep -n NP_055302 /common/data/refseq-human50228:>gi|7657196|ref|NP_055302.1| zinc finger protein 330 [Homo sapiens]5) FOUND refseq-dog HIT IN refseq-human FASTA FILE:grep -n XP_533282 /common/data/refseq-dog276467:>gi|73983978|ref|XP_533282.2| PREDICTED: similar to Zinc finger protein 330 (Nucleolar autoantigen 36) [Canis familiaris]6) refseq-human FOUND IN collectionsequencesblastdiv AFTER RERANcollectionsequencesblastdiv.pl BUT refseq-dog NOT FOUND:select * from collectionsequencesblastdiv where collectionid = 11662\Grefseq-human------------                    <!-- START OF refseq-human BLAST HIT DESCRIPTION -->                    <div class="refseq-description"                        id="refseq-human.NP_055302.description"                        style="position: relative; top: 10px; left: 10px; width: 190px; white-space: normal; height: 30px; color: #E9E;"                        ondblclick="javascript:link_refseq('NP_055302')"                        onmouseover="this.style.color='#F84'; this.style.borderColor='#F66'; this.style.fontWeight='bold';"                        onmouseout="this.style.color='white';this.style.borderColor='#BBF'; this.style.fontWeight='bold';"       >                                                <A  title="refseq-human ID: NP_055302"                            text="Annotation: zinc finger protein 330 [Homo sapiens]; Hit E-value: 9.83e-60"                            subtext="Max identity: 73%" >                            <span class="Swissprot_function"> refseq-human </span>                            NP_055302                             <br>                            <span class="Swissprot_function">                                zinc finger protein 330 [Homo ...                            </span>                        </A>                                    </div>                    <!-- END OF refseq-human BLAST HIT DESCRIPTION-->        refseq-dog----------                    <!-- START OF refseq-dog BLAST HIT DESCRIPTION -->                    <div class="refseq-description"                        id="refseq-dog.No hit.description"                        style="position: relative; top: 10px; left: 10px; width: 190px; white-space: normal; height: 30px; color: #E9E;"                        ondblclick="javascript:link_refseq('No hit')"                                                       >                                                <A  title="refseq-dog ID: No hit"                            text="Annotation: ; Hit E-value: "                            subtext="Max identity: 0%" >                            <span class="Swissprot_function"> refseq-dog </span>                            No hit                             <br>                            <span class="Swissprot_function">                                                            </span>                        </A>                                    </div>7) select * from collectionblast where collectionid = 11662 AND targetsource='refseq-dog' and targetid='XP_533282'\G*************************** 1. row ***************************       collectionid: 11662collectionaccession: 1  collectionversion: 0.00       targetsource: refseq-dog      targetversion:          targetname: 73983978           targetid: XP_533282   targetannotation: PREDICTED: similar to Zinc finger protein 330 (Nucleolar autoantigen 36) [Canis familiaris]      blastdatetime: 2007-06-05 17:41:29       evaluecutoff: 1e-05       hitevaluedec: 6.78       hitevalueexp: -61          hspnumber: 1           hspscore: 589          hsplength: 152         querystart: 17          querystop: 472         queryframe: 2        targetstart: 152         targetstop: 296           identity: 75      querysequence: FLCEDDQFEHQASCPDLQAETYKCVSCNRLGQHSCLRCKACYCDDHVKSKVFKQEKGKSLPCPKCGHETQETKDLSMSTRTLKFGRQAGADDDDYEGASGYDAYWKNLAAGGSQRDDYGDDDDDEEEEEEDDGYEDEDEEEDDEEDETASES     targetsequence: FLCEDDQFEHQASCQVLEAETFKCVSCNRLGQHSCLRCKACFCDDHTRSKVFKQEKGKQPPCPKCGHETQETKDLSMSTRSLKFGRQTGGEEGD--GASGYDAYWKNLSS-----DKYGDSSYHDEEEDEDEAEDDEDEDDEVGKDSDAESS  alignmentsequence: FLCEDDQFEHQASC  L+AET+KCVSCNRLGQHSCLRCKAC+CDDH +SKVFKQEKGK  PCPKCGHETQETKDLSMSTR+LKFGRQ G ++ D  GASGYDAYWKNL++     D YGD    +EEE+ED+  +DEDE+++  +D  A  S      queryhitstart: 0       queryhitstop: 0     targethitstart: 152      targethitstop: 2961 row in set (0.01 sec)DIAGNOSIS:	- THE HIT AGAINST XP_533282 WAS IGNORED BECAUSE IT CONTAINED THE WORD 'PREDICTED'.		- THIS WAS CHANGED IN FUNNYBASE13 SO THAT EVEN 'PREDICTED', 'HYPOTHETICAL' AND 'PUTATIVE'	ANNOTATIONS ARE ACCEPTED.++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++Sun Jul  8 23:47:49 EDT 2007CHANGE TESTS 01, 03 and 04 FOR Iprscan::iprscan2tsv TO TEST Iprscan::collectionsequences_iprscan#### SUBROUTINE Ipsrcan::iprscan2tsv HAS BEEN DEPRECATED IN FAVOUR OF#### collectionsequences_iprscan AND orthologues_iprscan#### ****** ADJUST THE TESTS IN t ACCORDINGLY ******sub iprscan2tsv{	print "++++ Iprscan::iprscan2tsv(query_hits, fields, orfs)\n";	my $query_hits				=	shift;	my $fields					=	shift;	my $orfs					=	shift;++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++Mon Jun 11 11:53:53 EDT 2007PROBLEM WITH collectionsequences - TRUNCATES LAST ENTRY IN TABLE  (karenia5)mysql> select * from collectionsequences where collectionid = 6203\G*************************** 1. row ***************************       collectionid: 6203collectionaccession: 1  collectionversion: 0.00   assemblydatetime: 2007-05-29 20:20:29       assemblyname: karenia5     assemblynumber: 1       assemblytype: cap3     sequencenumber: 8621       sequencetype: singlet           sequence: TCAAACTGCAACTCTGCTGACGGTCCAGGGGTTGCTCGAGATTATGCTTCATCTTTGAGTATCTCATTGAACTTCTGGTTTGACTCGATGGCTGTGCTGCGAGACCCGCCATTACCGTTGCCCGATCACTTGGAGCTTGAATTGGCCCGGCACATCGAGTTCTTCGCTTGTATTTTGGCTGGACCACCTGGTGCCAAGGCTCTGTCGGAAGCGCTGACTGCTGACGTCTCACTGGGCATCTCTGGTACACTTGGCCCTTACAATGGAGTGCCTTTGGAGATTCGCGACTTCGTTCTTCTTAGACTTCTTGACCTCCTTGGCAAGCAGCAGGTTGCACCCCTTCATCCGCGCCTTCCTGGGCTCAGA            quality: 16 9 8 8 15 18 24 24 20 17 17 27 42 44 44 38 44 38 38 34 34 34 38 38 38 38 38 38 38 44 44 46 46 46 53 53 53 53 47 47 47 47 47 47 47 47 53 47 47 47 47 47 47 53 53 47 59 59 59 59 59 59 59 59 59 59 59 62 62 62 62 62 59 59 59 59 59 59 59 62 62 62 62 59 59 59 59 59 59 59 62 62 62 62 59 59 62 59 59 59 59 59 59 59 59 59 59 59 59 59 59 59 59 59 62 62 62 62 62 62 62 62 62 62 62 62 62 62 62 59 59 59 59 59 59 59 59 59 59 59 62 62 62 62 62 62 62 62 62 62 59 59 59 59 59 59 59 59 59 59 59 59 59 53 47 47 47 53 53 53 53 53 53 53 53 53 53 53 53 53 47 47 47 44 39 38 39 44 53 53 53 47 26 2     averagequality: NULL               snps: NULL        numberreads: 0          readnames:              divtag: NULL           blastdiv: NULL    sequencereaddiv: NULL                svg: NULL1 row in set (0.00 sec)ALTHOUGH THE averagequality AND readnames FIELDS ARE PRESENT IN THE assemblysequences TABLEselect * from assemblysequences where readnames = '530-088-G10'\G*************************** 1. row ***************************        collectionid: 6203 collectionaccession: 1 assemblydescription:     assemblydatetime: 2007-05-29 20:20:29        assemblyname: karenia5      assemblynumber: 1        assemblytype: cap3      sequencenumber: 8621        sequencetype: singlet    assemblysequence: TTTTTGGTGGCCCCTGTCTGTGGTGAGAGTCAAACTGCAACTCTGCTGACGGTCCAGGGGTTGCTCGAGATTATGCTTCATCTTTGAGTATCTCATTGAACTTCTGGTTTGACTCGATGGCTGTGCTGCGAGACCCGCCATTACCGTTGCCCGATCACTTGGAGCTTGAATTGGCCCGGCACATCGAGTTCTTCGCTTGTATTTTGGCTGGACCACCTGGTGCCAAGGCTCTGTCGGAAGCGCTGACTGCTGACGTCTCACTGGGCATCTCTGGTACACTTGGCCCTTACAATGGAGTGCCTTTGGAGATTCGCGACTTCGTTCTTCTTAGACTTCTTGACCTCCTTGGCAAGCAGCAGGTTGCACCCTTCATCCGCGCCTTCCTGGGCTCAGAACGATTTAGATGAGCAGCAAGCACTTGGCGCAGTGCAGAGGAATTGATANGGAGTAGGNATTCAAATATNATCTTGCGAGG     assemblyquality: 8 8 8 8 8 9 9 9 6 10 6 7 6 6 6 6 9 14 9 12 17 18 24 25 25 23 23 23 16 16 9 8 8 15 18 24 24 20 17 17 27 42 44 44 38 44 38 38 34 34 34 38 38 38 38 38 38 38 44 44 46 46 46 53 53 53 53 47 47 47 47 47 47 47 47 53 47 47 47 47 47 47 53 53 47 59 59 59 59 59 59 59 59 59 59 59 62 62 62 62 62 59 59 59 59 59 59 59 62 62 62 62 59 59 59 59 59 59 59 62 62 62 62 59 59 62 59 59 59 59 59 59 59 59 59 59 59 59 59 59 59 59 59 62 62 62 62 62 62 62 62 62 62 62 62 62 62 62 59 59 59 59 59 59 59 59 59 59 59 62 62 62 62 62 62 62 62 62 62 59 59 59 59 59 59 59 59 59 59 59 59 59 53 47 47 47 53 53 53 53 53 53 53 53 53 53 53 53 53 47 47 47 44 39 38 39 44 53 53 53 47 26 26 34 34 34 38 44 47 47 47 47 47 42 33 42 33 29 29 33 33 38 42 38 38 38 38 38 43 47 53 53 53 43 43 43 43 43 43 43 43 39 44 53 44 39 39 39 39 39 47 53 38 38 38 38 47 38 38 38 38 42 38 33 33 33 42 27 27 24 16 14 23 26 29 31 32 33 31 29 27 31 32 38 38 38 22 22 14 16 16 15 17 25 28 28 32 25 24 20 20 19 15 17 16 18 25 16 20 14 11 11 18 12 16 24 16 16 30 30 29 27 25 18 16 16 16 22 18 21 21 21 16 24 24 17 12 6 7 7 7 8 20 28 25 19 21 19 16 16 24 24 14 17 14 12 16 12 12 16 16 18 25 13 16 16 19 7 6 12 9 9 9 12 15 12 20 16 14 11 14 9 9 9 13 13 10 10 10 10 10 11 11 11 23 16 17 14 19 20 19 17 20 11 11 10 10 10 13 14 7 7 7 7 7 8 9 16 10 10 11 11 7 0 7 11 11 12 12 6 6 6 0 6 6 9 12 12 12 14 13 13 7 0 7 11 8 9 9 9 10 10 10 10 9assemblysequencetrim: TCAAACTGCAACTCTGCTGACGGTCCAGGGGTTGCTCGAGATTATGCTTCATCTTTGAGTATCTCATTGAACTTCTGGTTTGACTCGATGGCTGTGCTGCGAGACCCGCCATTACCGTTGCCCGATCACTTGGAGCTTGAATTGGCCCGGCACATCGAGTTCTTCGCTTGTATTTTGGCTGGACCACCTGGTGCCAAGGCTCTGTCGGAAGCGCTGACTGCTGACGTCTCACTGGGCATCTCTGGTACACTTGGCCCTTACAATGGAGTGCCTTTGGAGATTCGCGACTTCGTTCTTCTTAGACTTCTTGACCTCCTTGGCAAGCAGCAGGTTGCACCCCTTCATCCGCGCCTTCCTGGGCTCAGA assemblyqualitytrim: 16 9 8 8 15 18 24 24 20 17 17 27 42 44 44 38 44 38 38 34 34 34 38 38 38 38 38 38 38 44 44 46 46 46 53 53 53 53 47 47 47 47 47 47 47 47 53 47 47 47 47 47 47 53 53 47 59 59 59 59 59 59 59 59 59 59 59 62 62 62 62 62 59 59 59 59 59 59 59 62 62 62 62 59 59 59 59 59 59 59 62 62 62 62 59 59 62 59 59 59 59 59 59 59 59 59 59 59 59 59 59 59 59 59 62 62 62 62 62 62 62 62 62 62 62 62 62 62 62 59 59 59 59 59 59 59 59 59 59 59 62 62 62 62 62 62 62 62 62 62 59 59 59 59 59 59 59 59 59 59 59 59 59 53 47 47 47 53 53 53 53 53 53 53 53 53 53 53 53 53 47 47 47 44 39 38 39 44 53 53 53 47 26 26 34 34 34 38 44 47 47 47 47 47 42 33 42 33 29 29 33 33 38 42 38 38 38 38 38 43 47 53 53 53 43 43 43 43 43 43 43 43 39 44 53 44 39 39 39 39 39 47 53 38 38 38 38 47 38 38 38 38 42 38 33 33 33 42 27 27 24 16 14 23 26 29 31 32 33 31 29 27 31 32 38 38 38 22 22 14 16 16 15 17 25 28 28 32 25 24 20 20 19 15 17 16 18 25 16 20 14 11 11 18 12 16 24 16 16 30 30 29 27 25 18 16 16 16 22 18 21 21 21 16 24 24 17 12 6 7 7 7 8 20 28 25 19 21 21 19 16 16 24 24 14 17 14 12 16 12 12 16 16 18 25 13 16 16 19 7 6 12 9 9 9 12           trimstart: 29            trimstop: 394                snps:       averagequality: 33.72         numberreads: 1           readnames: 530-088-G10        minreaddepth: 0.00        maxreaddepth: 0.00        readcoverage: 0.00              divtag:                  svg: 1 row in set (0.09 sec)DIAGNOSIS:POSSIBLY A PROBLEM WITH THE 'LOAD DATA INFILE' EXECUTION IN MYSQL.THERE WAS A \t MISSING FROM THE 530-088-G10 SINGLET assemblysequences RECORD (ONLY SIX TABS INSTEAD OF SEVEN):			2007-05-29 16:24:16	karenia5	1	cap3	6205	singlet	TTTTTGGTGGCCCCTGTCTGTGGTGAGAGTCAAACTGCAACTCTGCTGACGGTCCAGGGGTTGCTCGAGATTATGCTTCATCTTTGAGTATCTCATTGAACTTCTGGTTTGACTCGATGGCTGTGCTGCGAGACCCGCCATTACCGTTGCCCGATCACTTGGAGCTTGAATTGGCCCGGCACATCGAGTTCTTCGCTTGTATTTTGGCTGGACCACCTGGTGCCAAGGCTCTGTCGGAAGCGCTGACTGCTGACGTCTCACTGGGCATCTCTGGTACACTTGGCCCTTACAATGGAGTGCCTTTGGAGATTCGCGACTTCGTTCTTCTTAGACTTCTTGACCTCCTTGGCAAGCAGCAGGTTGCACCCTTCATCCGCGCCTTCCTGGGCTCAGAACGATTTAGATGAGCAGCAAGCACTTGGCGCAGTGCAGAGGAATTGATANGGAGTAGGNATTCAAATATNATCTTGCGAGG							0.00	1	530-088-G10									2007-05-29 16:24:16	karenia5	1	cap3	6206	singlet	ACCCATTTGAAACGACTTAGCGAAAACTTCAGTTCTCAACGCCCCACTGTATGGAGACCACGTGCAGACAACATCTTTCATGGGGGAGCTTGTAAACGGCGTCATCATGCAGGACGATCACTCAGATACTCCGTTCTATGCGAAATTTGATGGTATTGCGGCAAGTTGGTATGAAGAATACAAGGTGCATTTGGTTGGGCGCAATTCGAGTTCTGGTGTTCTAGCGAATGTCTACAACAGCGGCTTTACAGATGTCATGCGTACGGCAGGGGCCCTGGTTGAAGACAGGCAGGGTCGTTGCCCAAAGCGTAGACGTTGTTCTTGATAAGTTGAAAGTTAGAGAGGT							0.00	1	530-088-H03						BUT THAT DOES NOT EXPLAIN WHY THE assemblysequence RECORD IS CORRECT BUT THE collectionsequences RECORD IS MISSING THE numberreads, readnames AND averagequality FIELDS.FURTHERMORE, THE *.collectionsequences.tsv FILE SHOWED NOW ABNORMALITIES IN THE ENTRY FOR COLLECTION SEQUENCE 6203:6203	1		2007-05-29 20:20:29	karenia5	1	cap3	8621	singlet	TCAAACTGCAACTCTGCTGACGGTCCAGGGGTTGCTCGAGATTATGCTTCATCTTTGAGTATCTCATTGAACTTCTGGTTTGACTCGATGGCTGTGCTGCGAGACCCGCCATTACCGTTGCCCGATCACTTGGAGCTTGAATTGGCCCGGCACATCGAGTTCTTCGCTTGTATTTTGGCTGGACCACCTGGTGCCAAGGCTCTGTCGGAAGCGCTGACTGCTGACGTCTCACTGGGCATCTCTGGTACACTTGGCCCTTACAATGGAGTGCCTTTGGAGATTCGCGACTTCGTTCTTCTTAGACTTCTTGACCTCCTTGGCAAGCAGCAGGTTGCACCCCTTCATCCGCGCCTTCCTGGGCTCAGA	16 9 8 8 15 18 24 24 20 17 17 27 42 44 44 38 44 38 38 34 34 34 38 38 38 38 38 38 38 44 44 46 46 46 53 53 53 53 47 47 47 47 47 47 47 47 53 47 47 47 47 47 47 53 53 47 59 59 59 59 59 59 59 59 59 59 59 62 62 62 62 62 59 59 59 59 59 59 59 62 62 62 62 59 59 59 59 59 59 59 62 62 62 62 59 59 62 59 59 59 59 59 59 59 59 59 59 59 59 59 59 59 59 59 62 62 62 62 62 62 62 62 62 62 62 62 62 62 62 59 59 59 59 59 59 59 59 59 59 59 62 62 62 62 62 62 62 62 62 62 59 59 59 59 59 59 59 59 59 59 59 59 59 53 47 47 47 53 53 53 53 53 53 53 53 53 53 53 53 53 47 47 47 44 39 38 39 44 53 53 53 47 26 26 34 34 34 38 44 47 47 47 47 47 42 33 42 33 29 29 33 33 38 42 38 38 38 38 38 43 47 53 53 53 43 43 43 43 43 43 43 43 39 44 53 44 39 39 39 39 39 47 53 38 38 38 38 47 38 38 38 38 42 38 33 33 33 42 27 27 24 16 14 23 26 29 31 32 33 31 29 27 31 32 38 38 38 22 22 14 16 16 15 17 25 28 28 32 25 24 20 20 19 15 17 16 18 25 16 20 14 11 11 18 12 16 24 16 16 30 30 29 27 25 18 16 16 16 22 18 21 21 21 16 24 24 17 12 6 7 7 7 8 20 28 25 19 21 21 19 16 16 24 24 14 17 14 12 16 12 12 16 16 18 25 13 16 16 19 7 6 12 9 9 9 12	33.72		1	530-088-G10					6204	1		2007-05-29 20:20:29	karenia5	1	cap3	8623	singlet	CAGTTCTCAACGCCCCACTGTATGGAGACCACGTGCAGACAACATCTTTCATGGGGGAGCTTGTAAACGGCGTCATCATGCAGGACGATCACTCAGATACTCCGTTCTATGCGAAATTTGATGGTATTGCGGCAAGTTGGTATGAAGAATACAAGGTGCATTTGGTTGGGCGCAATTCGAGTTCTGGTGTTCTAGCGAATGTCTACAACAGCGGCTTTACAGATGTCATGCGTACGGCAGGGGCCCTGGTTGAAGACAGGCAGGGTCGTTGCCCAAAGCGTAGACGTTGTTCTTGATAAGTTGAAAGTTAGAGA	31 32 32 30 44 27 29 27 24 19 27 33 33 32 38 38 38 26 16 14 6 6 6 14 17 26 31 38 38 38 34 34 34 34 38 38 34 34 34 38 38 38 38 38 38 38 53 38 44 44 44 39 39 53 53 47 47 47 47 47 53 53 53 53 53 53 47 47 59 59 59 59 59 59 59 59 59 59 59 51 51 51 51 51 53 53 59 59 59 59 59 59 41 39 39 39 51 53 53 59 59 59 59 59 62 59 59 62 62 59 59 59 59 59 59 59 62 59 59 59 59 59 59 59 59 59 59 59 59 59 59 59 59 59 59 59 59 59 59 59 59 59 59 56 56 56 56 59 59 51 59 59 59 59 59 59 59 59 62 62 62 62 62 62 62 62 62 62 62 62 59 59 59 59 59 53 53 59 59 59 59 59 59 59 59 59 59 59 62 62 62 59 59 59 59 59 59 59 59 59 59 59 59 53 53 51 51 39 41 39 39 39 47 47 53 47 53 47 44 39 39 39 39 44 44 47 47 43 43 53 53 53 53 44 39 39 39 39 39 39 39 38 38 38 35 38 47 47 38 33 33 31 30 29 31 42 32 32 38 36 32 31 23 23 29 31 32 32 32 44 38 38 38 38 38 38 39 39 43 53 53 34 32 29 30 30 34 38 34 38 38 38 38 35 38 32 24 17 22 25 33 33 33 38 29 33 31 23 29 31 33 23 23 15	42.83		1	530-088-H03					SOLUTION:REDID ./collectionsequences.pl++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++Fri May 11 01:33:22 EDT 2007CREATED supercraw0reads TO ADD supercraw0 READS TO funnybase10        NAME        supercraw0reads.pl        PURPOSE            1. COPY THE READS FROM supercraw0 TO funnybase10                2. supercraw0 DOES NOT HAVE THE FIELDS filteredsequence            AND filteredquality, SO ADD THESE (COPY screenedsequence            AND screenedquality)        	USAGE            supercraw0reads.pl [-h]         -h help              : print this help message	++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++Wed Apr 18 19:17:39 EDT 2007VECTOR SCREENINGDO ARRAY VECTOR SCREEN ON CLUSTERcd /Users/young/FUNNYBASE/bin/pipeline4./readsarrayvectorscreen.plWHICH RUNS readsvectorscreen.plTHEN LOAD WITH:cd /Users/young/FUNNYBASE/bin/pipeline4./readsloadscreenedreads.pl++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++Wed Apr 18 12:52:47 EDT 2007REDO reads TABLE AND ADD screenedreads TABLE TO funnybase101. CREATE .TSV FILES FOR screenedreadsCOPY funnybase10 TO /common/pipelinesudo mkdir /common/pipeline/funnybase10sudo cp -r /Users/young/FUNNYBASE/pipeline/funnybase10/phd_dir /common/pipeline/funnybase10ON gems:cd /Users/young/FUNNYBASE/bin/pipeline4sudo ./readsarrayscreen.pl -d funnybase10LOAD .TSV FILE INTO screenedreadsON genomics:cd /Users/young/FUNNYBASE/bin/pipeline4./readsloadscreenedreads.pl -d funnybase10++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++Thu Apr 12 17:45:53 EDT 2007DISCORDANCE IN collectionid SEQUENCE AND readnames IN assemblyreadsassemblysequences.plASSEMBLY SEQUENCE AND COLLECTION SEQUENCE CORRESPONDS TO LATER CONTIGE.G., collectionid=27, Contig31E.G., collectionid=28, Contig32BUT readnames CORRESPOND TO ACTUAL CONTIGE.G., readnames FOR collectionid=27 (i.e., Contig31) ARE THOSE FOR Contig27select assemblysequence from assemblysequences where collectionid=28\G*************************** 1. row ***************************assemblysequence: ATGGGCATGCGTCGACGAATTCACTGCCTGGTCAGATCCGCTAGGCGCTGCCCGTGGAAGTGCCATGCCTTTGGAGAAGGCGTTGCAATCAGAATCTGCGCAGTGTCCTCAGTGGCGTTTATCAGTTGCGCGACAGCTCTGCGTGGCGCTGGCAGCCCTTCGCAACTCAGGACGTAGCCACGGCAGCTTCTCACCGAGAAACGTGTGGGTGTCACCAAGTGGAGAGGTTGCTGTCATGGAGGCCGGCTTTGCGGACTCGCTGCTTCTGGCTGACGTCTTGCGCCAGAACGAATTGCCTGCTCACCTCGGCTTAGATTTTGCGAAGTACCTCGCTCCAGAAGGATGGCAACTGCCACGCCGAGCAGGCCCAGCTGCTGACGTGTGGAGCCTGGGCTTGGTGCTTCTGGAAGTGCTCGGCGGTGCGAGCCCGCCCCACGCAGAATGCAGCACCTTGGAGCAGCTGCACATGAAGCTCCAGCATGAGAAGATTCATGGGCAGCACGCAGTGGGAGCCTGCAGAAGCAGAGAGTTCGACACATTGCCCCGAAGCAGCGAGATGCTACATTGAGGCCTGCTTCAGATTGGCACCAGAGAAAAGACCTGAAGCACAAGAAGTTCTTTTCAGTCTAGCGGCACCTCCAGATGACGATCCTGCTGGGATGGCGTCGGCACCACAACAGAAGGCAGCCACTGCATGCAGCGGCCCACAAGCGGCCGATGGCGATGTGCCGTCACGGATGCACTCTCCGGCCCCTGGCAGCACGCTCGGGCAAGCAGGTGATTCTTGTTCGTCACCGACGCAGCGGCGCAGATCTTGGCCGCAGTCCTTGACGTACGAGGAGTTTTCTGCAGAGATGTTCGTTCCAGCTCCACGTGAAAAGTGGTACTTTTCTGCATAGGTGTTCGCAGGTGACGTCTTGATGCAGCTGACAGAAGCGCAGCTGTGTGTGTTCCGAGGTGGCTTGTGCCGGAGCCGCTGAGATTTGTGGATTAGAGCATGTGAATGCAGCCGAGCAGGATGCAGTTGCAATCTACGCCATGGTGCATGGAGCCGGGAGCGTTGAATCACCAACCGCCGTCACGGTTTTTGCAACTCATTCCT1 row in set (0.15 sec)mysql> select sequence, sequencetype, sequencenumber, readnames from collectionsequences where collectionid=28\G*************************** 1. row ***************************      sequence: GGCATGCGTCGACGAATTCACTGCCTGGTCAGATCCGCTAGGCGCTGCCCGTGGAAGTGCCATGCCTTTGGAGAAGGCGTTGCAATCAGAATCTGCGCAGTGTCCTCAGTGGCGTTTATCAGTTGCGCGACAGCTCTGCGTGGCGCTGGCAGCCCTTCGCAACTCAGGACGTAGCCACGGCAGCTTCTCACCGAGAAACGTGTGGGTGTCACCAAGTGGAGAGGTTGCTGTCATGGAGGCCGGCTTTGCGGACTCGCTGCTTCTGGCTGACGTCTTGCGCCAGAACGAATTGCCTGCTCACCTCGGCTTAGATTTTGCGAAGTACCTCGCTCCAGAAGGATGGCAACTGCCACGCCGAGCAGGCCCAGCTGCTGACGTGTGGAGCCTGGGCTTGGTGCTTCTGGAAGTGCTCGGCGGTGCGAGCCCGCCCCACGCAGAATGCAGCACCTTGGAGCAGGCTGCACATGAAGCTCCAGCATGAGAAGAT  sequencetype: contigsequencenumber: 32     readnames: 501-003-C05;501-008-G11;525-001-G011 row in set (0.00 sec)IN .ACE FILE:CO Contig28 1236 3 13 UGCATGCGTCGACGAATTCCCCAATTGGATCTCTTAGGAAGTTCACAAGCCATGTGTTCTCTTGTAGAGGCGGAGACCACAGGGTGGCCATTTTCACAAGAATCTTACAAAGCCAGCTGGGTTTCTCCAGAGTGCACATGTGACTGGCTCAGTCAACCTCTATGTAGCTACTGGAGCCGAGATGATTCGCCGGGCTGATGCACTCAGCATGAGTGGCATCATGATCCTTGTTGATGACACCTCTCTAATTGGGTCCAAGTATGAATTGGTGCGCATACCAACAGATAATGTTGAAGAGCATGTGGCCTTTGCAAAGAGCGGCTCAGTGTTCCCAGCCGACGCGCAGGGCATCTGGTGGATGGACCAGCGTGGTACCCATTTGCCAGTTGCAAGTGACCCAGGCTACAAGCAGGTTTGTGAAGCAGCAGCTGATGAGATCTTGGTATCTTTTGGGGAGGCAGGCTGGGATCCGCAATCACGATGTGTGACGGGTGTTCACATTTACGGTGGTGGGCCTTTACGTGGTCATTGGACTTGGTTGGACGTGGGTGGTGGCAACAGCAATGACTGGCGAGCGACGGGAACGCATCGGCCTGTGGCAGACTTCTGCTTCATCGACGAGAGCATGCAAGAAGTTCAAATTCATCGGAGTTTCAAAGTAGGCAATGCTTTGGAGGGACTTTTCGGATTCAACCTGCCTGAATTTATGGACTTCAGCATGAGGATGCCTTCCTGGGTGATGGATCTCCGAATGGTGCGTAAGCCATGGGGATGGGACCGGGTAACTTATGCTGG*ACCTTGGGAGTGCCACTACCCAGTGGTTCCAAATTGTGGATGGGTTTGGGAGCCATACAGAACACTACAATGCTTACTTGGCATTTGCTAACAATCAGACCGATTGCCCAAACAGCACTTTTTCGTGTCCATCTAACAGAGGGAATGGAACACAACTTGTTGCACGCCTGTCTACGTAGGTTTGGCTGGCAAACATATTCATGACTCGCCTTCTGAGAATCAGTCCCGCACGGATGGTGCCGTCAATTGTACAGCATACCACACAAACATTTGCTATTACCAAGAGAGTTGTGGCATTTGTGTGCGTATTTTGAGTTTTGTCAAAAGTAGAAGTGAACTACGTTTTCACCTATCCNGTGCATGAGGAATTTGCATCAAGTGCCGATGAGACAGCAACGTTCATACATGTAGGCTGTATCGAGCGGTTGTGGAAAAAAAAAA...AF 501-003-C05 U -16AF 501-008-G11 U 141AF 525-001-G01 U 459CO Contig32 1104 3 89 UATGGGCATGCGTCGACGAATTCACTGCCTGGTCAGATCCGCTAGGCGCTGCCCGTGGAAGTGCCATGCCTTTGGAGAAGGCGTTGCAATCAGAATCTGCGCAGTGTCCTCAGTGGCGTTTATCAGTTGCGCGACAGCTCTGCGTGGCGCTGGCAGCCCTTCGCAACTCAGGACGTAGCCACGGCAGCTTCTCACCGAGAAACGTGTGGGTGTCACCAAGTGGAGAGGTTGCTGTCATGGAGGCCGGCTTTGCGGACTCGCTGCTTCTGGCTGACGTCTTGCGCCAGAACGAATTGCCTGCTCACCTCGGCTTAGATTTTGCGAAGTACCTCGCTCCAGAAGGATGGCAACTGCCACGCCGAGCAGGCCCAGCTGCTGACGTGTGGAGCCTGGGCTTGGTGCTTCTGGAAGTGCTCGGCGGTGCGAGCCCGCCCCACGCAGAATGCAGCACCTTGGAGCAGCTGCACATGAAGCTCCAGCATGAGAAGATTCATGGGCAGCACGCAGTGGGAGCCTGCAGAAGCAGAGAGTTCGACACATTGCCCCGAAGCAGCGAGATGCTACATTGAGGCCTGCTTCAG*ATTGGCACCAGAGAAAAGA*CCTGAAGCACAAGAAGTTCTTTTCAGTCTAGCGGCACCTCCAGATGACGATCCTGCTGGGATGGCGTCGGCACCACAACAGAAGGCAGCCACTGCATGCAGCGGCCCACAAGCGGCCGATGGCGATGTGCCGTCACGGATGCACTCTCCGGCCCCTGGCAGCACGCTCGGGCAAGCAGGTGATTCTTGTTCGTCACCGACGCAGCGGCGCAGATCTTGGCCGCAGTCCTTGACGTACGAGGAGTTTTCTGCAGAGATGTTCGTTCCAGCTCCACGTGAAAAGTGGTACTTTTCTGCATAGGTGTTCGCAGGTGACGTCTTGATGCAGCTGACAGAAGCGCAGCTGTGTGTGTTCCGAGGTGGCTTGTGCCGGAGCCGCTGAGATTTGTGGATTAGAGCATGTGAATGCAGCCGAGCAGGATGCAGTTGCAATCTACGCCATGGTGCATGGAGCCGGGAGCGTTGAATCACCAACCGCCGTCACGGTTTTTGCAACTCATTCCTAF 501-003-D09 U -15AF 501-010-E03 U 533AF 501-007-D10 U 538BEFORE CORRECTION:select sequence, sequencetype, sequencenumber, readnames from collectionsequences where collectionid=28\G*************************** 1. row ***************************      sequence: GGCATGCGTCGACGAATTCACTGCCTGGTCAGATCCGCTAGGCGCTGCCCGTGGAAGTGCCATGCCTTTGGAGAAGGCGTTGCAATCAGAATCTGCGCAGTGTCCTCAGTGGCGTTTATCAGTTGCGCGACAGCTCTGCGTGGCGCTGGCAGCCCTTCGCAACTCAGGACGTAGCCACGGCAGCTTCTCACCGAGAAACGTGTGGGTGTCACCAAGTGGAGAGGTTGCTGTCATGGAGGCCGGCTTTGCGGACTCGCTGCTTCTGGCTGACGTCTTGCGCCAGAACGAATTGCCTGCTCACCTCGGCTTAGATTTTGCGAAGTACCTCGCTCCAGAAGGATGGCAACTGCCACGCCGAGCAGGCCCAGCTGCTGACGTGTGGAGCCTGGGCTTGGTGCTTCTGGAAGTGCTCGGCGGTGCGAGCCCGCCCCACGCAGAATGCAGCACCTTGGAGCAGGCTGCACATGAAGCTCCAGCATGAGAAGAT  sequencetype: contigsequencenumber: 32     readnames: 501-003-C05;501-008-G11;525-001-G011 row in set (0.00 sec)AFTER CORRECTION:mysql> select sequence, sequencetype, sequencenumber, readnames from collectionsequences where collectionid=28\G*************************** 1. row ***************************      sequence: GGCATGCGTCGACGAATTCACTGCCTGGTCAGATCCGCTAGGCGCTGCCCGTGGAAGTGCCATGCCTTTGGAGAAGGCGTTGCAATCAGAATCTGCGCAGTGTCCTCAGTGGCGTTTATCAGTTGCGCGACAGCTCTGCGTGGCGCTGGCAGCCCTTCGCAACTCAGGACGTAGCCACGGCAGCTTCTCACCGAGAAACGTGTGGGTGTCACCAAGTGGAGAGGTTGCTGTCATGGAGGCCGGCTTTGCGGACTCGCTGCTTCTGGCTGACGTCTTGCGCCAGAACGAATTGCCTGCTCACCTCGGCTTAGATTTTGCGAAGTACCTCGCTCCAGAAGGATGGCAACTGCCACGCCGAGCAGGCCCAGCTGCTGACGTGTGGAGCCTGGGCTTGGTGCTTCTGGAAGTGCTCGGCGGTGCGAGCCCGCCCCACGCAGAATGCAGCACCTTGGAGCAGGCTGCACATGAAGCTCCAGCATGAGAAGAT  sequencetype: contigsequencenumber: 32     readnames: 501-003-D09;501-007-D10;501-010-E031 row in set (0.00 sec)mysql> select assemblysequencetrim, sequencetype, sequencenumber, readnames from assemblysequences where collectionid=28\G*************************** 1. row ***************************assemblysequencetrim: GGCATGCGTCGACGAATTCACTGCCTGGTCAGATCCGCTAGGCGCTGCCCGTGGAAGTGCCATGCCTTTGGAGAAGGCGTTGCAATCAGAATCTGCGCAGTGTCCTCAGTGGCGTTTATCAGTTGCGCGACAGCTCTGCGTGGCGCTGGCAGCCCTTCGCAACTCAGGACGTAGCCACGGCAGCTTCTCACCGAGAAACGTGTGGGTGTCACCAAGTGGAGAGGTTGCTGTCATGGAGGCCGGCTTTGCGGACTCGCTGCTTCTGGCTGACGTCTTGCGCCAGAACGAATTGCCTGCTCACCTCGGCTTAGATTTTGCGAAGTACCTCGCTCCAGAAGGATGGCAACTGCCACGCCGAGCAGGCCCAGCTGCTGACGTGTGGAGCCTGGGCTTGGTGCTTCTGGAAGTGCTCGGCGGTGCGAGCCCGCCCCACGCAGAATGCAGCACCTTGGAGCAGGCTGCACATGAAGCTCCAGCATGAGAAGAT        sequencetype: contig      sequencenumber: 32           readnames: 501-003-D09;501-007-D10;501-010-E03++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++Tue Apr  3 11:23:21 EDT 2007ERROR IN SUPERCRAW SEQUENCE READNAMES mysql> select * from collectionsequences where readnames like '%123-041-F07%'\G*************************** 1. row ***************************        collectionid: 36 collectionaccession: 1   collectionversion: 0.00collectionannotation:     annotationsource:         annotationid:  annotationevaluedec: 0.00 annotationevalueexp: 0    assemblydatetime: 2007-02-22 13:43:43        assemblyname: supercraw0      assemblynumber: 1        assemblytype: cap3      sequencenumber: 743        sequencetype: contig            sequence: GNGNGGCCTNCGCTCAGGAATCGGACACAACATGGCGTCCGCCGTACTGAANGTNCAGTGGCAGGCATTTCCAGATGTTCTCGTGCCGCCCTCCTGAGGGCACATTCAACAACAGCCGCTCTCCAACAAGGCGTTCCTGGGATCTCCGTGGAAGCTGGGGAAACTCAACCACATAGCCATCGCCGTCCCCGACATGGAGAAGGCCACGGCTCTGTATCGAGATGTGCTCGGTGCCACTGTGAGCGAAAAAGTCCCCCTGCCGGAACACGGCGTCTACACGGTGTTTGTGGAGCTGGGCAACACTAAGCTGGAGCTGCTCCATCCTATCGGGGAGAAGAGCCCCATCTCTGGGTTCTTACAAGAAAAACAAGTCAGGAGGGATGCCACCACATTTGTATTGAGGTGGACGACATTCACGCTGCCGTAACCGACTGAAGTCAAAGAACATCAGAACCCTTTCGGCGGAGCCTCGGATAGGTGCTCACGGGAAACCGGTCATGTTCCTCCATCCCAAAGACTGCGACGGTTGCTGGTGGAGCTGGAAAGAGGCATGAGCCTCTCTGTTTGCAGGAACTTGTTTGGAGTCTTCATTTTAATTTCTAACATATTCCTCCGGCGTTTTGATACTCGGTTATAACAGTGTGGATTTGNTTCTTTACTTCTCATTTCAGAAATGTTGTTTCCTGAATTGGGTTTGTTGAAATAAGGTAAANAGGGGAGGATGTTTGAACGGTTATAAAGGGAATGTTCCAAAAAAAAACGGGGGGGGG             quality:       averagequality: 0.00                snps:          numberreads: 3           readnames: 001-100251-G11;123-041-F07;124-003-G09                 div:             blastdiv:      sequencereaddiv:                  svg: 1 row in set (0.14 sec)++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++Fri Mar 30 12:25:18 EDT 2007TIM DATABASE ISSUESMSG: TimCC: Doug, MargieFrom : 	Tim McLean <tmclean@rsmas.miami.edu>Sent : 	Thursday, March 29, 2007 1:33 PMTo : 	"stuart young" <youngstuart@hotmail.com>CC : 	Douglas L. Crawford <dcrawford@rsmas.miami.edu>Subject : 	issues in databaseHi Tim,Here are some answers to your questions about the database filters (sequence length, homopolymers) and clustering (similar singletons, chromat-read sequence discrepancies):	> Stuart,> As I continue to root around the data, here are some ideas or issues I have come across:> 1)  is the current length cut-off 50 bases?  I think it should be increased to at least 75 bases.Okay - karenia3 is coming up.> 2)  I have found trimmed sequences that have gaps of X's.  Are the "good" base runs concatenated to form a single sequence that is then used for alignment and BLASTing?The Xs are inserted by cross_match to mask vector sequence in each individual read. The good base runs are not concatenated, as far as I know. With both CAP3 and PHRAP, the individual reads are aligned using a gapped alignment (more sensitive than just using BLASTN) and the 'mosaic' (PHRAP) or 'overall' consensus residues are predicted from the combination of these pairwise alignments.> 3)  I have found some sequences that are NNNNNNN.... in the database.That's an artefact of the clustering algorithm but we could use an automatic filter or manual editing later to remove that. Did you find it in a lot of sequences?> 4)  The copy of the vector sequence you have may not be the coverage sequence--many trimmed sequences still have vector sequence associated with it.I've attached a copy of the vector.seq file which contains all of the vector sequences I've got so far. It contains sequences for the following vectors:	pBluescriptIISK	pSmart-HCKan	bluescript	lorist2	lorist6	loristb	pbs	pjb8	pphc79	prs313	prs423	prs424	pwe15	pyac4	scos	m13mp18	m13mp19	mg3_left	mg3_right	puc118	puc18	pSC> 5)  Are polyA sequences not trimmed?  What about sequences downstream of polyA?  Are they used for aligning and/or BLASTing?The CAP3 and PHRAP clustering algorithms only trim off homopolymer runs at either end of the reads so you may find homopoly segments left inside the reads that lead to AAAAAAAAAAA sections inside the clustered consensus sequences. Can you show me which sequences you've found? Depending on the scale of the issue, we could do post-processing to screen them out or just manually edit the sequences.> 6)  I've noticed that there can be small sequence differences between an electropherogram sequence and the sequence in the database for the same sample?  How can that arise?I'm using the phred predictions that are found in the .phd files. Are you using a different prediction package? I'm not sure which is used in MacVector but it's possible there may be discrepancies there.> 7)  Some singleton sequences appear identical, or at least highly similar, but don't cluster.  I can find these because they annotate as the same protein and I can then do the alignment.This problem first surfaced when I did the 'unique annotation' algorithm, i.e., chose the best singleton/contig from a group of singletons/contigs that have the same 'best BLAST hit'. It appears that CAP3 classifies them as singlets if they differ slightly AND have high quality values (i.e., maybe SNPs, duplicates, etc.)> I'm not sure how widespread some of these problems are--I may have gotten "lucky" and found the rare exception.  But I would feel better if I knew exactly how the process of trimming, screening, aligning, clustering, etc. occurred.  Can we get together to discuss some of these things?Pop by anytime today. I'll keep checking to see if you're in too.Cheers,Stuart.++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++Thu Mar 29 23:27:08 EDT 2007POPULATE collectionsequencesdiv TABLE1. RUN collectionsequencesdiv.pl2. RUN collectionsequencesblastdiv.pl	NAME: collectionsequencesdiv.pl	PURPOSE: CREATE sequencesdiv ELEMENT FOR collectionsequencesdiv TABLE		INPUT:			1. Sequence information from 'collectionsequences' table			2. Annotation information from 'collectionsequencesannotation' table	OUTPUT:			1. DELETES THE CONTENT OF THE collectionsequences TABLE						2. ADDS THE sequencediv FIELD TO THE collectionsequences TABLE			+---------------------+--------------+------+-----+---------+-------+			| Field               | Type         | Null | Key | Default | Extra |			+---------------------+--------------+------+-----+---------+-------+			| collectionid        | int(8)       |      | PRI | 0       |       |			| collectionaccession | int(2)       |      | PRI | 0       |       |			| collectionversion   | decimal(4,2) |      |     | 0.00    |       |			| sequencediv         | mediumtext   | YES  |     | NULL    |       |			| blastdiv            | mediumtext   | YES  |     | NULL    |       |			| sequencereaddiv     | mediumtext   | YES  |     | NULL    |       |			| svg                 | mediumtext   | YES  |     | NULL    |       |			+---------------------+--------------+------+-----+---------+-------+										NOTES:	**** MUST RUN collectionsequencesblastdiv AFTER RUNNING THIS APPLICATION						TO POPULATE THE blastdiv FIELDS! ****		USAGE:       ./collectionsequencesdiv.pl <-d database> [-h]++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++Tue Mar 27 21:53:58 EDT 2007ASSEMBLY PIPELINE	NAME:	assemblypipeline		VERSION: 1	PURPOSE: 		1. COLLECT AND ASSEMBLE SEQUENCES		2. DISPLAY STATUS OF PIPELINE    This program collects sequence files and assembles them into contigs and singlets    by the following process:		        stage 1. Collect all of the chromat files from the user-specified experiment                 (option -e) and place them within the 'chromat_dir' inside the user-                 specified directory (option -d)        stage 2. Create '.phd' files using phred		 stage 3. Create a single .fasta file from the .phd files		 stage 4. Screen for vector        stage 5. Assemble with CAP3 or phrap        stage 6. Predict SNPs with polyphred			1. COLLECT CHROMAT FILES collect	/usr/bin/perl /Users/young/FUNNYBASE/bin/pipeline3/collectreads.pl -e151 -d /Users/young/FUNNYBASE/pipeline/162	2. CALCULATE .PHD FILES FROM CHROMATS phred    /Users/young/FUNNYBASE/apps/phred/phred	    export PHRED_PARAMETER_FILE=/Users/young/FUNNYBASE/apps/phred/phredpar.dat	chdir("/Users/young/FUNNYBASE/pipeline/$assembly_number");	phred -id chromat_dir -pd phd_dir	3. CREATE ONE FASTA FILE FOR ASSEMBLY phd2fasta    /Users/young/FUNNYBASE/apps/phd2fasta/phd2fasta 	    phd2fasta  -id ../phd_dir  -os 161.fasta -oq 161.fasta.qual	4. SCREEN FOR VECTOR cross_match	/Users/young/FUNNYBASE/apps/phrap/cross_match    cross_match $assembly_directory/$assembly_name.fasta /Users/young/FUNNYBASE/pipeline/vector.seq -minmatch 12 -penalty -2 -minscore 20 -screen	5. ASSEMBLE WITH phrap OR cap3		phrap 161.fasta.screen -new_ace -view -minmatch 20 -new_ace -view 		cap3 $assembly_directory/$assembly_name.fasta.screen	6. FIND SNPS		polyphred -ace $acefile -dir $assembly_directory -output $assembly_directory/$assembly_name.poly"); 	USAGE:        -n database            : name of database (e.g., funnybase7, karenia1)        -e experiment_number   : name of experiment (e.g., experiment '126', in                               the directory '126Library')        -p plates              : start and end numbers of plates to be collected                               (a single number or a '-' separated range)							   (DEFAULT = all plates)        -p assembly_programme  : name of contig assembly programme ('phrap' or 'cap3', DEFAULT = cap3)        -s stage               : start doing from this stage        -h help                : print this help message	< option > denotes REQUIRED argument	[ option ] denotes OPTIONAL argument    EXAMPLE:    Collect all of the chromat files for experiment 126 and place in the required directory:        collectassemble -e 126 -p 1:115 -d funnybaseX    Skip stages 1-3 and run stage 4 only for experiment 151:        collectassemble -e 151  -d experiment151 -s 4++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++Tue Mar 27 21:53:38 EDT 2007SNP PIPELINE        SNP PREDICTION AND ANNOTATION PIPELINE        ++++++++++++++++++++++++++++++++++++++                1. PREDICT SNPs WITH polyphred                    ./assemblypipeline.pl -d funnybase10 -s 6            2. CONDENSE .poly FILE INTO .stats FILE                    ./SNPassemblysequences.pl -d funnybase10                3. UPDATE snp_stats FIELD OF stats TABLE                    ./SNPstats.pl -d funnybase10    ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++Tue Mar 27 21:21:08 EDT 2007DID GRAPHS FOR ALL DATABASES (funnybase10, karenia2, aplysia4)./sequencequalitybargraph.pl -d funnybase10 -a annotated -s contig./sequencequalitybargraph.pl -d funnybase10 -a annotated -s singlet./sequencequalitybargraph.pl -d funnybase10 -a annotated -s both./sequencequalitybargraph.pl -d funnybase10 -a unknown -s contig./sequencequalitybargraph.pl -d funnybase10 -a unknown -s singlet./sequencequalitybargraph.pl -d funnybase10 -a unknown -s both./sequencequalitybargraph.pl -d funnybase10 -a both -s contig./sequencequalitybargraph.pl -d funnybase10 -a both -s singlet./sequencequalitybargraph.pl -d funnybase10 -a both -s both./sequencequalitybargraph.pl -d karenia2 -a annotated -s contig./sequencequalitybargraph.pl -d karenia2 -a annotated -s singlet./sequencequalitybargraph.pl -d karenia2 -a annotated -s both./sequencequalitybargraph.pl -d karenia2 -a unknown -s contig./sequencequalitybargraph.pl -d karenia2 -a unknown -s singlet./sequencequalitybargraph.pl -d karenia2 -a unknown -s both./sequencequalitybargraph.pl -d karenia2 -a both -s contig./sequencequalitybargraph.pl -d karenia2 -a both -s singlet./sequencequalitybargraph.pl -d karenia2 -a both -s both./sequencequalitybargraph.pl -d aplysia4 -a annotated -s contig./sequencequalitybargraph.pl -d aplysia4 -a annotated -s singlet./sequencequalitybargraph.pl -d aplysia4 -a annotated -s both./sequencequalitybargraph.pl -d aplysia4 -a unknown -s contig./sequencequalitybargraph.pl -d aplysia4 -a unknown -s singlet./sequencequalitybargraph.pl -d aplysia4 -a unknown -s both./sequencequalitybargraph.pl -d aplysia4 -a both -s contig./sequencequalitybargraph.pl -d aplysia4 -a both -s singlet./sequencequalitybargraph.pl -d aplysia4 -a both -s bothAND MOVED THE DISPLAY OF QUALITY DISTRIBUTIONS MENU OPTION FROM 'OPEN' TO 'VIEW',WITH A MULTI-NESTED SUBMENU FOR ALL NINE OPTIONS.++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++Tue Mar 27 18:16:58 EDT 2007ERROR: MISSING readname AND numberreads IN COLLECTION SEQUENCES FOR supercraw0./sequencequalitybargraph.pl -d funnybase10 -a Y -s contigUnknown option: aResult file: /Users/young/FUNNYBASE/pipeline/graph/funnybase10.sequencequality.a-both.s-both.bins100.tsvPrinting sequences to result file '/Users/young/FUNNYBASE/pipeline/graph/funnybase10.sequencequality.a-both.s-both.bins100.tsv'$VAR1 = {          'sequencenumber' => '706',          'numberreads' => '0',          'collectionaccession' => '1',          'sequencetype' => 'singlet',          'collectionid' => '1455',          'assemblyname' => 'supercraw0',          'readnames' => '',          'assemblytype' => 'cap3',          'assemblynumber' => '1',          'averagequality' => undef        };Key numberreads has no value++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++Mon Mar 19 15:04:43 EDT 2007TO DO FOR WEEK BEGINNING MON 19th MARCHFrom : 	Douglas Crawford <dcrawford@rsmas.miami.edu>Sent : 	Monday, March 19, 2007 3:11 PMTo : 	"stuart young" <youngstuart@hotmail.com>Subject : 	Re: Plan for the week of March 18	STUART   Your TO DO  	Please finish Karenia.    Remember the goal is to identify   approx 6,000 good EST for microarrays	Please finish the submission of Funnybase EST  (are you submitting Karenia???)	IMPORTANT:   A   There are two task:  we need to but the data and figures about "The problem with Annotation"         		 1:   X% OF Y number of Human refseq are not annotated.         2: quality of annotation depends on database,  the better the database, the lower is X%         3:  gene names differ among databases  (??)         4:  More than one "equivalent" hit with different names         5:  GENE NAMES in publication are often unrelated to well managed databases			- how do we know this is true,  is it true?	B:  You (and I) need to play with funnybase and make sure all the links and searches work   Currently we are only searching the SwissProt hits   We can not search by hits to human/mouse/rat/dog  accession number, locus number or any standard in NCBI   Blasting??dlc******-----********------------**************---*******Douglas L. CrawfordDirector Marine GenomicsRosenstiel School of Marine SciencesUniversity of Miami4600 Rickenbacker CswyMiami, FL 33149305-421-4121http://crawford.rsmas.miami.edu/http://genomics.rsmas.miami.edu/funnybase/super_craw4/On Mar 19, 2007, at 3:34 AM, stuart young wrote:    Hi Doug,    Here's my summary of last week and plan for this week:    0. Karenia, aplysia, funnybase (additional jobs not included in last week's plan)      DONE: Fixed problem in calculation of read and sequence start/stop points (now using clustaW instead of sim4)      TO DO: Update funnybase10 and karenia2 with new start/stop points (now running).    1. dbEST submission       TO DO: Slow download of Expt 159    2. Crawford Lab website       TO DO: Bios for Doug, Margie, Amy, Jeff, Dean, Meredith, Stuart, Tim    3. Funnybase website       95% DONE - add bookmark function       TO DO: add Pathway results to search output (requires results from task 4 - see below)    4. Pathways annotation       90% DONE: Pathway annotation (by building synonym tables) using fuzzy matches of GO descriptions with swissprot annotations    5. Thesis research       - TO DO: Decision Trees and Naive Bayes classifiers using orthologues data    Stuart.++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++Mon Mar 12 16:39:32 EDT 2007BLASTED funnybase10 AGAINST arabidopsis,neurospora,pberghei,pfalciparum,pvivax,pyoelii,tgondii,unigene-hydra,yeast,zebrafish6, LOADED INTO MYSQL AND CREATED DOWNLOAD FILEsudo ./collectionarrayblast.pl -d funnybase10 -t arabidopsis,neurospora,pberghei,pfalciparum,pvivax,pyoelii,tgondii,unigene-hydra,yeast,zebrafish6++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++Mon Mar 12 09:27:25 EDT 2007MSG: dcrawford@rsmas.miami.edu, jvanwye@rsmas.miami.edu, moleksiak@rsmas.miami.edu,tmclean@rsmas.miami.eduSJT: Download reads TSV fileHi all,This is just a reminder of how download all of the reads in both databases (funnybase10 and karenia2):http://genomics.rsmas.miami.edu/sandbox11/sandbox11.htmlTo select the database (default is 'funnybase10'), do: File --> Open --> DatabaseTo download the TSV file, do: File --> Save --> Collection sequencesthen open in Excel.Cheers,Stuart.++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++Sat Mar 10 18:22:29 EST 2007MSG: tmclean@rsmas.miami.edu,dcrawford@rsmas.miami.edu, jvanwye@rsmas.miami.edu, moleksiak@rsmas.miami.eduSBJT: Download TSV collection sequencesHi all,I've completed the tab-separated value (TSV) file download of all reads in both databases (funnybase10 and karenia2):http://genomics.rsmas.miami.edu/sandbox11/sandbox11.htmlTo select the database (default is 'funnybase10'), do: File --> Open --> DatabaseTo download the TSV file, do: File --> Save --> Collection sequencesthen open in Excel.Cheers,Stuart.++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++Hi Doug,Here's my summary of last week and plan for this week:1. dbEST submission    TO DO: Final annotations of funnybase10 using all compared databases (Swissprot, refseq, etc.).    DONE: Format annotated sequences in required format (after pathway annotation completed)    TO DO: Submit sequences to dbEST2. Crawford Lab website     TO DO: Bios for Doug, Margie, Amy, Jeff, Dean, Meredith, Stuart, Tim 3. Funnybase website    DONE: update fileseek    95% DONE - add bookmark function    TO DO: add Pathway results to search output (requires results from task 4 - see below)4. Pathways annotation        90% DONE: Pathway annotation (by building synonym tables) using fuzzy matches of GO descriptions with swissprot annotations     DONE: lookup tables from mappings with GO5. Thesis research    - TO DO: Decision Trees and Naive Bayes classifiers using orthologues dataStuart.++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++select assemblyname, sequencetype, count(*), min(sequencenumber), max(sequencenumber) from assemblysequences group by assemblyname, sequencetype ;+--------------+--------------+----------+---------------------+---------------------+| assemblyname | sequencetype | count(*) | min(sequencenumber) | max(sequencenumber) |+--------------+--------------+----------+---------------------+---------------------+| funnybase10  | contig       |     1758 |               21545 |               23302 || funnybase10  | singlet      |    20088 |                1457 |               21544 || supercraw0   | contig       |      749 |               24010 |               24758 || supercraw0   | singlet      |      707 |               23303 |               24009 |+--------------+--------------+----------+---------------------+---------------------+mysql> select count(*) from assemblyreads where assemblyname = 'funnybase10';+----------+| count(*) |+----------+|    25941 |+----------+1 row in set (0.08 sec)mysql> select count(*) from reads;+----------+| count(*) |+----------+|    28863 |+----------+1 row in set (0.00 sec)mysql> select count(*) from assemblyreads, reads where assemblyname = 'funnybase10' and assemblyreads.experiment=reads.experiment  and assemblyreads.plate=reads.plate and assemblyreads.well=reads.well;+----------+| count(*) |+----------+|    17649 |+----------+1 row in set (0.26 sec)mysql> select count(*) from reads;+----------+| count(*) |+----------+|    28863 |+----------+1 row in set (0.00 sec)mysql> select count(*) from assemblyreads, reads where assemblyname = 'supercraw0' and assemblyreads.experiment=reads.experiment  and assemblyreads.plate=reads.plate and assemblyreads.well=reads.well;+----------+| count(*) |+----------+|        0 |+----------+1 row in set (0.06 sec)++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++Thu Feb 22 14:23:33 EST 2007REDID funnybase10        stage 2. Input read information (from '.phd.1' files) into the database         stage 3. Input assembly reads information (from the '.ace' file) into the database        stage 4. Input assembly sequences information (from the '.ace' file) into the database        stage 5. Calculate read coverage and depth of assembly sequences        stage 6. Insert SNP predictions into database        stage 7. Initialise the database or BLAST new sequences against existing database        stage 8. Update existing accessions by comparing them with the new assembly        stage 9. BLAST the database against external databases0. CREATE DATABASE./create_database.pl -d funnybase101. LOAD READS=============./reads.pl -d funnybase102. SCREEN READS===============ON gems:./readsarrayscreen.pl -d funnybase103. LOAD SCREENED READS======================ON genomics:./readsarrayscreenloaddata.pl -d funnybase104. LOAD ASSEMBLYSEQUENCES FROM UNIQUE SEQUENCES OF supercraw0 THAT DON'T SHARE ANNOTATION WITH funnybase7=========================================================================================================MYSQL:delete from assemblyreads;delete from assemblysequences;./assemblyreadsassemblysequences.pl -d funnybase10 -n supercraw0 -f /Users/young/FUNNYBASE/pipeline/supercraw0/annotation/comparemultiple.supercraw0-funnybase7.extract.contigs -wuse funnybase10select assemblyname, assemblynumber, sequencetype, count(*) from assemblysequences group by assemblyname , sequencetype;+--------------+----------------+--------------+----------+| assemblyname | assemblynumber | sequencetype | count(*) |+--------------+----------------+--------------+----------+| supercraw0   |              1 | contig       |      749 || supercraw0   |              1 | singlet      |      707 |+--------------+----------------+--------------+----------+5. LOAD ASSEMBLY SEQUENCES FROM supercraw10===========================================./assemblyreadsassemblysequences.pl -d funnybase10 -q 10select assemblyname, assemblynumber, sequencetype, count(*) from assemblysequences group by assemblyname , sequencetype;+--------------+----------------+--------------+----------+| assemblyname | assemblynumber | sequencetype | count(*) |+--------------+----------------+--------------+----------+| funnybase10  |              2 | contig       |     1758 || funnybase10  |              2 | singlet      |    20088 || supercraw0   |              1 | contig       |      749 || supercraw0   |              1 | singlet      |      707 |+--------------+----------------+--------------+----------+select assemblyname, sequencetype, count(*), min(sequencenumber), max(sequencenumber) from assemblysequences group by assemblyname, sequencetype ;+--------------+--------------+----------+---------------------+---------------------+| assemblyname | sequencetype | count(*) | min(sequencenumber) | max(sequencenumber) |+--------------+--------------+----------+---------------------+---------------------+| funnybase10  | contig       |     1758 |               21545 |               23302 || funnybase10  | singlet      |    20088 |                1457 |               21544 || supercraw0   | contig       |      749 |                 708 |                1456 || supercraw0   | singlet      |      707 |                   1 |                 707 |+--------------+--------------+----------+---------------------+---------------------+6. CALCULATE READ COVERAGE==========================./assemblysequencesreadcoverage.pl -d funnybase10...Total 21846 coverages added (total sequences 21846)Completed ./assemblysequencesreadcoverage.plRun time: 00:22:230:22AM, 24 February 2007****************************************7. POPULATE collectionsequences===============================MYSQL:delete from collectionsequences;./collectionsequences.pl -d funnybase10 -n supercraw0./collectionsequences.pl -d funnybase10select assemblyname, count(*) from collectionsequences group by assemblyname;+--------------+----------+| assemblyname | count(*) |+--------------+----------+| funnybase10  |    21845 || supercraw0   |     1455 |+--------------+----------+8. BLAST COLLECTION SEQUENCES=============================sudo ./collectionarrayblast.pl -d funnybase10sudo ./collectionblastloaddata.pl -d funnybase10select targetsource, count(distinct targetid) from collectionblast group by targetsource;+--------------+--------------------------+| targetsource | count(distinct targetid) |+--------------+--------------------------+| refseq-dog   |                    18989 || refseq-human |                    13438 || refseq-mouse |                    12061 || refseq-rat   |                    10389 || swissprot    |                    57587 |+--------------+--------------------------+9. POPULATE collectionsequencesannotation=========================================./collectionsequencesannotation.pl -d funnybase1010. CALCULATE DIVS==================FOR ASSEMBLED SEQUENCE VIEW:./collectionsequencesdiv.pl -d funnybase10./assemblyreadsdiv.pl -d funnybase10./assemblysequencesdiv.pl -d funnybase10FOR blastdiv OF collectionsequencesdiv TABLE:./collectionsequencesblastdiv.pl -d funnybase10FOR selectexperiment HTML OF platesinfo TABLE:./experimentplatesdiv.plFOR HTML divs OF ALL PLATES IN THE MYSQL TABLE 'plates'./platesdiv.pl11. CALCULATE STATS===================./collectionstats.pl -d funnybase1012. DO PATHWAYS==============./collectionsequencespathways.pl -d funnybase10++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++Wed Feb 21 12:34:13 EST 2007CHECK READS FOR ALL EXPERIMENTSselect experiment, count(*) from reads group by experiment;+------------+----------+| experiment | count(*) |+------------+----------+|        126 |     5947 ||        130 |     8995 ||        151 |      959 ||        152 |      959 ||        153 |     1152 ||        154 |      768 ||        155 |      942 ||        156 |      954 ||        157 |      945 ||        158 |      956 ||        159 |    12233 |+------------+----------+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++Wed Feb 14 15:31:38 EST 2007FUNNYBASE PRIMERSPucF		CGCCAGGGTTTTCCCAGTCACGPucR		GAGCGGATAACAATTTCACACAGGAAACAGSK20		CGCTCTAGAACTAGTGGATCSf			GTGAGTTGATTGCAGTCCAGTTACGCTSr			GGTCAGGTATGATTTAAATGGTCAGTAT7smart		TATAGAAGGGGATATCACTCAGCATAATSF22		TTAATACGACTCACTATAAGGGGTGTGGSR22		GCCTCCGGTCGGAGGCTTTTGACTTTCTGCTATGGAGGSF20		TTCACACAGGAAACAGCCATGGGCSF25		GAGCGGATAACAATTTCACACAGG++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++Wed Feb 14 15:28:54 EST 2007PHD2FASTA AND CROSSMATCH COMMANDSPHD2FASTA/Users/young/FUNNYBASE/apps/phred/phd2fasta/phd2fasta  -id ../phd_dir  -os funnybase7.fasta -oq funnybase7.fasta.qualCROSS_MATCH/Users/young/FUNNYBASE/apps/phrap/cross_match funnybase7.fasta /Users/young/FUNNYBASE/pipeline/vector.seq -minmatch 12 -penalty -2 -minscore 20 -screen cross_match version 0.990329Reading parameters ... 0.504 Mbytes allocated -- total 0.504 MbytesCOLLECT_ASSEMBLE ./collectassemble.pl -d /Users/young/FUNNYBASE/pipeline/funnybase7 -s 3. -e 126,128,130,150-159 ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++Wed Feb 14 15:25:25 EST 2007TESTED BLAST DATABASESNUCLEOTIDE SEQUENCES (blastn)ensembl-chimpensembl-elegansensembl-fuguensembl-humanensembl-mouseensembl-tetraodonensembl-yeastensembl-zebrafishgenbankunigene-anophelesunigene-dogunigene-drosophilaunigene-elegansunigene-fuguunigene-humanunigene-hydraunigene-mouseunigene-pigunigene-pineunigene-ratunigene-riceunigene-zebrafishPEPTIDE SEQUENCES (blastx)swissprotrefseq-dogrefseq-humanrefseq-mouserefseq-rat++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++Mon Feb 12 01:07:46 EST 2007MSG: DougCC: MargieHi Doug,Here's my summary of last week and plan for this week:dbEST submission    TO DO: Format unannotated sequences in required format and submit.        TO DO: Format annotated sequences in required format (after pathway annotation completed) and submit.    Crawford Lab website     TO DO: Introduction for welcome page, Bios: Doug, Margie, Amy, Jeff, Dean, Meredith, Stuart, Tim Funnybase website    DONE: Refactored search output for faster precalculation and better display    80% DONE - add bookmark function    TO DO: update fileseek    TO DO: add Pathway results to search outputPathways annotation        DONE: I've extracted the EC terms from all Swissprot entries (180,000) to be used as a supplementary lookup table, in addition to the existing mapping table.    50% DONE: Pathway annotation (by building synonym tables) using fuzzy matches of GO descriptions with swissprot annotations which we discussed last week.Additional tasks    DONE: The Aplysia analysis (see following email)                        -  cumulative assembly of Aplysia experiments to show change in reads vs ESTs/contigs/singlets (i.e., adding more reads gives more ESTs, not yet 'flattening out')                        -  BLAST of subtracted experiment (JUVE-L1-17) against all database, compared with 95%, 99% and 99.9% confidence interval limits of BLAST of all other                JUVE experiments against the database (in all cases hits against ESTs containing the reads being BLASTed are ignored)Thesis research    - DONE: Debugging iprscan on the orthologues from unigene (based on hits for the 100 human unigenes)    - TO DO: Decision Trees and Naive Bayes classifiers using orthologues dataStuart. ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++funnybase10 STATS: select min(collectionid), max(collectionid), sequencetype, assemblyname from collectionsequences group by assemblyname, sequencetype;+-------------------+-------------------+--------------+--------------+| min(collectionid) | max(collectionid) | sequencetype | assemblyname |+-------------------+-------------------+--------------+--------------+|              1456 |              3213 | contig       | funnybase10  ||              3214 |             23301 | singlet      | funnybase10  ||                 1 |               749 | contig       | supercraw0   ||               750 |              1455 | singlet      | supercraw0   |+-------------------+-------------------+--------------+--------------+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++funnybase10 BLAST STATS:select count(distinct collectionid) from collectionblast;+------------------------------+| count(distinct collectionid) |+------------------------------+|                        13081 |+------------------------------+select targetsource, count(distinct targetid) from collectionblast group by targetsource;+--------------+--------------------------+| targetsource | count(distinct targetid) |+--------------+--------------------------+| refseq-dog   |                    19357 || refseq-human |                     7630 || refseq-mouse |                     6474 || refseq-rat   |                    11915 || swissprot    |                    27314 |+--------------+--------------------------+COMPARED TO funnybase9:Fri Nov 10 08:16:18 EST 20061. INSERTED BLAST RESULTS FOR supercraw0 (experiments: 1 123 124 125 189 190 199 999) INTO funnybaseblast TABLE:BREAKDOWN BY BLAST TARGET SOURCE:+--------------+--------------------------+| targetsource | count(distinct targetid) |+--------------+--------------------------+| refseq-dog   |                    14888 || refseq-human |                    10813 || refseq-mouse |                     9547 || refseq-rat   |                     9098 || swissprot    |                    44341 |+--------------+--------------------------+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++MSG: DougMon Jan 29 04:27:40 EST 2007Hi Doug,Crawford Lab website    - I've completed the basic structure and most of the pages      TO DO: Introduction for welcome page, protocols, publications, etc.Funnybase website    - 95% completed     - Rearranged the pipeline so that the stages are annotated, and it can be reconstructed or added to easily. It's now a fairly generic structure so I can be adapted to any additional analyses.     - TO DO: Complete the upload so that it can upload to specific user-specified directories, add GO and EC numbers (Monday's task)Thesis research    - The cluster is also working okay now but I'm fine-tuning the performance    - I'm currently running iprscan on the orthologues from unigene (based on hits for the 100 human unigenes)    - TO DO: Once the orthologues iprscans are done, I'll try Decision Trees and Naive Bayes classifiersStuart. ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++Sun Jan 28 23:34:26 EST 2007REDOING funnybase9 AS funnybase10 (USING pipeline4)1. COPIED LINKS TO FILES IN funnybase7 USING mirror.pl./mirror.pl -s funnybase7 -t funnybase10NO NEED TO RUN stages 1 TO 6stage 1. Collect all of the chromat files from the user-specified experiment        (option -e) and place them within the 'chromat_dir' inside the user-        specified directory (option -d)stage 2. Create '.phd' files using phredstage 3. Create a single .fasta file from the .phd filesstage 4. Screen for vectorstage 5. Assemble with CAP3 or phrapstage 6. Predict SNPs with polyphred2. LOAD ASSEMBLYSEQUENCES (CONTIGS THEN SINGLETS) FROM UNIQUE SEQUENCES OF supercraw0 THAT DON'T SHARE ANNOTATION WITH funnybase7:./assemblyreadsassemblysequences.pl -d funnybase10 -n supercraw0 -f /Users/young/FUNNYBASE/pipeline/supercraw0/annotation/comparemultiple.supercraw0-funnybase7.extract.contigs -wuse funnybase10select assemblyname, assemblynumber, sequencetype, count(*) from assemblysequences group by assemblyname , sequencetype;+--------------+----------------+--------------+----------+| assemblyname | assemblynumber | sequencetype | count(*) |+--------------+----------------+--------------+----------+| supercraw0   |              1 | contig       |      749 || supercraw0   |              1 | singlet      |      707 |+--------------+----------------+--------------+----------+3. LOAD ASSEMBLY SEQUENCES FROM supercraw10:./assemblyreadsassemblysequences.pl -d funnybase10 -q 10select assemblyname, assemblynumber, sequencetype, count(*) from assemblysequences group by assemblyname , sequencetype;+--------------+----------------+--------------+----------+| assemblyname | assemblynumber | sequencetype | count(*) |+--------------+----------------+--------------+----------+| funnybase10  |              2 | contig       |     1758 || supercraw0   |              1 | contig       |      749 || supercraw0   |              1 | singlet      |      707 |+--------------+----------------+--------------+----------+select assemblyname, sequencetype , count(*), min(sequencenumber), max(sequencenumber) from assemblysequences group by assemblyname, sequencetype ;+--------------+--------------+----------+---------------------+---------------------+| assemblyname | sequencetype | count(*) | min(sequencenumber) | max(sequencenumber) |+--------------+--------------+----------+---------------------+---------------------+| funnybase10  | contig       |     1758 |                1457 |                3214 || supercraw0   | contig       |      749 |                 708 |                1456 || supercraw0   | singlet      |      707 |                   1 |                 707 |+--------------+--------------+----------+---------------------+---------------------+4. TO DO:        4.1 readnames FOR assemblyreads TABLE    AS PART OF assemblyreadsassemblysequences.pl    4.2 ASSEMBLY SEQUENCES READ COVERAGE    ./assemblysequencesreadcoverage.pl -d funnybase105. CALCULATE DIVS    ./6. POPULATE collectionsequences AND collectionsequencesannotation./collectionsequences.pl -d funnybase10 -n supercraw0./collectionsequences.pl -d funnybase10./collectionsequencesannotation.pl -d funnybase107. DO PATHWAYS./collectionsequencespathways.pl -d funnybase10++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++Tue Jan 23 15:18:24 EST 2007DATABASE SIZESDATABASE        RECORDSSwissprot       188477refseq-dog      33740refseq-mouse    26916refseq-rat      24085refseq-human    29528+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++Mon Jan  8 14:06:07 EST 2007ANNOTATION USING HMMstitle: Hidden Markov Models (TIGR)authors: Michelle Gwinn, TIGR curatorsyear: 2003abstract: A Hidden Markov Model (HMM) is a statistical representation of patterns found in a data set. When using HMMs with proteins, the HMM is a statistical model of the patterns of the amino acids found in a multiple alignment of a set of proteins called the "seed". Seed proteins are chosen based on sequence similarity to each other. Seed members can be chosen with different levels of relationship to each other. They can be members of a superfamily (ex. ABC transporter, ATP-binding proteins), they can all share the same exact specific function (ex. biotin synthase) or they could share another type of relationship of intermediate specificity (ex. subfamily, domain). New proteins can be scored against the model generated from the seed according to how closely the patterns of amino acids in the new proteins match those in the seed. There are two scores assigned to the HMM which allow annotators to judge how well any new protein scores to the model. Proteins scoring above the "trusted cutoff" score can be assumed to be part of the group defined by the seed. Proteins scoring below the "noise cutoff" score can be assumed to NOT be a part of the group. Proteins scoring between the trusted and noise cutoffs may be part of the group but may not. One of the important features of HMMs is that they are built from a multiple alignment of protein sequences, not a pairwise alignment. This is significant, since shared similarity between many proteins is much more likely to indicate shared functional relationship than sequence similarity between just two proteins. The usefulness of an HMM is directly related to the amount of care that is taken in chosing the seed members, building a good multiple alignment of the seed members, assessing the level of specificity of the model, and choosing the cutoff scores coveragely.+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++Mon Jan  8 13:44:38 PST 2007EXTRACTED CYTOCHROME C RECORDS FROM KARENIA1 FOR TIM:funnybaseid	funnybaseaccession	funnybaseannotation	annotationsource	assemblyname	assemblynumber	assemblytype	sequencetype	sequencenumber	sequence	averagequalityuse karenia1;SELECTfunnybasesequences.funnybaseid, funnybasesequences.funnybaseaccession, funnybasesequences.funnybaseannotation, funnybasesequences.annotationsource, funnybasesequences.assemblyname, funnybasesequences.assemblynumber, funnybasesequences.assemblytype, funnybasesequences.sequencetype, funnybasesequences.sequencenumber, funnybasesequences.sequence, funnybasesequences.averagequalityFROM funnybasesequences, funnybasesequencesannotationWHERE funnybasesequences.funnybaseid=funnybasesequencesannotation.funnybaseid and funnybasesequencesannotation.targetannotation like '%cox1%'INTO OUTFILE '/private/tmp/karenia1.cox1.tsv';SELECTfunnybasesequences.funnybaseid, funnybasesequences.funnybaseaccession, funnybasesequences.funnybaseannotation, funnybasesequences.annotationsource, funnybasesequences.assemblyname, funnybasesequences.assemblynumber, funnybasesequences.assemblytype, funnybasesequences.sequencetype, funnybasesequences.sequencenumber, funnybasesequences.sequence, funnybasesequences.averagequalityFROM funnybasesequences, funnybasesequencesannotationWHERE funnybasesequences.funnybaseid=funnybasesequencesannotation.funnybaseid and funnybasesequencesannotation.targetannotation like '%cytochrome%'INTO OUTFILE '/private/tmp/karenia1.cytochrome.tsv';+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++Mon Jan  8 12:50:54 EST 2007GO MAPPINGShttp://www.geneontology.org/external2go/Parent Directory                             -   cog2go                  08-Jul-2005 01:10  7.2K  ec2go                   12-Dec-2006 04:10  258K  egad2go                 08-Jul-2005 01:10  3.7K  genprotec2go            08-Jul-2005 03:10   26K  hamap2go                12-Dec-2006 04:10  166K  interpro2go             12-Dec-2006 04:10  1.6M  metacyc2go              02-Jan-2007 20:40  336K  mips2go                 10-Jan-2006 08:40  109K  multifun2go             20-Dec-2005 07:10   51K  pfam2go                 12-Dec-2006 04:10  554K  prints2go               12-Dec-2006 04:10  309K  prodom2go               12-Dec-2006 04:10  124K  prosite2go              12-Dec-2006 04:10  256K  reactome2go             02-Jan-2007 20:40  172K  rfam2go                 08-May-2006 07:38   28K  smart2go                12-Dec-2006 04:10   56K  spkw2go                 12-Dec-2006 04:10   51K  tigr2go                 08-Jul-2005 03:10   22K  tigrfams2go             07-Dec-2006 13:10  486K  um-bbd_enzymeid2go      24-May-2006 07:07   37K  um-bbd_pathwayid2go     02-Jan-2007 20:40  9.0K  GenBank-to-SwissProt MAPPING DOWNLOADED TO ~/FUNNYBASE/dev/annotation/GOMapping between swissprot,refseq and locuslink ids:ftp://ftp.ebi.ac.uk/pub/databases/GO/goa/HUMAN/human.xrefs.gz."The Gene Ontology Annotation (GOA) Project: Implementation of GO in SWISS-PROT, TrEMBL, and InterPro". Published online before print March 12, 2003Evelyn Camon1,3,4, Michele Magrane1,3, Daniel Barrell1, David Binns1, Wolfgang Fleischmann1, Paul Kersey1, Nicola Mulder1, Tom Oinn1, John Maslen1, Anthony Cox2 and Rolf Apweiler1 Automatic GO Annotation of SWISS-PROT, TrEMBL, and InterProThe first phase of the GOA project involved the large-scale assignment of GO terms to SWISS-PROT and TrEMBL entries using electronic methods. This strategy was based on the use of existing properties of the entries including the presence of keywords and Enzyme Commission (EC) numbers. Mapping of InterPro entries to GO also allowed further associations of GO terms to entries to be made, based on the presence of InterPro cross-references in SWISS-PROT and TrEMBL. "Mapping" is used here to refer to the linking of various classification systems to GO terms, while the word "association" refers to a connection between a database object (which may represent a gene, transcript, or protein) and a GO term that describes the gene product. The electronic mappings described in detail below were used to generate associations in SWISS-PROT and TrEMBL.Mapping SWISS-PROT Keywords to GOSWISS-PROT and TrEMBL entries contain keywords that serve as a subject reference for each sequence and assist in the retrieval of specific categories of data from the database. Currently, SWISS-PROT maintains a controlled list of ~840 keywords, each with a definition to clarify its biological meaning and intended usage. This list is available at http://www.expasy.org/cgi-bin/keywlist.pl and is updated on a regular basis. Seventy-four percent of SWISS-PROT keywords have been manually mapped to a high-level GO term. Keywords that were not mapped include those that have multiple usages, have no equivalent GO term, or are beyond the scope of the GO project, such as keywords describing domains.To enable data transfer, an index file containing the SWISS-PROT keyword to GO mappings (spkw2go) is shared on the GO home page (http://www.geneontology.org/external2go/spkw2go). This is frequently updated with the latest version, helping users to keep track of changes for local use. During these updates, more specific GO mappings may be added and obsolete GO terms and SWISS-PROT keywords removed.During manual annotation of a SWISS-PROT entry, curators assign keywords based on literature and sequence analysis checks. Keywords are also added to TrEMBL entries during automatic annotation of the TrEMBL database (Apweiler 2001Go). This procedure utilizes a novel system of standardized transfer of annotation from well-characterized proteins in SWISS-PROT to unannotated TrEMBL entries (Fleischmann et al. 1999Go). Consequently, the accuracy of the association of GO terms to SWISS-PROT and TrEMBL entries based on the keywords in the entries is assured by the annotation quality standards already existing in SWISS-PROT. To associate GO terms to SWISS-PROT and TrEMBL entries, the spkw2go mapping is combined with a mapping of protein accession numbers to SWISS-PROT keywords. In-house annotation tools and browsers are updated automatically as the new data is loaded.The application of SWISS-PROT keywords in the electronic assignment of GO terms to gene products continues to be a large-scale success. As of November 2002, spkw2go has been used to generate over 1,023,969 GO associations with 376,845 SWISS-PROT and TrEMBL entries (see http://www.ebi.ac.uk/GOA/SPTR_release.html). It has also been used successfully by a number of external databases such as the Mouse Genome Database (MGD) (Hill et al. 2001Go).Mapping of EC Numbers to GOA second electronic strategy takes advantage of an existing mapping (ec2go) of GO terms from the molecular function ontology to the nomenclature of the EC as contained in the ENZYME database (Bairoch 2000Go). EC numbers are consistently annotated in SWISS-PROT and TrEMBL enzyme entries as part of the description line. To associate GO terms to the SWISS-PROT and TrEMBL data, the ec2go mapping available from the GO home page was updated and combined with a mapping of protein accession numbers to EC numbers. This strategy was very successful, generating 164,205 GO associations in 72,496 SWISS-PROT and TrEMBL proteins.Mapping of the InterPro Resource to GOInterPro is an integrated documentation resource for protein families, domains, and sites that combines the complementary efforts of the PROSITE (Falquet et al. 2002Go), PRINTS (Attwood et al. 2002Go), Pfam (Bateman et al. 2002Go), ProDom (Corpet et al. 2000Go), SMART (Letunic et al. 2002Go), and TIGRFAMs (Haft et al. 2001Go) databases. Individual signatures from the member databases, which describe the same protein family or domain, are grouped together into a single InterPro entry. Each entry provides comprehensive annotation describing a set of related proteins, some of which may have identical molecular functions, be involved in the same processes, and perform their function in the same cellular locations. Furthermore, each entry also contains a match list of the SWISS-PROT and TrEMBL proteins that hit the signatures in that entry. Mapping InterPro entries to GO terms thus provides an automatic means of assigning GO terms to the protein sequences that form the match table of a particular InterPro entry. An additional advantage is that multifunctional proteins can be mapped to multiple GO terms through associations with more than one InterPro entry.The assignment of GO terms to InterPro entries was performed manually by inspecting all available information. In each case, the abstracts and the annotation of proteins within the match lists were read and an appropriate GO term was mapped if it applied to the whole protein. Some entries could be mapped to very deep level (specific) GO terms, while entries describing wider families or common domains could only be mapped to higher level terms or could not be mapped at all. The associated GO term therefore applies to all proteins with true hits to all signatures in the InterPro entry. As of November 2002, the electronic application of these InterPro mappings has led to 1,333,215 GO associations with 442,293 SWISS-PROT and TrEMBL proteins. The integrity of the InterPro to GO mappings is maintained by running regular sanity checks on the data. These checks include searching for mappings from secondary or deleted InterPro accession numbers and mappings to obsolete or nonexistent GO terms. The reports are manually verified and coverageed.For each associated term, the name of the term and GO accession number is given, and these are available in InterPro entries directly from the database at http://www.ebi.ac.uk/interpro/ (Fig. 1). A file listing InterPro entries and their corresponding GO terms is also available from the EBI FTP site at ftp://ftp.ebi.ac.uk/pub/databases/interpro/interpro2go and, on the GO home page at http://www.geneontology.org/interpro2go. InterPro includes a sequence search facility that allows users to search a sequence against the database and to retrieve all InterPro matches for that sequence. As well as an SRS-based version, there is also a stand-alone Perl-based package available for local installation that returns GO terms as part of the results.+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++BLAST HIT STATISTICS FOR DOUG:Fri Dec 15 00:19:52 EST 2006MSG: DougCC: MargieHi Doug,I've completed the rerun of overall E-value distributions for funnybase9. Here's the results of both the analyses (ordinal and overall) using 10 bars and 20 bars:http://genomics.rsmas.miami.edu/graph/funnybase9.funnybaseblast.bins10.svghttp://genomics.rsmas.miami.edu/graph/funnybase9.funnybaseblast.bins20.svgThe 'ordinal distributions' are the distributions of E-value differences between the nth and mth best hit of all sequences belonging to that particular bar (e.g., number of sequences with 0-29 BLAST hits)The 'overall distributions' are the simple distribution of E-values in all hits of all sequences belonging to that particular bar.Here are the results of the chi-squared test for identical distributions:http://genomics.rsmas.miami.edu/graph/funnybase9.funnybaseblast.ordinal.bins10.chisquared.htmlhttp://genomics.rsmas.miami.edu/graph/funnybase9.funnybaseblast.ordinal.bins20.chisquared.htmlhttp://genomics.rsmas.miami.edu/graph/funnybase9.funnybaseblast.overall.bins10.chisquared.htmlhttp://genomics.rsmas.miami.edu/graph/funnybase9.funnybaseblast.overall.bins20.chisquared.htmlIt shows that, for all but the most extreme bars (with the highest number of hits), both the overall E-value distributions and the ordinal E-value difference distributions are significantly different between bars.For visual clarity, I've used 100 bars in the overall distribution subgraphs, whereas with the ordinal distribution graphs, I've used the same number of bars as in the main graph (i.e., 10 or 20). I tried using 100 bars for the main graph but that left too many empty bars, making the chi-squared test inappropriate.I'll do the quality distribution for the unannotated genes tomorrow and estimate cutoffs to arrive at 6,000 and 8,000 genes in total (including the 4,400 annotated genes) for the microarrays.In the meantime, I've also managed to do an NFS mount which allows us to access the data on the cluster directly on genomics, which is a major step towards enabling 'live' running of cluster jobs from the website. It involved a lot of sniffing to find an undocumented blockage of NFS sharing (turned out to be a firewall issue and inactive NFS daemons on genomics) and reconfiguring the NFS export setup on gems. I've got to reconfigure the cluster again, putting all the data and apps on the large RAID disc. Then I'll test job submission from genomics and hopefully get iprscan up and running in the next few days.Stuart.+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++READ ANNOTATION FILES FOR JEFF (CC: DOUG, MARGIE)Tue Dec  5 10:11:02 EST 2006FILES PLACED IN DOWNLOAD FOLDER:http://129.171.101.233/downloads/funnybase9.annotated.tsvhttp://129.171.101.233/downloads/funnybase9.annotated.reads.tsvhttp://129.171.101.233/downloads/funnybase9.annotated.read.sequences.tsvGET READ NAMES OF ANNOTATED SEQUENCES:=====================================select    funnybasesequences.funnybaseid,    funnybasesequencesannotation.targetannotation,    funnybasesequencesannotation.hitevalueexp,    funnybasesequencesannotation.hitevaluedec,    numberreads,    readnamesfrom funnybasesequences, funnybasesequencesannotation where funnybasesequences.funnybaseid=funnybasesequencesannotation.funnybaseid into outfile '/private/tmp/funnybase9.annotated.tsv';>>> Query OK, 13291 rows affected (0.33 sec)sudo mv /private/tmp/funnybase9.annotated.tsv ~/FUNNYBASE/pipeline/funnybase9/edit_dir/cp ~/FUNNYBASE/pipeline/funnybase9/edit_dir/funnybase9.annotated.tsv /var/www/html/downloadsemacs  /var/www/html/downloads/funnybase9.annotated.tsvHEADER FOR OUTPUT FILE:funnybaseid	funnybaseannotation	hitevalueexp	hitevaluedec	numberreads	readnamesGET READS (EXPERIMENT, PLATE, WELL) OF ANNOTATED SEQUENCES:=========================================================select    funnybasesequences.funnybaseid,    funnybasesequencesannotation.targetannotation,    funnybasesequencesannotation.hitevalueexp,    funnybasesequencesannotation.hitevaluedec,    assemblyreads.*from assemblyreads, funnybasesequences, funnybasesequencesannotationwhere funnybasesequences.assemblyname=assemblyreads.assemblynameand funnybasesequences.sequencetype=assemblyreads.sequencetypeand funnybasesequences.sequencenumber=assemblyreads.sequencenumberand funnybasesequences.funnybaseid=funnybasesequencesannotation.funnybaseidorder by funnybaseidinto outfile '/private/tmp/funnybase9.annotated.reads.tsv';>>> Query OK, 18579 rows affected (5 min 52.12 sec)sudo mv /private/tmp/funnybase9.annotated.reads.tsv ~/FUNNYBASE/pipeline/funnybase9/edit_dir/cp ~/FUNNYBASE/pipeline/funnybase9/edit_dir/funnybase9.annotated.reads.tsv /var/www/html/downloadsemacs  /var/www/html/downloads/funnybase9.annotated.reads.tsvHEADER FOR OUTPUT FILE:funnybaseid	funnybaseannotation	hitevalueexp	hitevaluedec	datetime	assemblyname	assemblynumber	assemblytype	sequencenumber	sequencetype	experiment	plate	well	sequencestart	sequencestop	readstart	readstop	readorientationGET READ NAMES AND SEQUENCES FOR ANNOATED SEQUENCES:===================================================select    funnybasesequences.funnybaseid,    funnybasesequencesannotation.targetannotation,    funnybasesequencesannotation.hitevalueexp,    funnybasesequencesannotation.hitevaluedec,    assemblyreads.*,    reads.*from assemblyreads, funnybasesequences, funnybasesequencesannotation, readswhere funnybasesequences.assemblyname=assemblyreads.assemblynameand funnybasesequences.sequencetype=assemblyreads.sequencetypeand funnybasesequences.sequencenumber=assemblyreads.sequencenumberand funnybasesequences.funnybaseid=funnybasesequencesannotation.funnybaseidand assemblyreads.experiment=reads.experimentand assemblyreads.plate=reads.plateand assemblyreads.well=reads.wellorder by funnybaseidinto outfile '/private/tmp/funnybase9.annotated.read.sequences.tsv';sudo mv /private/tmp/funnybase9.annotated.read.sequences.tsv ~/FUNNYBASE/pipeline/funnybase9/edit_dir/cp ~/FUNNYBASE/pipeline/funnybase9/edit_dir/funnybase9.annotated.read.sequences.tsv /var/www/html/downloadsemacs  /var/www/html/downloads/funnybase9.annotated.read.sequences.tsvHEADER FOR OUTPUT FILE:funnybaseid	funnybaseannotation	hitevalueexp	hitevaluedec	datetime	assemblyname	assemblynumber	assemblytype	sequencenumber	sequencetype			experiment	plate	well	sequencestart	sequencestop	readstart	readstop	readorientation	experiment	plate	well	readsequence	readquality	averagereadquality	screenedsequence	trimmedsequence	trimmedquality	averagetrimmedquality+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++Wed Nov 29 20:23:55 EST 2006select reads.experiment, reads.plate, reads.well FROM reads, assemblyreadsWHERE reads.experiment=assemblyreads.experimentAND reads.plate = assemblyreads.plateAND reads.well = assemblyreads.wellLIMIT 1;+------------+-------+------+| experiment | plate | well |+------------+-------+------+|        125 |    38 | D07  |+------------+-------+------+select reads.experiment, reads.plate, reads.well FROM reads, assemblyreadsWHERE reads.experiment !=assemblyreads.experimentAND reads.plate != assemblyreads.plateAND reads.well != assemblyreads.wellLIMIT 1;LIMIT 1;select reads.experiment, reads.plate, reads.well FROM reads, assemblyreads    -> WHERE reads.experiment !=assemblyreads.experiment    -> AND reads.plate != assemblyreads.plate    -> AND reads.well != assemblyreads.well    -> LIMIT 1;+------------+-------+------+| experiment | plate | well |+------------+-------+------+|          1 |     1 | A01  |+------------+-------+------+1 row in set (0.07 sec)SELECT DISTINCT experiment from assemblyreads;select experiment, count(*) from assemblyreads group by experiment;+------------+----------+| experiment | count(*) |+------------+----------+|          1 |     1882 ||        123 |      541 ||        124 |      254 ||        125 |     1072 ||        126 |     4490 ||        130 |     5125 ||        151 |      787 ||        152 |      787 ||        153 |      883 ||        154 |      626 ||        155 |      789 ||        156 |      801 ||        157 |      816 ||        158 |      763 ||        159 |    10074 ||        189 |       14 ||        199 |       26 ||        999 |       22 |+------------+----------+ select experiment, count(*) from assemblyreads where assemblyname='supercraw0' group by experiment;+------------+----------+| experiment | count(*) |+------------+----------+|          1 |     1882 ||        123 |      541 ||        124 |      254 ||        125 |     1072 ||        189 |       14 ||        199 |       26 ||        999 |       22 |+------------+----------+select count(*) from assemblyreads where assemblyname='supercraw0';+----------+| count(*) |+----------+|     3811 |+----------+select sum(numberreads) from assemblysequences where assemblyname='supercraw0';+------------------+| sum(numberreads) |+------------------+|             3811 |+------------------+select count(*) from assemblyreads where assemblyname='funnybase9';+----------+| count(*) |+----------+|    25941 |+----------+select sum(numberreads) from assemblysequences where assemblyname='funnybase9';+------------------+| sum(numberreads) |+------------------+|            25941 |+------------------+* Total reads matching assembly readsselect count(reads.well) from reads, assemblyreads where reads.experiment=assemblyreads.experiment and reads.plate = assemblyreads.plate and reads.well = assemblyreads.well;+----------+| count(*) |+----------+|    23899 |+----------+select count(*) from reads, assemblyreads where reads.experiment=assemblyreads.experiment and reads.plate = assemblyreads.plate and reads.well = assemblyreads.well;+----------+| count(*) |+----------+|    23899 |+----------++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++Tue Nov 28 09:18:07 EST 2006MSG: DougCC: Margie, meHi Doug,Here are the stats from funnybase9 (below) and a graph of the distribution of reads per contig (attached).Please note, the number on the right hand side of each title is from the GARSA Trypanosome vivax collection, just for comparison.I'll do the distribution of annotation hits after our meeting.I'm on my way in - see you in about 15 mins.Stuart.STATS (-> RESULTS ARE FROM GARSA Trypanosome vivax)+++++++++++++++++++++++++++++++++++++++++++++++++++* Number of reads:  	1086SELECT COUNT(*) FROM READS68094 reads* Total number of reads included in assemblySELECT COUNT(*) FROM assemblyreads;29071 reads* Total reads matching assembly readsselect count(reads.well) from reads, assemblyreads where reads.experiment=assemblyreads.experiment and reads.plate = assemblyreads.plate and reads.well = assemblyreads.well;23218 reads* Nucleotide amount Untrimmed/Unclean (positive size) reads:  	845575 bpSELECT SUM( LENGTH(readsequence) ) FROM READS50,993,175 bp* Average Nucleotide amount Untrimmed/Unclean (positive size) reads:  	845575 bpSELECT AVG( LENGTH(readsequence) ) FROM READS749 bp* Nucleotide amount Trimmed/Clean (positive size) reads:  	199495 bp or 199.50 KbSELECT SUM( LENGTH(trimmedsequence) ) FROM READS19,435,231 bp* Average Nucleotide medium Trimmed/Clean (positive size) reads:  	184 bp or 0.18 KbSELECT AVG( LENGTH(trimmedsequence) ) FROM READS;285 bp* Total number of reads included in assemblyselect count(reads.well) from reads, assemblyreads where reads.experiment=assemblyreads.experiment and reads.plate = assemblyreads.plate and reads.well = assemblyreads.well;23218 reads`records /Users/young/FUNNYBASE/pipeline/funnybase9/edit_dir/funnybase9.fasta`;34810 records* Total singlets assembled from funnybase9:`records /Users/young/FUNNYBASE/pipeline/funnybase9/edit_dir/funnybase9.fasta.screen.cap.singlets`;24187 singlets* Total contigs assembled from funnybase9:`records /Users/young/FUNNYBASE/pipeline/funnybase9/edit_dir/funnybase9.fasta.screen.cap.contigs`;1779 contigs* Total singlets assembled from supercraw0:`records /Users/young/FUNNYBASE/pipeline/supercraw0/annotation/comparemultiple.supercraw0-funnybase7.extract.singlets`;707 singlets* Total contigs assembled from supercraw0:`records /Users/young/FUNNYBASE/pipeline/supercraw0/annotation/comparemultiple.supercraw0-funnybase7.extract.contigs`;749 contigs* Total assembled sequences added to database:SELECT COUNT(*) FROM assemblysequences;23302 sequences* Total length of database clusters:) 	99626 bpSELECT SUM( LENGTH(sequence) ) FROM funnybasesequences;11,864,450 bp* Average Length of clusters:  	301 bpSELECT AVG( LENGTH(sequence) ) FROM funnybasesequences;509 bp* Total contigs added to database:SELECT COUNT(*) FROM assemblysequences WHERE sequencetype='contig';2507 contigs * Total length of contigs:SELECT SUM( LENGTH(sequence) ) FROM funnybasesequences WHERE sequencetype='contig';2,391,132 bp * Average Length of contigs:SELECT AVG( LENGTH(sequence) ) FROM funnybasesequences WHERE sequencetype='contig';954 bp* Total singlets added to database:SELECT COUNT(*) FROM assemblysequences WHERE sequencetype='singlet';20795 singlets * Total length of contigs:SELECT SUM( LENGTH(sequence) ) FROM funnybasesequences WHERE sequencetype='singlet';9,473,318 bp* Average Length of contigs:SELECT AVG( LENGTH(sequence) ) FROM funnybasesequences WHERE sequencetype='singlet';456 bp* Total annotated assembled sequences:SELECT COUNT(distinct funnybaseid, funnybaseaccession) FROM funnybasesequencesannotation WHERE targetannotation!='';13293 sequences* Total annotated contigs:SELECT COUNT(funnybasesequences.funnybaseid) FROM funnybasesequences, funnybasesequencesannotation WHERE targetannotation!='' AND funnybasesequences.funnybaseid=funnybasesequencesannotation.funnybaseid AND funnybasesequences.sequencetype='contig'; 2021 contigs* Total annotated singlets:SELECT COUNT(funnybasesequences.funnybaseid) FROM funnybasesequences, funnybasesequencesannotation WHERE targetannotation!='' AND funnybasesequences.funnybaseid=funnybasesequencesannotation.funnybaseid AND funnybasesequences.sequencetype='singlet';11270 singlets+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++Mon Nov 27 16:41:50 EST 2006DROPPED TABLE assemblysequences AND RERAN assemblyreadsassemblysequences.pl TO CORRECTLYADD readnames AND numberreads. ADJUSTED assemblyreadsassemblysequences.pl AND PRECURSORAPPLICATION comparemultipleextractassemblysequences:./assemblyreadsassemblysequences.pl -d supercraw0./funnybasesequences.pl -d supercraw0./assemblyreadsassemblysequences.pl -d funnybase7./funnybasesequences.pl -d funnybase7use supercraw0;select sequencetype , count(*), max(sequencenumber) from assemblysequences group by sequencetype ;+--------------+----------+---------------------+| sequencetype | count(*) | max(sequencenumber) |+--------------+----------+---------------------+| contig       |     2828 |               12741 || singlet      |     9913 |                9913 |+--------------+----------+---------------------+select sequencetype , count(*), max(sequencenumber) from assemblyreads group by sequencetype ;+--------------+----------+---------------------+| sequencetype | count(*) | max(sequencenumber) |+--------------+----------+---------------------+| contig       |    10132 |               12741 || singlet      |     9913 |                9913 |+--------------+----------+---------------------+select count(*) from assemblyreads;+----------+| count(*) |+----------+|    20045 |+----------+select count(*) from assemblysequences;+----------+| count(*) |+----------+|    12741 |+----------+use funnybase7;    select sequencetype , count(*), max(sequencenumber) from assemblysequences group by sequencetype ;+--------------+----------+---------------------+| sequencetype | count(*) | max(sequencenumber) |+--------------+----------+---------------------+| contig       |      587 |               18161 || singlet      |    17574 |               17574 |+--------------+----------+---------------------+select sequencetype , count(*), max(sequencenumber) from assemblyreads group by sequencetype ;+--------------+----------+---------------------+| sequencetype | count(*) | max(sequencenumber) |+--------------+----------+---------------------+| contig       |     1723 |               18161 || singlet      |    17574 |               17574 |+--------------+----------+---------------------+EXTRACT SEQUENCES AND INSERT INTO funnybase9 ASSEMBLY SEQUENCES:./comparemultipleextractassemblysequences.pl -d supercraw0 -m funnybase7 ./assemblyreadsassemblysequences.pl -d funnybase9 -n supercraw0 -f /Users/young/FUNNYBASE/pipeline/supercraw0/annotation/comparemultiple.supercraw0-funnybase7.extract.contigs -wINSERT funnybase9 CONTIGS AND SINGLETS INTO funnybase9 ASSEMBLY SEQUENCES WITH QUALITY CUTOFF = 10:./assemblyreadsassemblysequences.pl -d funnybase9 -q 10  select assemblyname, sequencetype , count(*), min(sequencenumber) from assemblysequences group by assemblyname, sequencetype ;+--------------+--------------+----------+---------------------+| assemblyname | sequencetype | count(*) | min(sequencenumber) |+--------------+--------------+----------+---------------------+| funnybase9   | contig       |     1758 |               21548 || funnybase9   | singlet      |    20088 |                1460 || supercraw0   | contig       |      749 |                 708 || supercraw0   | singlet      |      707 |                   1 |+--------------+--------------+----------+---------------------+    LOAD FUNNYBASE SEQUENCES:./funnybasesequences.pl -d funnybase9 -n supercraw0./funnybasesequences.pl -d funnybase9    STATS (-> RESULTS ARE FROM GARSA Trypanosome vivax)+++++++++++++++++++++++++++++++++++++++++++++++++++* Number of reads:  	1086SELECT COUNT(*) FROM READS68094 reads* Total number of reads included in assemblySELECT COUNT(*) FROM assemblyreads;29071 reads* Total reads matching assembly readsselect count(reads.well) from reads, assemblyreads where reads.experiment=assemblyreads.experiment and reads.plate = assemblyreads.plate and reads.well = assemblyreads.well;23218 readsselect count(reads.well) from reads, assemblyreads where reads.experiment!=assemblyreads.experiment and reads.plate != assemblyreads.plate and reads.well != assemblyreads.well;* Nucleotide amount Untrimmed/Unclean (positive size) reads:  	845575 bpSELECT SUM( LENGTH(readsequence) ) FROM READS50,993,175 bp* Average Nucleotide amount Untrimmed/Unclean (positive size) reads:  	845575 bpSELECT AVG( LENGTH(readsequence) ) FROM READS749 bp* Nucleotide amount Trimmed/Clean (positive size) reads:  	199495 bp or 199.50 KbSELECT SUM( LENGTH(trimmedsequence) ) FROM READS19,435,231 bp* Average Nucleotide medium Trimmed/Clean (positive size) reads:  	184 bp or 0.18 KbSELECT AVG( LENGTH(trimmedsequence) ) FROM READS;285 bp* Total number of reads included in assemblyselect count(reads.well) from reads, assemblyreads where reads.experiment=assemblyreads.experiment and reads.plate = assemblyreads.plate and reads.well = assemblyreads.well;23218 reads`records /Users/young/FUNNYBASE/pipeline/funnybase9/edit_dir/funnybase9.fasta`;34810 records* Total number of reads discarded with positive Trim.Len.:  	503     View List* Total number of reads with negative Trim.Len.:  	128     View List* Total singlets assembled from funnybase9:`records /Users/young/FUNNYBASE/pipeline/funnybase9/edit_dir/funnybase9.fasta.screen.cap.singlets`;24187 singlets* Total contigs assembled from funnybase9:`records /Users/young/FUNNYBASE/pipeline/funnybase9/edit_dir/funnybase9.fasta.screen.cap.contigs`;1779 contigs* Total singlets assembled from supercraw0:`records /Users/young/FUNNYBASE/pipeline/supercraw0/annotation/comparemultiple.supercraw0-funnybase7.extract.singlets`;707 singlets* Total contigs assembled from supercraw0:`records /Users/young/FUNNYBASE/pipeline/supercraw0/annotation/comparemultiple.supercraw0-funnybase7.extract.contigs`;749 contigs* Total assembled sequences added to database:SELECT COUNT(*) FROM assemblysequences;23302 sequencesSELECT COUNT(*) FROM funnybasesequences;23301 sequences* Total length of database clusters:) 	99626 bpSELECT SUM( LENGTH(sequence) ) FROM funnybasesequences;11,864,450 bp* Average Length of clusters:  	301 bpSELECT AVG( LENGTH(sequence) ) FROM funnybasesequences;509 bp* Total contigs added to database:SELECT COUNT(*) FROM assemblysequences WHERE sequencetype='contig';2507 contigs * Total length of contigs:SELECT SUM( LENGTH(sequence) ) FROM funnybasesequences WHERE sequencetype='contig';2,391,132 bp * Average Length of contigs:SELECT AVG( LENGTH(sequence) ) FROM funnybasesequences WHERE sequencetype='contig';954 bp* Total singlets added to database:SELECT COUNT(*) FROM assemblysequences WHERE sequencetype='singlet';20795 singlets * Total length of contigs:SELECT SUM( LENGTH(sequence) ) FROM funnybasesequences WHERE sequencetype='singlet';9,473,318 bp* Average Length of contigs:SELECT AVG( LENGTH(sequence) ) FROM funnybasesequences WHERE sequencetype='singlet';456 bp* Total annotated assembled sequences:SELECT COUNT(distinct funnybaseid, funnybaseaccession) FROM funnybasesequencesannotation WHERE targetannotation!='';13293 sequences* Total annotated contigs:SELECT COUNT(funnybasesequences.funnybaseid) FROM funnybasesequences, funnybasesequencesannotation WHERE targetannotation!='' AND funnybasesequences.funnybaseid=funnybasesequencesannotation.funnybaseid AND funnybasesequences.sequencetype='contig'; 2021 contigs* Total annotated singlets:SELECT COUNT(funnybasesequences.funnybaseid) FROM funnybasesequences, funnybasesequencesannotation WHERE targetannotation!='' AND funnybasesequences.funnybaseid=funnybasesequencesannotation.funnybaseid AND funnybasesequences.sequencetype='singlet';11270 singlets###* Number of clusters with negative Length:  	1###* Number of Blast finished:  	33###* Number of Clusters with Blast Hits:  	0###* Clusters with No Blast Hits:  	332    View List###* Percent of clusters with No Blast Hits:  	100 %###* Clusters with Interpro Hits:  	31     View List###* Percent of clusters with Interpro Hits:  	9 %###* Clusters with No Interpro Hits:  	301###* Percent of clusters with No Interpro Hits:  	91 %		View Graphics+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++Wed Nov 22 16:16:09 EST 2006DIAGNOSIS:        THE assemblyreads AND assemblysequences WERE BECOMING OUT OF SYNC WITH RESPECT TO sequencenumbers        SOLUTION:1. CREATED assemblyreadsassemblysequences.pl WHICH DOES assemblyreads AT THE SAME TIME AS assemblysequences, AND SO SUPERCEDES assemblysequences.pl AND assemblyreads.pl:    ./assemblyreadsassemblysequences.pl -d supercraw0    use supercraw0;    select sequencetype , count(*), max(sequencenumber) from assemblysequences group by sequencetype ;    +--------------+----------+---------------------+    | sequencetype | count(*) | max(sequencenumber) |    +--------------+----------+---------------------+    | contig       |     2828 |               12741 |    | singlet      |     9913 |                9913 |    +--------------+----------+---------------------+    select sequencetype , count(*), max(sequencenumber) from assemblyreads group by sequencetype ;    +--------------+----------+---------------------+    | sequencetype | count(*) | max(sequencenumber) |    +--------------+----------+---------------------+    | contig       |    20264 |               12741 |    | singlet      |    19826 |                9913 |    +--------------+----------+---------------------+    select count(*) from assemblyreads;    +----------+    | count(*) |    +----------+    |    40090 |    +----------+        select count(*) from assemblysequences;    +----------+    | count(*) |    +----------+    |    12741 |    +----------+2. LOADED ASSEMBLY SEQUENCES FROM supercraw0 VS funnybase9 COMPARISON INTO funnybase9:./assemblyreadsassemblysequences.pl -d funnybase9 -n supercraw0 -f /Users/young/FUNNYBASE/pipeline/supercraw0/annotation/comparemultiple.supercraw0-funnybase7.extract.contigs -w(INSTEAD OF ./assemblysequences.pl -d funnybase9 -n supercraw0 -f /Users/young/FUNNYBASE/pipeline/supercraw0/annotation/comparemultiple.supercraw0-funnybase7.extract.contigs -w)3. RAN comparemultipleassemblyreads TO GET assemblyreads FOR ASSEMBLY supercraw0 INSIDE DATABASE funnybase9:./comparemultipleassemblyreads.pl -d funnybase9 -n supercraw0select assemblyname, sequencetype , count(*), min(sequencenumber) from assemblyreads group by assemblyname, sequencetype ;+--------------+--------------+----------+---------------------+| assemblyname | sequencetype | count(*) | min(sequencenumber) |+--------------+--------------+----------+---------------------+| supercraw0   | contig       |     2420 |                 711 || supercraw0   | singlet      |     1420 |                   1 |+--------------+--------------+----------+---------------------+4. RAN assemblyreadsassemblysequences ON funnybase9 WITH QUALITY CUTOFF = 10:     ./assemblyreadsassemblysequences.pl -d funnybase9 -q 10   select assemblyname, sequencetype , count(*), min(sequencenumber) from assemblyreads group by assemblyname, sequencetype ;+--------------+--------------+----------+---------------------+| assemblyname | sequencetype | count(*) | min(sequencenumber) |+--------------+--------------+----------+---------------------+| funnybase9   | contig       |     1723 |               19034 || funnybase9   | singlet      |    17574 |                1460 || supercraw0   | contig       |     2420 |                 711 || supercraw0   | singlet      |     1420 |                   1 |+--------------+--------------+----------+---------------------+select assemblyname, sequencetype , count(*), min(sequencenumber) from assemblysequences group by assemblyname, sequencetype ;+--------------+--------------+----------+---------------------+| assemblyname | sequencetype | count(*) | min(sequencenumber) |+--------------+--------------+----------+---------------------+| funnybase9   | contig       |     1758 |               21548 || funnybase9   | singlet      |    20088 |                1460 || supercraw0   | contig       |      749 |                 711 || supercraw0   | singlet      |      710 |                   1 |+--------------+--------------+----------+---------------------+COMPARED TO QUALITY CUTOFF = 20:select assemblyname, sequencetype , count(*), min(sequencenumber) from assemblysequences group by assemblyname, sequencetype ;+--------------+--------------+----------+---------------------+| assemblyname | sequencetype | count(*) | min(sequencenumber) |+--------------+--------------+----------+---------------------+| funnybase9   | contig       |      587 |               19034 || funnybase9   | singlet      |    17574 |                1460 || supercraw0   | contig       |      749 |                 711 || supercraw0   | singlet      |      710 |                   1 |+--------------+--------------+----------+---------------------+5. CHECKED assemblysequences CORRESPOND TO funnybasesequences:    select funnybasesequences.*, assemblysequences.* from funnybasesequences, assemblysequences where funnybasesequences.sequencenumber = assemblysequences.sequencenumber and assemblysequences.sequencenumber = 1\G    select funnybasesequences.*, assemblysequences.* from funnybasesequences, assemblysequences where funnybasesequences.sequencenumber = assemblysequences.sequencenumber and assemblysequences.sequencenumber = 711\G    select funnybasesequences.*, assemblysequences.* from funnybasesequences, assemblysequences where funnybasesequences.sequencenumber = assemblysequences.sequencenumber and assemblysequences.sequencenumber = 1460\G    select funnybasesequences.*, assemblysequences.* from funnybasesequences, assemblysequences where funnybasesequences.sequencenumber = assemblysequences.sequencenumber and assemblysequences.sequencenumber = 19034\G    OKAY - SEQUENCES ARE IDENTICAL!            select funnybasesequences.*, assemblysequences.* from funnybasesequences, assemblysequences where funnybasesequences.sequencenumber = assemblysequences.sequencenumber and assemblysequences.assemblysequence!=funnybasesequences.sequences\G    select count(*) from funnybasesequences, assemblysequences where funnybasesequences.sequencenumber = assemblysequences.sequencenumber and assemblysequences.assemblysequence!=funnybasesequences.sequence;6. INCORPORATED readnames AND readnumber INTO assemblyreadsassemblysequences.pl:+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++Mon Nov 20 13:29:41 EST 2006LOADED ASSEMBLYSEQUENCES FROM UNIQUE SEQUENCES OF supercraw0 THAT DON'T SHARE ANNOTATION WITH funnybase7:./assemblysequences.pl -d funnybase9 -n supercraw0 -f /Users/young/FUNNYBASE/pipeline/supercraw0/annotation/comparemultiple.supercraw0-funnybase7.extract.contigs -wselect assemblyname, assemblynumber, sequencetype, count(*) from assemblysequences group by assemblyname , sequencetype;+--------------+----------------+--------------+----------+| assemblyname | assemblynumber | sequencetype | count(*) |+--------------+----------------+--------------+----------+| supercraw0   |              1 | contig       |      749 || supercraw0   |              1 | singlet      |      710 |+--------------+----------------+--------------+----------+LOADED ASSEMBLY SEQUENCES FROM supercraw9:./assemblysequences.pl -d funnybase9 -q 10select assemblyname, assemblynumber, sequencetype, count(*) from assemblysequences group by assemblyname , sequencetype;+--------------+----------------+--------------+----------+| assemblyname | assemblynumber | sequencetype | count(*) |+--------------+----------------+--------------+----------+| funnybase9   |              2 | contig       |     1758 || funnybase9   |              2 | singlet      |    20088 || supercraw0   |              1 | contig       |      749 || supercraw0   |              1 | singlet      |      710 |+--------------+----------------+--------------+----------+INITIALISED funnybasesequences:./funnybasesequences.pl -d funnybase9 -n supercraw0./funnybasesequences.pl -d funnybase9select assemblyname, assemblynumber, sequencetype, count(*) from funnybasesequences group by assemblyname , sequencetype;select assemblyname, assemblynumber, sequencetype, count(*) from funnybasesequences group by assemblyname , sequencetype;+--------------+----------------+--------------+----------+| assemblyname | assemblynumber | sequencetype | count(*) |+--------------+----------------+--------------+----------+| funnybase9   |              2 | contig       |     1758 || funnybase9   |              2 | singlet      |    20088 || supercraw0   |              1 | contig       |      749 || supercraw0   |              1 | singlet      |      710 |+--------------+----------------+--------------+----------+NOW NEED TO POPULATE funnybase9.assemblyreads USING funnybase9.assemblysequences FROM supercraw0 ASSEMBLY (i.e., assemblyname='supercraw0'):(NB: CAN'T USE THE /Users/young/FUNNYBASE/pipeline/supercraw0/annotation/comparemultiple.supercraw0-funnybase7.extract.contigs FILE AS USED WITH assemblysequences.pl AS THIS DOESN'T HAVE THE READ INFORMATION FOR THE CONTIGS.. ./assemblysequences.pl -d funnybase9 -n supercraw0 -f /Users/young/FUNNYBASE/pipeline/supercraw0/annotation/comparemultiple.supercraw0-funnybase7.extract.contigs -w )APPLICATION                                                       SOURCE --> TARGET./supercrawreads.pl -d supercraw0               super_craw5.master_seq2 --> supercraw0.reads./assemblyreads.pl -d supercraw0                supercraw0 contigs/singlets  --> supercraw0.assemblyreads./assemblyreads.pl -d funnybase9                funnybase9 contigs/singlets  --> funnybase9.assemblyreads./assemblysequences.pl -d funnybase9            funnybase9 contigs/singlets  --> funnybase9.assemblysequences./comparemultipleassemblysequences.pl -d funnybase9 -n supercraw0 -f /Users/young/FUNNYBASE/pipeline/supercraw0/annotation/comparemultiple.supercraw0-funnybase7.extract.contigs                                                1. supercraw vs funnybase7 comparison --> funnybase9.assemblysequences                                                2. CREATES A MAPPING TABLE:    CREATE TABLE IF NOT EXISTS sequencenumbersmapping (        database0                   VARCHAR(20) NOT NULL,       # funnybase9    assemblyname0                VARCHAR(20) NOT NULL,       # supercraw0    sequencenumber0              INT(11)     NOT NULL,       # 1, 2, 3...            database1                    VARCHAR(20) NOT NULL,      # supercraw0    assemblyname1                VARCHAR(20) NOT NULL,      # supercraw0    sequencenumber1              INT(11)     NOT NULL,      # 1, 2, 3...    sequencetype                VARCHAR(20) NOT NULL,       # 'contig', 'singlet'    PRIMARY KEY (database0, assemblyname0, sequencenumber1, database1, assemblyname1, sequencenumber1, sequencetype))1. LOAD supercraw0.reads.tsv (PRODUCED BY reads.pl -d supercraw0) INTO funnybase9use funnybase9;load data infile '/Users/young/FUNNYBASE/pipeline/supercraw0/edit_dir/supercraw0.reads.tsv' into table reads;Query OK, 33284 rows affected (2.28 sec)Records: 33284  Deleted: 0  Skipped: 0  Warnings: 51363BEFORE:select experiment, count(*) from reads group by experiment;+------------+----------+| experiment | count(*) |+------------+----------+|        126 |     5947 ||        130 |     8995 ||        151 |      959 ||        152 |      959 ||        153 |     1152 ||        154 |      768 ||        155 |      942 ||        156 |      954 ||        157 |      945 ||        158 |      956 ||        159 |    12233 |+------------+----------+11 rows in set (0.04 sec)AFTER:select experiment, count(*) from reads group by experiment;+------------+----------+| experiment | count(*) |+------------+----------+|          1 |    14100 ||        123 |     3473 ||        124 |     1152 ||        125 |    14096 ||        126 |     5947 ||        130 |     8995 ||        151 |      959 ||        152 |      959 ||        153 |     1152 ||        154 |      768 ||        155 |      942 ||        156 |      954 ||        157 |      945 ||        158 |      956 ||        159 |    12233 ||        189 |       89 ||        190 |      182 ||        199 |       96 ||        999 |       96 |+------------+----------+19 rows in set (0.07 sec)2. USE THIS SCRIPT TO DO:comparemultipleassemblyreads.pl -d funnybase9 -n supercraw0RECAP OF COMPARISON PROCESS:1. COMPARE supercraw0 WITH supercraw5 AND funnybase7:./comparemultiplefunnybaseannotation.pl -d supercraw0 -t supercraw5,funnybase7     INPUT: funnybasesequencesannotation OF EACH DATABASE    OUTPUT: comparemultipleannotatiion OF -d DATABASE            comparemultiple.database0-database1.tsv FILE2. EXTRACT SEQUENCES FROM COMPARISON:    ./comparemultipleextractsequences.pl -d supercraw0 -m funnybase7    INPUT:  comparemultipleannotation OF -d DATABASE    OUTPUT: .extract.contigs/.extract.singlets FILE IN -d DATABASE annotation DIRECTORY            em /Users/young/FUNNYBASE/pipeline/supercraw0/annotation/comparemultiple.supercraw0-funnybase7.extract.singlets        10292.1 sequencetype:singlet        AATGAGTCCTATGCTATCGGCCGAG...        >9508.1 sequencetype:singlet        GGAGGATCGGCACGAGGAAAAGGCC...        >11158.1 sequencetype:singlet        GAAATCGGGCCGAGGCATGAGCTCG...        em /Users/young/FUNNYBASE/pipeline/supercraw0/annotation/comparemultiple.supercraw0-funnybase7.extract.contigs        >2.1 sequencetype:contig        CAGAGCACAACAGGTANCCCCTTCT...        >4.1 sequencetype:contig        GGTGATTGATTCTGACACATGTGGT...        >10.1 sequencetype:contig        TCGAGAAAGAGCATGGCCCTGCAGA...        >14.1 sequencetype:contig        CACACAATGTTGAGAGTGGCGAGAC...        >1002.1 sequencetype:contig        GNGGAATGGGCACGAGCGAAGTTTA...        select sequencetype, min(sequencenumber), count(*) from assemblysequences group by sequencetype;        +--------------+---------------------+----------+        | sequencetype | min(sequencenumber) | count(*) |        +--------------+---------------------+----------+        | contig       |                9914 |     2828 |        | singlet      |                   1 |     9913 |        +--------------+---------------------+----------+	./assemblyreads.pl -d supercraw0use supercraw0;select * from reads where experiment = 1 and plate = 100307 and well='C02'\G*************************** 1. row ***************************           experiment: 1                plate: 100307                 well: C02         readsequence: GCAGTACTTAGCGTGCAGATCTCATAAGATTGATAGTGAGGAATCCATACACGGGGAAAGTACGACAGACTTCCCTGGAATGTAGGGTAGTGCTCCACTATGAGACACTAGTGGAGGAAACTGCCTCCAAAGAAATCTATGAGGACACATACTCCATTGTGAAAGAAATGCTGAAAGAGACGACCTTTAAAGTTGATGCTGGATTTTCCTTCAAATATACTGCAACTGAACCATCCCTGGCTAACACTACTATTGGTGCTGAGGCAGGGGCTGAGTTCTCAAAAAAAAATGTTCTAAAAGACAGTTACAGAGTACTCTGTCATTAAGAACAAGAGCTTTATGAGGGTACACGGTAGAGTACAGCTGAGCAGCTACAGGATGCGCTCCCGTGAGCTCACCGTTGCTGAGGAGTATCTAATCCAT          readquality:    averagereadquality: 0.00     screenedsequence: GCAGTACTTAGCGTGCAGATCTCATAAGATTGATAGTGAGGAATCCATACACGGGGAAAGTACGACAGACTTCCCTGGAATGTAGGGTAGTGCTCCACTATGAGACACTAGTGGAGGAAACTGCCTCCAAAGAAATCTATGAGGACACATACTCCATTGTGAAAGAAATGCTGAAAGAGACGACCTTTAAAGTTGATGCTGGATTTTCCTTCAAATATACTGCAACTGAACCATCCCTGGCTAACACTACTATTGGTGCTGAGGCAGGGGCTGAGTTCTCAAAAAAAAATGTTCTAAAAGACAGTTACAGAGTACTCTGTCATTAAGAACAAGAGCTTTATGAGGGTACACGGTAGAGTACAGCTGAGCAGCTACAGGATGCGCTCCCGTGAGCTCACCGTTGCTGAGGAGTATCTAATCCAT      trimmedsequence:        trimmedquality: averagetrimmedquality: 0.00SELECT * FROM assemblyreads where sequencenumber='12741'\G*************************** 1. row ***************************assemblydatetime: 2006-11-09 15:56:54    assemblyname: supercraw0  assemblynumber: 1    assemblytype: cap3  sequencenumber: 12741    sequencetype: contig      experiment: 1           plate: 100307            well: C02   sequencestart: 0    sequencestop: 0       readstart: 1        readstop: 424 readorientation: +          divtag:              svg: select * from assemblysequences where sequencenumber =12741\G*************************** 1. row ***************************         funnybaseid: 2828  funnybaseaccession: 1 assemblydescription:     assemblydatetime: 2006-11-09 15:56:55        assemblyname: supercraw0      assemblynumber: 1        assemblytype: cap3      sequencenumber: 12741        sequencetype: contig    assemblysequence: CGCCCGAAGATTGACTTCAGTTTACTTTTTCTGCGTTCAGACGCTCCTGGTTTCTCCTAACAATGGCGGATCGGACGTTTGCCATCGCCATCTCTGTAATGACTCTGGTGTGGGGTGTTGTTGGAGGAGTTGTTCCCTGGTTTATCCCCAAAGGACCGAACAGAGGAGTTATTGTCACAATGTTGGTGCTGACTGCAGTCTGCTGTTACCTCTTCTGGTTGATAGCAATTCTGGCTCAGCTGAACCCGCTCTTTGGGCCATCCCTCTCCACTGACGTCATCTGGTACCTAAACTACGCCTGGGATTAACTTGGCCTTTAAGGACCACTTACCTTGCAGCATCAATGGGCTGTACACTGATGCACCAGATCCCCTCCAGAGACCGTTTATCAGCTCTCTTAAAACCCCCCGAACCCTGTGCCTTTTAGTGATGGAGTGAAGCCCTCGTGGGCGTGCCTTGATAAAGATTTGAAAACTATTACTTGATTTTTTTTTTTTTCCTGACTTTCAAATGAAACCGCCTTTCACTTGCTGTTGTGTGTGTGTGTGTGTGTATATGTGGGGCGCATTGTGTGCATTATGAGTGTCATTGACATTAATTAGTTGTTTCGAGGTCGAAAGAGAAGACAAAAGGAGCTCGGGGCAGGTTCAACTTATCATCGGGAGACTCTCCACATGAACGAGGTGTAATTTGCCCTTCCCCCGGAAGCTATGCCAATCCGATCCGGAACGA     assemblyquality: assemblysequencetrim: CGCCCGAAGATTGACTTCAGTTTACTTTTTCTGCGTTCAGACGCTCCTGGTTTCTCCTAACAATGGCGGATCGGACGTTTGCCATCGCCATCTCTGTAATGACTCTGGTGTGGGGTGTTGTTGGAGGAGTTGTTCCCTGGTTTATCCCCAAAGGACCGAACAGAGGAGTTATTGTCACAATGTTGGTGCTGACTGCAGTCTGCTGTTACCTCTTCTGGTTGATAGCAATTCTGGCTCAGCTGAACCCGCTCTTTGGGCCATCCCTCTCCACTGACGTCATCTGGTACCTAAACTACGCCTGGGATTAACTTGGCCTTTAAGGACCACTTACCTTGCAGCATCAATGGGCTGTACACTGATGCACCAGATCCCCTCCAGAGACCGTTTATCAGCTCTCTTAAAACCCCCCGAACCCTGTGCCTTTTAGTGATGGAGTGAAGCCCTCGTGGGCGTGCCTTGATAAAGATTTGAAAACTATTACTTGATTTTTTTTTTTTTCCTGACTTTCAAATGAAACCGCCTTTCACTTGCTGTTGTGTGTGTGTGTGTGTGTATATGTGGGGCGCATTGTGTGCATTATGAGTGTCATTGACATTAATTAGTTGTTTCGAGGTCGAAAGAGAAGACAAAAGGAGCTCGGGGCAGGTTCAACTTATCATCGGGAGACTCTCCACATGAACGAGGTGTAATTTGCCCTTCCCCCGGAAGCTATGCCAATCCGATCCGGAACGA assemblyqualitytrim:            trimstart: 1            trimstop: 732                snps:       averagequality: 0.00         readnumbers:         minreaddepth: 0.00        maxreaddepth: 0.00        readcoverage: 0.00                 div:                  svg: select * from comparemultipleannotation where database0id=12741\G*************************** 1. row ***************************               annotationsource: refseq-rat                   annotationid: 6978487                     annotation: aldolase A [Rattus norvegicus]                      database0: supercraw0                    database0id: 12741             database0accession: 1database0annotationhitevalueexp: -21database0annotationhitevaluedec: 4.18    database0annotationhitstart: 220     database0annotationhitstop: 636   database0annotationselfstart: 51    database0annotationselfstop: 189                      database1:                     database1id: 0             database1accession: database1annotationhitevalueexp: 0database1annotationhitevaluedec: 0.00    database1annotationhitstart: 0     database1annotationhitstop: 0   database1annotationselfstart: 0    database1annotationselfstop: 0                      database2:                     database2id: 0             database2accession: NULLdatabase2annotationhitevalueexp: NULLdatabase2annotationhitevaluedec: NULL    database2annotationhitstart: NULL     database2annotationhitstop: NULL   database2annotationselfstart: NULL    database2annotationselfstop: NULL1 row in set (0.02 sec)select distinct funnybaseid from funnybaseblast where targetsource ='refseq-rat' and targetid='6978487';+-------------+| funnybaseid |+-------------+|         755 ||        1814 ||        2282 ||        2989 ||        3567 ||        3666 ||        5683 ||        5826 ||        5970 ||        6128 ||        6149 ||        6365 ||        6436 ||        6475 ||        6532 ||        6579 ||        6653 ||        6662 ||        6879 ||        6949 ||        7156 ||        8319 ||        8509 ||        8613 ||        8870 ||        8909 ||        9819 ||       10094 ||       10149 ||       10156 ||       10263 ||       12445 ||       12517 ||       12543 ||       12718 ||       13758 ||       13764 ||       14688 ||       16800 ||       18540 ||       19554 ||       20159 ||       20448 ||       20536 |+-------------++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++Sun Nov 19 21:40:49 EST 2006TWEAKED assemblyreads.pl TO ACCOMODATE supercraw0 OUTPUT (I.E., NO cromat FILE INFO IN .ace FILE) AND WORKFASTER: select sequencetype, count(*)  from assemblyreads group by sequencetype;+--------------+----------+| sequencetype | count(*) |+--------------+----------+| contig       |    10132 || singlet      |    11518 |+--------------+----------+2 rows in set (0.07 sec)ALSO RAN assemblysequences: select sequencetype, count(*)  from assemblysequences group by sequencetype;+--------------+----------+| sequencetype | count(*) |+--------------+----------+| contig       |     2828 || singlet      |     9913 |+--------------+----------++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++Sun Nov 19 12:24:21 EST 2006PROBLEM:supercrawreads.pl -d supercraw0 DOESN'T LOAD BECAUSE OF DUPLICATE SEQUENCES IN master_seq2 WHERE experiment, plate, well AND date ARE THE SAME:Output file printed:/Users/young/FUNNYBASE/pipeline/supercraw0/edit_dir/supercraw0.reads.tsvDBD::mysql::db do failed: Duplicate entry '1-100276-G11' for key 1 at /Users/young/FUNNYBASE/lib/Database.pm line 115.Loading data into table 'reads'... DID NOT LOAD!done.Completed ./supercrawreads.plRun time: 01:40:472:44PM, 19 November 2006****************************************mysql> select * from master_seq2 where Exp_Set_ID = 1 and Plate_ID =100247 and Well_ID=17\G*************************** 1. row ***************************          Sequence_ID: 11193        Sequence_Name: 100247_17         Sequence_Raw: CTCGCCCCGTCCTTCAAGCAGGTAACTCAGACAGGTCATAATACTAACGCAGACGACGACACCCCTGATACTCAGCTAGGCAAACTACTAGGGGTGTGGACAATGCATCGATAGAGCATACAGACAACGCACATGATGCAATAGACACATAAGGAAATCAATGACCACAACAACAATGCAACACAAATGATGAGCAAAAAGAAAGATCCCTCGTCTAAGGATACCATCTGCAATGCGATGGAATACCCACAGACACGACAACANCACACAAGAAGACAACCAGACGCACACACACAAACATGATGTACAACTGACAACTACATACACTAGTCTTNNATGGGGTGTNNGTCCCACTCTCACATACATACTACCAACCACACGTGAACCAAGCCATAGCTCGCTATAAAACCAGTATCCAAAACGAGCCACTTACAGCCACCATSequence_Raw_Screened: CTCGCCCCGTCCTTCAAGCAGGTAACTCAGACAGGTCATAATACTAACGCAGACGACGACACCCCTGATACTCAGCTAGGCAAACTACTAGGGGTGTGGACAATGCATCGATAGAGCATACAGACAACGCACATGATGCAATAGACACATAAGGAAATCAATGACCACAACAACAATGCAACACAAATGATGAGCAAAAAGAAAGATCCCTCGTCTAAGGATACCATCTGCAATGCGATGGAATACCCACAGACACGACAACANCACACAAGAAGACAACCAGACGCACACACACAAACATGATGTACAACTGACAACTACATACACTAGTCTTNNATGGGGTGTNNGTCCCACTCTCACATACATACTACCAACCACACGTGAACCAAGCCATAGCTCGCTATAAAACCAGTATCCAAAACGAGCCACTTACAGCCACCAT     phd_quality_file: NULL           Exp_Set_ID: 1             Plate_ID: 100247              Well_ID: 17            Length_bp: 442 Sequence_Raw_Trimmed: CTCGCCCCGTCCTTCAAGCAGGTAACTCAGACAGGTCATAATACTAACGCAGACGACGACACCCCTGATACTCAGCTAGGCAAACTACTAGGGGTGTGGACAATGCATCGATAGAGCATACAGACAACGCACATGATGCAATAGACACATAAGGAAATCAATGACCACAACAACAATGCAACACAAATGATGAGCAAAAAGAAAGATCCCTCGTCTAAGGATACCATCTGCAATGCGATGGAATACCCACAGACACGACAACANCACACAAGAAGACAACCAGACGCACACACACAAACATGATGTACAACTGACAACTACATACACTAGTCTTNNATGGGGTGTNNGTCCCACTCTCACATACATACTACCAACCACACGTGAACCAAGCCATAGCTCGCTATAAAACCAGTATCCAAAACGAGCCACTTACAGCCACCAT             reseq_id: NULL            load_date: 060506*************************** 2. row ***************************          Sequence_ID: 11192        Sequence_Name: 100247_17         Sequence_Raw: TAAGAACCAGACAGCAAGTGAACCCCTATGGACGTTCACNTAGGAATAGGAGACACTAGACATAAGGACAACATAGAACACGCAACAACGACACGCAGACTAATAGACTTATCAGGACAAACGACACTAATAGTGAACTAATAGTACGCTATAGAACATAACCACGACACAAAAATAGAGACAATATAGACCAAGACTAGGTTACACCAGAACCACATGAAACACTTGACACACGCCCTGATAATGACCACACACAGTACACACCGACAGAGAACGAACAGTGTACCAGACATGTGATACACCACAGACACGAAACATTACACACAGACGAACGATTGACTGACAGACCACACGCTTGACATACGTACAGAAGCGACNATGCAGGTGCATGTGGGCCGGCAAGTGACCGCGCAAGTCACAGTACCCCAACCGAAACATTGACSequence_Raw_Screened: TAAGAACCAGACAGCAAGTGAACCCCTATGGACGTTCACNTAGGAATAGGAGACACTAGACATAAGGACAACATAGAACACGCAACAACGACACGCAGACTAATAGACTTATCAGGACAAACGACACTAATAGTGAACTAATAGTACGCTATAGAACATAACCACGACACAAAAATAGAGACAATATAGACCAAGACTAGGTTACACCAGAACCACATGAAACACTTGACACACGCCCTGATAATGACCACACACAGTACACACCGACAGAGAACGAACAGTGTACCAGACATGTGATACACCACAGACACGAAACATTACACACAGACGAACGATTGACTGACAGACCACACGCTTGACATACGTACAGAAGCGACNATGCAGGTGCATGTGGGCCGGCAAGTGACCGCGCAAGTCACAGTACCCCAACCGAAACATTGAC     phd_quality_file: NULL           Exp_Set_ID: 1             Plate_ID: 100247              Well_ID: 17            Length_bp: 442 Sequence_Raw_Trimmed: TAAGAACCAGACAGCAAGTGAACCCCTATGGACGTTCACNTAGGAATAGGAGACACTAGACATAAGGACAACATAGAACACGCAACAACGACACGCAGACTAATAGACTTATCAGGACAAACGACACTAATAGTGAACTAATAGTACGCTATAGAACATAACCACGACACAAAAATAGAGACAATATAGACCAAGACTAGGTTACACCAGAACCACATGAAACACTTGACACACGCCCTGATAATGACCACACACAGTACACACCGACAGAGAACGAACAGTGTACCAGACATGTGATACACCACAGACACGAAACATTACACACAGACGAACGATTGACTGACAGACCACACGCTTGACATACGTACAGAAGCGACNATGCAGGTGCATGTGGGCCGGCAAGTGACCGCGCAAGTCACAGTACCCCAACCGAAACATTGAC             reseq_id: NULL            load_date: 0605062 rows in set (0.07 sec)SOLUTION:sub unique_sequence{    my $unique_sequences    =   shift;    my $sequence_record     =   shift;        my $experiment = $sequence_record->{Exp_Set_ID};    my $plate = $sequence_record->{Plate_ID};    my $well = $sequence_record->{Well_ID};    if ( exists $$unique_sequences{"$experiment-$plate-$well"} )    {   return 0;   }    else    {   $$unique_sequences{"$experiment-$plate-$well"} = 1;   }        return 1;}+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++Sat Nov 18 16:13:49 EST 2006select assemblyname, sequencetype ,min(sequencenumber) from assemblysequences group by assemblyname, sequencetype;+--------------+--------------+---------------------+| assemblyname | sequencetype | min(sequencenumber) |+--------------+--------------+---------------------+| funnybase9   | contig       |               30342 || funnybase9   | singlet      |               12768 || supercraw0   | contig       |                9940 || supercraw0   | singlet      |                  27 |+--------------+--------------+---------------------+select assemblyname, sequencetype, max(sequencenumber) from assemblysequences group by assemblyname, sequencetype;+--------------+--------------+---------------------+| assemblyname | sequencetype | max(sequencenumber) |+--------------+--------------+---------------------+| funnybase9   | contig       |               30928 || funnybase9   | singlet      |               30341 || supercraw0   | contig       |               12767 || supercraw0   | singlet      |                9939 |+--------------+--------------+---------------------+select assemblyname, sequencetype, count(sequencetype) from assemblysequences group by assemblyname, sequencetype;+--------------+--------------+---------------------+| assemblyname | sequencetype | count(sequencetype) |+--------------+--------------+---------------------+| funnybase9   | contig       |                 587 || funnybase9   | singlet      |               17574 || supercraw0   | contig       |                2828 || supercraw0   | singlet      |                9913 |+--------------+--------------+---------------------+CREATED AN APPLICATION TO LOAD THE reads OF supercraw0 (I.E., DON'T HAVE QUALITY VALUES OR .phd FILES):supercrawreads.pl -d supercraw0 REWROTE reads.pl AND supercrawreads.pl TO HAVE MUCH FASTER RUN TIME:...34900Output .tsv file printed:/Users/young/FUNNYBASE/pipeline/funnybase9/edit_dir/funnybase9.reads.tsvLoading data into table 'reads'... done.RUN TIME: 01:51:24Completed ./reads.pl3:23AM, 19 November 2006****************************************+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++Sat Nov 18 01:34:12 EST 2006REWROTE assemblyreads.pl TO MAKE IT FASTER:select sequencetype, count(*) from assemblyreads group by sequencetype;+--------------+----------+| sequencetype | count(*) |+--------------+----------+| contig       |     5939 || singlet      |    24187 |+--------------+----------+NB: assemblyreadsdiv.pl DOES THE sim4 RECALCULATION OF SEQUENCE START/STOP AND READ START/STOP+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++Fri Nov 17 15:14:53 EST 2006Email DougCC Jeff, MargieHi Doug,I've processed the output of the BLAST of funnybase9:Total sequences 23305Annotated sequences 13750Unique sequences 4812Unknown sequences 9555Here are the details:BREAKDOWN OF BLAST HITS BY TARGET SOURCE+--------------+----------+| targetsource | count(*) |+--------------+----------+| genbank      |  2191828 || refseq-dog   |   757336 || refseq-human |   598520 || refseq-mouse |   513421 || refseq-rat   |   440715 || swissprot    |  1757804 |+--------------+----------+BREAKDOWN OF ASSEMBLED SEQUENCES BY ASSEMBLY NAME+--------------+----------+| assemblyname | count(*) |+--------------+----------+| funnybase9   |    21846 || supercraw0   |     1459 |+--------------+----------+2 rows in set (0.11 sec)BREAKDOWN OF ANNOTATED SEQUENCES BY ASSEMBLY NAME+--------------+---------------------------------------+| assemblyname | count(funnybasesequences.funnybaseid) |+--------------+---------------------------------------+| funnybase9   |                                 12291 || supercraw0   |                                  1459 |+--------------+---------------------------------------+2 rows in set (0.98 sec)BREAKDOWN OF ANNOTATED SEQUENCES BY ASSEMBLY NAME AND BLAST TARGET SOURCE+--------------+--------------+---------------------------------------+| assemblyname | targetsource | count(funnybasesequences.funnybaseid) |+--------------+--------------+---------------------------------------+| funnybase9   | genbank      |                                   457 || funnybase9   | refseq-dog   |                                    63 || funnybase9   | refseq-human |                                  2163 || funnybase9   | refseq-mouse |                                  2613 || funnybase9   | refseq-rat   |                                   850 || funnybase9   | swissprot    |                                  6145 || supercraw0   | refseq-dog   |                                     9 || supercraw0   | refseq-human |                                   433 || supercraw0   | refseq-mouse |                                   483 || supercraw0   | refseq-rat   |                                   161 || supercraw0   | swissprot    |                                   373 |+--------------+--------------+---------------------------------------+I'll have a breakdown of the unique sequences by assembly name shortly.Stuart.+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++Fri Nov 17 12:40:27 PST 2006STEP 2.3++++++++BLAST completed:Output file printed:/Users/local/FUNNYBASE/pipeline/funnybase9/blast/funnybase9-genbank.blast.tsvCompleted ./funnybasearrayblast.pl8:06AM, 17 November 2006***************************************select targetsource, count(*) from funnybaseblast group by targetsource;+--------------+----------+| targetsource | count(*) |+--------------+----------+| genbank      |  2191828 || refseq-dog   |   757336 || refseq-human |   598520 || refseq-mouse |   513421 || refseq-rat   |   440715 || swissprot    |  1757804 |+--------------+----------+mysql> select assemblyname , count(*) from funnybasesequences group by assemblyname ;+--------------+----------+| assemblyname | count(*) |+--------------+----------+| funnybase9   |    21846 || supercraw0   |     1459 |+--------------+----------+2 rows in set (0.11 sec)select assemblyname, count(funnybasesequences.funnybaseid) from funnybasesequences, funnybasesequencesannotation where funnybasesequences.funnybaseid=funnybasesequencesannotation.funnybaseid group by assemblyname ;+--------------+---------------------------------------+| assemblyname | count(funnybasesequences.funnybaseid) |+--------------+---------------------------------------+| funnybase9   |                                 12291 || supercraw0   |                                  1459 |+--------------+---------------------------------------+2 rows in set (0.98 sec)select count(funnybasesequences.funnybaseid) from funnybasesequences, funnybasesequencesannotation where funnybasesequences.funnybaseid=funnybasesequencesannotation.funnybaseid ;+---------------------------------------+| count(funnybasesequences.funnybaseid) |+---------------------------------------+|                                 13750 |select assemblyname, targetsource, count(funnybasesequences.funnybaseid) from funnybasesequences, funnybasesequencesannotation where funnybasesequences.funnybaseid=funnybasesequencesannotation.funnybaseid group by assemblyname, targetsource;+--------------+--------------+---------------------------------------+| assemblyname | targetsource | count(funnybasesequences.funnybaseid) |+--------------+--------------+---------------------------------------+| funnybase9   | genbank      |                                   457 || funnybase9   | refseq-dog   |                                    63 || funnybase9   | refseq-human |                                  2163 || funnybase9   | refseq-mouse |                                  2613 || funnybase9   | refseq-rat   |                                   850 || funnybase9   | swissprot    |                                  6145 || supercraw0   | refseq-dog   |                                     9 || supercraw0   | refseq-human |                                   433 || supercraw0   | refseq-mouse |                                   483 || supercraw0   | refseq-rat   |                                   161 || supercraw0   | swissprot    |                                   373 |+--------------+--------------+---------------------------------------+Total sequences 23305Annotated sequences 13750Unique sequences 4812Unknown sequences 9555select funnybasesequences.assemblyname, funnybaseuniquesequencesannotation.targetsource, count(funnybasesequences.funnybaseid) from funnybasesequences, funnybaseuniquesequencesannotation where funnybasesequences.funnybaseid=funnybaseuniquesequencesannotation.funnybaseid group by assemblyname, targetsource;BREAKDOWN OF UNIQUE SEQUENCES BY ASSEMBLY NAME AND TARGET SOURCE:+--------------+--------------+---------------------------------------+| assemblyname | targetsource | count(funnybasesequences.funnybaseid) |+--------------+--------------+---------------------------------------+| funnybase9   | genbank      |                                   263 || funnybase9   | refseq-dog   |                                    33 || funnybase9   | refseq-human |                                   977 || funnybase9   | refseq-mouse |                                  1001 || funnybase9   | refseq-rat   |                                   319 || funnybase9   | swissprot    |                                  1088 || supercraw0   | refseq-dog   |                                     5 || supercraw0   | refseq-human |                                   349 || supercraw0   | refseq-mouse |                                   356 || supercraw0   | refseq-rat   |                                   131 || supercraw0   | swissprot    |                                   289 || supercraw0   | targetsource |                                     1 |+--------------+--------------+---------------------------------------++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++Tue Nov 14 21:47:11 EST 2006TO DO:Step 2.    2.1 Add 'unique sequences' of supercraw0 (no-quality) assembly that are not found among 'unique sequences' of funnybase7) to create 'funnybase9'.    2.2 Add assembly sequences from funnybase7 to funnybase9 with phred cutoff of >= 10 for both contigs and singlets.    2.3 ReBLAST and annotate.     2.4 Produce a spreadsheet for all singlets/contigs with (all on one line):         ID, # constituent sequences (1 for singlets), Annotation, E-value, swissprot, refseq-human, refseq-mouse, refseq-rat, refseq-dogSTEP 2.1++++++++EXTRACTED THE REQUIRED SEQUENCES FROM supercraw0 (ALL THOSE 'unique sequences' NOT PRESENT IN funnybase7) USING comparemultipleextractsequences.pl:./comparemultipleextractsequences.pl -d supercraw0 -m funnybase7ALTERED assemblysequences TO ADD MULTIPLE ASSEMBLIES WITHOUT DOING THE assemblyblast COMPARISON BETWEEN THE NEW ASSEMBLY AND THE EXISTING funnybasesequences:./assemblysequences.pl -d funnybase9 -n supercraw0 -f /Users/young/FUNNYBASE/pipeline/supercraw0/annotation/comparemultiple.supercraw0-funnybase7.extract.contigs -wselect count(*) from assemblysequences;+----------+| count(*) |+----------+|     1459 |+----------+1 row in set (0.00 sec)STEP 2.2++++++++MIRRORED funnybase7 ASSEMBLY FILES AS funnybase9:./mirror.pl -s funnybase7 -t funnybase9Source: funnybase7Target: funnybase9ln -s /Users/young/FUNNYBASE/pipeline/funnybase7/edit_dir/funnybase7.fasta /Users/young/FUNNYBASE/pipeline/funnybase9/edit_dir/funnybase9.fastaln -s /Users/young/FUNNYBASE/pipeline/funnybase7/edit_dir/funnybase7.fasta.screen /Users/young/FUNNYBASE/pipeline/funnybase9/edit_dir/funnybase9.fasta.screenln -s /Users/young/FUNNYBASE/pipeline/funnybase7/edit_dir/funnybase7.fasta.screen.cap.ace /Users/young/FUNNYBASE/pipeline/funnybase9/edit_dir/funnybase9.fasta.screen.cap.aceln -s /Users/young/FUNNYBASE/pipeline/funnybase7/edit_dir/funnybase7.fasta.screen.cap.contigs /Users/young/FUNNYBASE/pipeline/funnybase9/edit_dir/funnybase9.fasta.screen.cap.contigsln -s /Users/young/FUNNYBASE/pipeline/funnybase7/edit_dir/funnybase7.fasta.screen.cap.contigs.qual /Users/young/FUNNYBASE/pipeline/funnybase9/edit_dir/funnybase9.fasta.screen.cap.contigs.qualln -s /Users/young/FUNNYBASE/pipeline/funnybase7/edit_dir/funnybase7.fasta.screen.cap.singlets /Users/young/FUNNYBASE/pipeline/funnybase9/edit_dir/funnybase9.fasta.screen.cap.singletsln -s /Users/young/FUNNYBASE/pipeline/funnybase7/edit_dir/funnybase7.fasta.screen.cap.singlets.qual /Users/young/FUNNYBASE/pipeline/funnybase9/edit_dir/funnybase9.fasta.screen.cap.singlets.qualln -s /Users/young/FUNNYBASE/pipeline/funnybase7/edit_dir/funnybase7.poly /Users/young/FUNNYBASE/pipeline/funnybase9/edit_dir/funnybase9.polyln -s /Users/young/FUNNYBASE/pipeline/funnybase7/edit_dir/funnybase7.poly.stats /Users/young/FUNNYBASE/pipeline/funnybase9/edit_dir/funnybase9.poly.statsCompleted ./mirror.plFILTERED funnybase7 SEQUENCES WITH A QUALITY CUTOFF OF 10 (OPTION -q 10):./assemblysequences.pl -d funnybase9 -f /Users/young/FUNNYBASE/pipeline/funnybase9/edit_dir/funnybase9.fasta.screen.cap.contigs -q 10 -wSinglets: 20088 out of 24187 sequences added to 'assemblysequences' tableContigs: 1758 out of 1779 sequences added to 'assemblysequences' tablemysql> select assemblyname,  sequencetype, count(*)  from assemblysequences group by assemblyname, sequencetype;+--------------+--------------+----------+| assemblyname | sequencetype | count(*) |+--------------+--------------+----------+| funnybase9   | contig       |     1758 || funnybase9   | singlet      |    20088 || supercraw0   | contig       |      749 || supercraw0   | singlet      |      710 |+--------------+--------------+----------+COMPARED TO USING QUALITY CUTOFF 20 IN funnybase7:select assemblyname,  sequencetype, count(*)  from assemblysequences group by assemblyname, sequencetype;+--------------+--------------+----------+| assemblyname | sequencetype | count(*) |+--------------+--------------+----------+| funnybase7   | contig       |      587 || funnybase7   | singlet      |    17574 |+--------------+--------------+----------+2 rows in set (0.14 sec)ADDED assemblysequences TO funnybasesequences:./funnybasesequences.pl -d funnybase9 -n supercraw0 select assemblyname,  sequencetype, count(*)  from funnybasesequences group by assemblyname, sequencetype;+--------------+--------------+----------+| assemblyname | sequencetype | count(*) |+--------------+--------------+----------+| supercraw0   | contig       |      749 || supercraw0   | singlet      |      710 |+--------------+--------------+----------+./funnybasesequences.pl -d funnybase9 -n funnybase9select assemblynumber, assemblyname,  sequencetype, count(*)  from assemblysequences group by assemblyname, sequencetype;+----------------+--------------+--------------+----------+| assemblynumber | assemblyname | sequencetype | count(*) |+----------------+--------------+--------------+----------+|              2 | funnybase9   | contig       |     1758 ||              2 | funnybase9   | singlet      |    20088 ||              1 | supercraw0   | contig       |      749 ||              1 | supercraw0   | singlet      |      710 |+----------------+--------------+--------------+----------+2.3 TRANSFERRED TO gems AND RAN BLAST:++++++++++++++++++++++++++++++++++++++sudo ./funnybasearrayblast.pl -d funnybase9 -t refseq-dog,refseq-human,refseq-mouse,refseq-rat,swissprot,genbank+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++MSG DOUGcc JeffMon Nov 13 19:14:23 EST 2006Hi Doug,Following on from our conversation today on what we need to get done to complete the annotation of the database, I'm currently doing step 2 of the three steps you wanted done:Step 1. Get Venn diagram result of 3-database 'unique sequences' comparison (see results below).Step 2. Add 'unique sequences' of supercraw0 (no-quality) assembly that are not found among 'unique sequences' of funnybase7) to create 'funnybase8'. Add assembly sequences from funnybase7 to  funnybase8 with phred cutoff of >= 10 for both contigs and singlets. ReBLAST and annotate. Produce a spreadsheet for all singlets/contigs with (all on one line): ID, # constituent sequences (1 for singlets), Annotation, E-value, swissprot, refseq-human, refseq-mouse, refseq-rat, refseq-dogwhere swissprot, etc. have the same positional information as found in the comparison results files (see below).Step 3. Blast unknown singlets with NCBI.STEP 1 RESULTS:Here are the results for the Venn Diagram analysis (I can do a web interface for it later if you think it's needed but here are the results first):Total unique sequences: 4799Hits in databases supercraw0: 2457http://genomics.rsmas.miami.edu/downloads/comparemultiple.supercraw0.vennHits in databases supercraw0 and supercraw5: 2031http://genomics.rsmas.miami.edu/downloads/comparemultiple.supercraw0-and-supercraw5.vennHits in databases supercraw0 and supercraw5 and funnybase7: 998http://genomics.rsmas.miami.edu/downloads/comparemultiple.supercraw0-and-supercraw5-and-funnybase7.vennHits in databases supercraw0 AND funnybase7: 998http://genomics.rsmas.miami.edu/downloads/comparemultiple.supercraw0-and-funnybase7.vennHits in databases supercraw5: 3668http://genomics.rsmas.miami.edu/downloads/comparemultiple.supercraw5.vennHits in databases supercraw5 and funnybase7: 1817http://genomics.rsmas.miami.edu/downloads/comparemultiple.supercraw5-and-funnybase7.vennHits in databases funnybase7: 2522http://genomics.rsmas.miami.edu/downloads/comparemultiple.funnybase7.vennStuart.+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++HEADER FOR FILESMon Nov 13 19:03:48 EST 2006comparemultiple.supercraw0-supercraw5-funnybase7.summaryannotationsource	annotationid	annotationtarget	targetid	targetaccession	targetannotationhitevalueexp	targetannotationhitevaluedec	targetannotationhitstart	targetannotationhitstop	targetannotationselfstart	targetannotationselfstop	target	targetid	targetaccession	targetannotationhitevalueexp	targetannotationhitevaluedec	targetannotationhitstart	targetannotationhitstop	targetannotationselfstart	targetannotationselfstop	target	targetid	targetaccession	targetannotationhitevalueexp	targetannotationhitevaluedec	targetannotationhitstart	targetannotationhitstop	targetannotationselfstart	targetannotationselfstop	Total unique sequences: 4799Hits in databases supercraw0: 2457http://genomics.rsmas.miami.edu/downloads/comparemultiple.supercraw0.vennHits in databases supercraw0 and supercraw5: 2031http://genomics.rsmas.miami.edu/downloads/comparemultiple.supercraw0-and-supercraw5.vennHits in databases supercraw0 and supercraw5 and funnybase7: 998http://genomics.rsmas.miami.edu/downloads/comparemultiple.supercraw0-and-supercraw5-and-funnybase7.vennHits in databases supercraw0 AND funnybase7: 998http://genomics.rsmas.miami.edu/downloads/comparemultiple.supercraw0-and-funnybase7.vennHits in databases supercraw5: 3668http://genomics.rsmas.miami.edu/downloads/comparemultiple.supercraw5.vennHits in databases supercraw5 and funnybase7: 1817http://genomics.rsmas.miami.edu/downloads/comparemultiple.supercraw5-and-funnybase7.vennHits in databases funnybase7: 2522http://genomics.rsmas.miami.edu/downloads/comparemultiple.funnybase7.vennlines supercraw0.uniquesequences.tsv LINES 2458dlc-genomics:~/FUNNYBASE/pipeline/supercraw0/annotation young$ cd ../..dlc-genomics:~/FUNNYBASE/pipeline young$ lines supercraw5/annotation/supercraw5.uniquesequences.tsvLINES 3669dlc-genomics:~/FUNNYBASE/pipeline young$ lines funnybase7/annotation/funnybase7.uniquesequences.tsvLINES 2523 select count(*) from comparemultipleannotation;                    +----------+| count(*) |+----------+|     5254 |+----------+1 row in set (0.00 sec)select count(*) from comparemultipleannotation where database0!='';+----------+| count(*) |+----------+|     1229 |+----------+1 row in set (0.01 sec)mysql> select count(*) from comparemultipleannotation where database1!='';+----------+| count(*) |+----------+|     3668 |+----------+1 row in set (0.01 sec)mysql> select count(*) from comparemultipleannotation where database2!='';+----------+| count(*) |+----------+|     2522 |+----------+1 row in set (0.01 sec)VENN DIAGRAM ANALYSIS USING OUTPUT FROM:    ./comparemultiplefunnybaseannotation.pl -d supercraw0 -t supercraw5,funnybase7 Printed SQL file:/Users/young/FUNNYBASE/bin/pipeline3/sql/create_comparemultipleannotation.sqlCreating table 'comparemultipleannotation'... done.Deleting from table 'comparemultipleannotation'... done.Getting database 'supercraw0' sequences in sequencefile '/Users/young/FUNNYBASE/pipeline/supercraw0/annotation/supercraw0.uniquesequences.tsv'... done.Getting database 'supercraw5' sequences in sequencefile '/Users/young/FUNNYBASE/pipeline/supercraw5/annotation/supercraw5.uniquesequences.tsv'... done.Getting database 'funnybase7' sequences in sequencefile '/Users/young/FUNNYBASE/pipeline/funnybase7/annotation/funnybase7.uniquesequences.tsv'... done.Comparing sequences from database 'supercraw0, supercraw5, funnybase7, '...No. sequences at start: 3668No. sequences left: 2522Database 0: supercraw0Database 1: supercraw5No. sequences left: 1325No. sequences left: 1374Completed ./comparemultiplefunnybaseannotation.plRun time: 00:01:312:57PM, 13 November 2006****************************************DATABASE COMPARISONS SUMMARY++++++++++++++++++++++++++++Comparison of 'funnybase7' and 'supercraw5':6. GET 'best sequences' FROM supercraw5Total sequences         49791Unannotated sequences   37239Annotated sequences     12552Unique sequences         3668comparison of supercraw5 with funnybase7:Same sequence found: 1882Total 'funnybase7' sequences: 2522Total 'supercraw5' sequences: 3668supercraw0 WITH supercraw5 Same sequence found: 2053Total 'supercraw0' sequences: 2457Total 'supercraw5' sequences: 3668Output file printed:http://genomics.rsmas.miami.edu/downloads/supercraw0-supercraw5.compare.tsvsupercraw0 WITH funnybase7:Same sequence found: 1111Total 'supercraw0' sequences: 2457Total 'funnybase7' sequences: 2522Output file printed:http://genomics.rsmas.miami.edu/downloads/supercraw0-funnybase7.compare.tsv+++++++++++++++++++++++++++++++++++++++++++++++++++++Fri Nov 10 09:41:55 EST 2006Msg: DougCC: Jeff, MargieHi Doug,Here's the result of the BLAST of supercraw0 (only those experiments that are not included in funnybase7, the latest version) which finished last night. The comparison of 'unique sequences' between supercraw0, supercraw5 and funnybase7 shows that supercraw0 and supercraw5 share 2053 unique sequences but supercraw0 and funnybase7 share only 1111 unique sequences, which would suggest that the missing annotations in funnybase7 are due the fact that funnybase7 does not include the earlier sequence data (experiments 1 123 124 125 189 190 199 999) .Stuart.PS: I'm currently working at home but I'm now on my way to the lab if you want to meet this morning to discuss the results.+++++++++++++++++++++++++++++++++++++++++++++++++++++Fri Nov 10 08:16:18 EST 20061. INSERTED BLAST RESULTS FOR supercraw0 (experiments: 1 123 124 125 189 190 199 999) INTO funnybaseblast TABLE:BREAKDOWN BY BLAST TARGET SOURCE:+--------------+--------------------------+| targetsource | count(distinct targetid) |+--------------+--------------------------+| refseq-dog   |                    14888 || refseq-human |                    10813 || refseq-mouse |                     9547 || refseq-rat   |                     9098 || swissprot    |                    44341 |+--------------+--------------------------+2. GOT 'best sequences' FROM supercraw0Total sequences        12741Unannotated sequences   9450Annotated sequences     3291Unique sequences        2457All annotated sequences:http://genomics.rsmas.miami.edu/downloads/supercraw0.annotatedsequences.tsvBest annotated sequences:http://genomics.rsmas.miami.edu/downloads/supercraw0.uniquesequences.tsvUnknown sequences:http://genomics.rsmas.miami.edu/downloads/supercraw0.unknownsequences.tsv3. COMPARED BLAST RESULTS OF supercraw0 WITH supercraw5 AND funnybase7:comparefunnybaseannotation.pl -d supercraw0 -t supercraw5Same sequence found: 2053Total 'supercraw0' sequences: 2457Total 'supercraw5' sequences: 3668Output file printed:http://genomics.rsmas.miami.edu/downloads/supercraw0-supercraw5.compare.tsvcomparefunnybaseannotation.pl -d supercraw0 -t funnybase7Same sequence found: 1111Total 'supercraw0' sequences: 2457Total 'funnybase7' sequences: 2522Output file printed:http://genomics.rsmas.miami.edu/downloads/supercraw0-funnybase7.compare.tsvBREAKDOWN BY SEQUENCE TYPE:supercraw0+--------------+-----------------------+| sequencetype | count(sequencenumber) |+--------------+-----------------------+| contig       |                  2828 || singlet      |                  9913 |+--------------+-----------------------+supercraw5+--------------+-----------------------+| sequencetype | count(sequencenumber) |+--------------+-----------------------+| contig       |                 13568 || singlet      |                 36223 |+--------------+-----------------------+funnybase7+--------------+-----------------------+| sequencetype | count(sequencenumber) |+--------------+-----------------------+| contig       |                   586 || singlet      |                 17516 |+--------------+-----------------------++++++++++++++++++++++++++++++++++++++++++++++++++++++Thu Nov  9 13:27:24 EST 20061. USED APPLICATION TO EXTRACT RAW SEQUENCE FROM super_craw5 AND PRINT TO A SINGLE FASTA FILE:    ./supercraw2fasta.pl -n supercraw0 -e 1,123,124,125,189,190,199,999NB: STRANGE PLATE NUMBERS - CHANGE ASSEMBLY READS TABLE TO ACCOMMODATE IF REQUIRE DISPLAY OF READS LATER:Total experiments: 1 123 124 125 189 190 199 999Doing experiment 1Plate: 100276Plate: 100275Plate: 100274Plate: 100269Plate: 100258Plate: 100257Plate: 100256Plate: 100255...2. REFINED assembler.pl TO UPDATE pipeline TABLE WHILST SCREENING FASTA FILE:    ./assembler.pl -n supercraw0 -s 4.3. REWROTE assemblysequences.pl TO WRITE TO .TSV FILE THEN DO BULK UPLOAD (20X FASTER THAN BEFORE)    ./pipeline.pl -s 4. -d supercraw0 -w 4. TRANSFERRED funnybasesequences TABLE TO gems AND DID ARRAYBLAST:sudo ./funnybasearrayblast.pl -d supercraw0 -t refseq-human,refseq-rat,refseq-mouse,refseq-dog,swissprot++++++++++++++++++++++++++++++++++++++++++++++++++++++Wed Nov  8 21:25:19 EST 2006./supercraw2fasta.pl -n supercraw0 -e 1,123,124,125,189,190,199,999/Users/young/FUNNYBASE/pipeline/supercraw0/edit_dir/supercraw0.fasta>From: dcrawford@rsmas.miami.edu>To: "stuart young" <youngstuart@hotmail.com>>CC: jvanwye@rsmas.miami.edu, dcrawford@rsmas.miami.edu, moleksiak@rsmas.miami.edu>Subject: RE: Annotations>Date: Mon, 6 Nov 2006 12:58:55 -0500 (EST)>>Stuart,>   ORIGINAL STATS for Fundulus ESTs prior to Jeff's sequencing of new EST>libraries:>44,204 sequences>3,774   clusters (with two or more members)>9,042   singletons>3,423   annotated sequences>2,115   unique sequences with one or more GO terms assigned>70,818 total GO terms assiged>>  I am wondering why there is only 2522 "best".>Originally there were >9,000 cluster,  approximatel 3,400 annotations.  We>have added >10,000 more sequence from other tissues and stresses.>So why 2522?>>2nd you suggest that there are 8,348 annotations.  How does this get>reduced to 2522?>>>MY Questions:>18,000 sequences ( is this the 6,000 PLUS the most recent sequences?)>What are these sequences?>How many clusters and how many singletons?>How many annotations of these (in each group: cluster and singleton)?>How many are unique (are different genes)?  How did you know they were the>same but not clusters.>>MY PROBLEM is we have gone from 4,000+ annotations to 2,000.  What is>going on?>>dlc>>>> > Hi Jeff/Doug,> >> > Here's the list of the sequences we have that are not annotated:> >> > http://genomics.rsmas.miami.edu/downloads/funnybase7.noannotation.tsv> >> > And here's the breakdown of sequences by annotation:> >> > Total all sequences: 18102> > No. unannotated sequences: 9754> > No. annotated sequences: 8348> > No. of unique annotations: 2522 (by BLAST best hit target_id)> >> > Stuart.> >> > _________________________________________________________________> > Don't just search. Find. Check out the new MSN Search!> > http://search.msn.click-url.com/go/onm00200636ave/direct/01/> >>>>-->Douglas L. Crawford>Director Marine Genomics>Rosenstiel School of Marine & Atmospheric Science>Unversity of Miami>4600 Rickenbacker Cswy.>Miami, FL  33149>305-421-4121>dcrawford@rsmas.miami.edu+++++++++++++++++++++++++++++++++++++++++++++++++++++Fri Nov 10 08:16:18 EST 20061. INSERTED BLAST RESULTS FOR supercraw0 (experiments: 1 123 124 125 189 190 199 999) INTO funnybaseblast TABLE:BREAKDOWN BY BLAST TARGET SOURCE:+--------------+--------------------------+| targetsource | count(distinct targetid) |+--------------+--------------------------+| refseq-dog   |                    14888 || refseq-human |                    10813 || refseq-mouse |                     9547 || refseq-rat   |                     9098 || swissprot    |                    44341 |+--------------+--------------------------+2. GOT 'best sequences' FROM supercraw0Total sequences        12741Unannotated sequences   9450Annotated sequences     3291Unique sequences        2457All annotated sequences:http://genomics.rsmas.miami.edu/downloads/supercraw0.annotatedsequences.tsvBest annotated sequences:http://genomics.rsmas.miami.edu/downloads/supercraw0.uniquesequences.tsvUnknown sequences:http://genomics.rsmas.miami.edu/downloads/supercraw0.unknownsequences.tsv3. COMPARED BLAST RESULTS OF supercraw0 WITH supercraw5 AND funnybase7:comparefunnybaseannotation.pl -d supercraw0 -t supercraw5Same sequence found: 2053Total 'supercraw0' sequences: 2457Total 'supercraw5' sequences: 3668Output file printed:http://genomics.rsmas.miami.edu/downloads/supercraw0-supercraw5.compare.tsvcomparefunnybaseannotation.pl -d supercraw0 -t funnybase7Same sequence found: 1111Total 'supercraw0' sequences: 2457Total 'funnybase7' sequences: 2522Output file printed:http://genomics.rsmas.miami.edu/downloads/supercraw0-funnybase7.compare.tsvBREAKDOWN BY SEQUENCE TYPE:supercraw0+--------------+-----------------------+| sequencetype | count(sequencenumber) |+--------------+-----------------------+| contig       |                  2828 || singlet      |                  9913 |+--------------+-----------------------+supercraw5+--------------+-----------------------+| sequencetype | count(sequencenumber) |+--------------+-----------------------+| contig       |                 13568 || singlet      |                 36223 |+--------------+-----------------------+funnybase7+--------------+-----------------------+| sequencetype | count(sequencenumber) |+--------------+-----------------------+| contig       |                   586 || singlet      |                 17516 |+--------------+-----------------------++++++++++++++++++++++++++++++++++++++++++++++++++++++Thu Nov  9 13:27:24 EST 20061. USED APPLICATION TO EXTRACT RAW SEQUENCE FROM super_craw5 AND PRINT TO A SINGLE FASTA FILE:    ./supercraw2fasta.pl -n supercraw0 -e 1,123,124,125,189,190,199,999NB: STRANGE PLATE NUMBERS - CHANGE ASSEMBLY READS TABLE TO ACCOMMODATE IF REQUIRE DISPLAY OF READS LATER:Total experiments: 1 123 124 125 189 190 199 999Doing experiment 1Plate: 100276Plate: 100275Plate: 100274Plate: 100269Plate: 100258Plate: 100257Plate: 100256Plate: 100255...2. REFINED assembler.pl TO UPDATE pipeline TABLE WHILST SCREENING FASTA FILE:    ./assembler.pl -n supercraw0 -s 4.3. REWROTE assemblysequences.pl TO WRITE TO .TSV FILE THEN DO BULK UPLOAD (20X FASTER THAN BEFORE)    ./pipeline.pl -s 4. -d supercraw0 -w 4. TRANSFERRED funnybasesequences TABLE TO gems AND DID ARRAYBLAST:sudo ./funnybasearrayblast.pl -d supercraw0 -t refseq-human,refseq-rat,refseq-mouse,refseq-dog,swissprot++++++++++++++++++++++++++++++++++++++++++++++++++++++Wed Nov  8 21:25:19 EST 2006./supercraw2fasta.pl -n supercraw0 -e 1,123,124,125,189,190,199,999/Users/young/FUNNYBASE/pipeline/supercraw0/edit_dir/supercraw0.fasta++++++++++++++++++++++++++++++++++++++++++++++++++++++Msg Doug, CC JeffHi Doug,Here are the results of my preliminary comparison of 'funnybase7' and 'supercraw5':6. GET 'best sequences' FROM supercraw5Total sequences         49791Unannotated sequences   37239Annotated sequences     12552Unique sequences         36687. COMPARE BLAST RESULTS BASED ON target_source, target_id - WHAT ARE THE COMMON GENES AND WHAT ARE THE OTHERS?Using:comparefunnybaseannotation.plSame sequence found: 1882Total 'funnybase7' sequences: 2522Total 'supercraw5' sequences: 3668The 'total ... sequences' represent the unique sequences found by clustering the assembled sequences according to best blast hit and then choosing 1) most 5-prime, 2) longest, 3) highest quality, in that order.Here is the output file:http://genomics.rsmas.miami.edu/downloads/funnybase7-supercraw5.compare.tsvI'm next going to look into the possbility that it might be that the extra annotations come from sequences in the earlier experiments (1, 123, etc.) that weren't included in funnybase7 because they either didn't have .phd files or were normalised:Experiments in supercraw5+------------+--------------------+| Exp_Set_ID | count(Sequence_Id) |+------------+--------------------+|          1 |              17557 ||        123 |               3473 ||        124 |               1152 ||        125 |              15726 ||        126 |               5849 ||        127 |               2014 ||        128 |                 96 ||        129 |                 96 ||        130 |                165 ||        151 |                960 ||        152 |                960 ||        153 |               1152 ||        154 |                768 ||        155 |                944 ||        156 |                960 ||        157 |                960 ||        158 |                960 ||        159 |              12282 ||        189 |                 96 ||        190 |                192 ||        199 |                 96 ||        999 |                 96 |+------------+--------------------+Experiments in funnybase7:+------------+-------------+| experiment | count(well) |+------------+-------------+|        126 |        5947 ||        130 |        8995 ||        151 |         959 ||        152 |         959 ||        153 |        1152 ||        154 |         768 ||        155 |         942 ||        156 |         954 ||        157 |         945 ||        158 |         956 ||        159 |       12233 |+------------+-------------+Stuart.+++++++++++++++++++++++++++++++++++++++++++++++++++++++Wed Nov  8 13:04:16 EST 2006super_craw5 EXPERIMENTS+++++++++++++++++++++++select Exp_Set_ID, count(Sequence_Id) from master_seq2 group by Exp_Set_ID;+------------+--------------------+| Exp_Set_ID | count(Sequence_Id) |+------------+--------------------+|          1 |              17557 ||        123 |               3473 ||        124 |               1152 ||        125 |              15726 ||        126 |               5849 ||        127 |               2014 ||        128 |                 96 ||        129 |                 96 ||        130 |                165 ||        151 |                960 ||        152 |                960 ||        153 |               1152 ||        154 |                768 ||        155 |                944 ||        156 |                960 ||        157 |                960 ||        158 |                960 ||        159 |              12282 ||        189 |                 96 ||        190 |                192 ||        199 |                 96 ||        999 |                 96 |+------------+--------------------+22 rows in set (0.60 sec)funnybase7, funnybase8 EXPERIMENTS++++++++++++++++++++++++++++++++++SELECT experiment, count(well) from reads group by experiment;+------------+-------------+| experiment | count(well) |+------------+-------------+|        126 |        5947 ||        130 |        8995 ||        151 |         959 ||        152 |         959 ||        153 |        1152 ||        154 |         768 ||        155 |         942 ||        156 |         954 ||        157 |         945 ||        158 |         956 ||        159 |       12233 |+------------+-------------+EXPERIMENTS IN supercraw5 AND NOT IN funnybase7mysql> select Exp_Set_ID, Plate_ID, Well_ID from master_seq2 where Exp_Set_ID =1 into outfile '/private/tmp/supercraw5.exp1.reads.tsv';Query OK, 17557 rows affected (1.03 sec)mysql> select Exp_Set_ID, Plate_ID, Well_ID from master_seq2 where Exp_Set_ID = 123 into outfile '/private/tmp/supercraw5.exp123.reads.tsv';Query OK, 3473 rows affected (0.08 sec)mysql> select Exp_Set_ID, Plate_ID, Well_ID from master_seq2 where Exp_Set_ID = 124 into outfile '/private/tmp/supercraw5.exp124.reads.tsv';Query OK, 1152 rows affected (0.02 sec)mysql> select Exp_Set_ID, Plate_ID, Well_ID from master_seq2 where Exp_Set_ID = 125 into outfile '/private/tmp/supercraw5.exp125.reads.tsv';Query OK, 15726 rows affected (0.42 sec)mysql> select Exp_Set_ID, Plate_ID, Well_ID from master_seq2 where Exp_Set_ID = 189 into outfile '/private/tmp/supercraw5.exp189.reads.tsv';Query OK, 96 rows affected (0.01 sec)mysql> select Exp_Set_ID, Plate_ID, Well_ID from master_seq2 where Exp_Set_ID = 190 into outfile '/private/tmp/supercraw5.exp190.reads.tsv';Query OK, 192 rows affected (0.01 sec)mysql> select Exp_Set_ID, Plate_ID, Well_ID from master_seq2 where Exp_Set_ID = 199 into outfile '/private/tmp/supercraw5.exp199.reads.tsv';Query OK, 96 rows affected (0.00 sec)mysql> select Exp_Set_ID, Plate_ID, Well_ID from master_seq2 where Exp_Set_ID = 999 into outfile '/private/tmp/supercraw5.exp999.reads.tsv';Query OK, 96 rows affected (0.00 sec)mysql> select count(Sequence_ID) from master_seq2 where phd_quality_file IS NOT NULL and Exp_Set_ID = 1;+--------------------+| count(Sequence_ID) |+--------------------+|                  0 |+--------------------+1 row in set (1.02 sec)mysql> select count(Sequence_ID) from master_seq2 where phd_quality_file IS NOT NULL and Exp_Set_ID = 123;+--------------------+| count(Sequence_ID) |+--------------------+|                  0 |+--------------------+1 row in set (0.06 sec)mysql> select count(Sequence_ID) from master_seq2 where phd_quality_file IS NOT NULL and Exp_Set_ID = 124;+--------------------+| count(Sequence_ID) |+--------------------+|                  0 |+--------------------+1 row in set (0.03 sec)mysql> select count(Sequence_ID) from master_seq2 where phd_quality_file IS NOT NULL and Exp_Set_ID = 125;+--------------------+| count(Sequence_ID) |+--------------------+|              15726 |+--------------------+1 row in set (0.41 sec)mysql> select count(Sequence_ID) from master_seq2 where phd_quality_file IS NOT NULL and Exp_Set_ID = 189;+--------------------+| count(Sequence_ID) |+--------------------+|                 96 |+--------------------+1 row in set (0.01 sec)mysql> select count(Sequence_ID) from master_seq2 where phd_quality_file IS NOT NULL and Exp_Set_ID = 190;+--------------------+| count(Sequence_ID) |+--------------------+|                192 |+--------------------+1 row in set (0.00 sec)mysql> select count(Sequence_ID) from master_seq2 where phd_quality_file IS NOT NULL and Exp_Set_ID = 199;+--------------------+| count(Sequence_ID) |+--------------------+|                 96 |+--------------------+1 row in set (0.00 sec)mysql> select count(Sequence_ID) from master_seq2 where phd_quality_file IS NOT NULL and Exp_Set_ID = 999;+--------------------+| count(Sequence_ID) |+--------------------+|                 96 |+--------------------+1 row in set (0.00 sec)5. BLAST AGAINST swissprot,refseq-human,refseq-rat,refseq-mouse,refseq-dogGetting funnybase sequences without annotations (total 37239) in database 'supercraw5'SUPERCRAW5select count(targetid), targetsource from funnybasesequencesannotation group by targetsource ;+-----------------+--------------+| count(targetid) | targetsource |+-----------------+--------------+|              68 | refseq-dog   ||            3558 | refseq-human ||            3593 | refseq-mouse ||            1027 | refseq-rat   ||            4306 | swissprot    |+-----------------+--------------+FUNNYBASE7+-----------------+--------------+| count(targetid) | targetsource |+-----------------+--------------+|              36 | refseq-dog   ||            1453 | refseq-human ||            1753 | refseq-mouse ||             598 | refseq-rat   ||            4508 | swissprot    |+-----------------+--------------+FUNNYBASE8+-----------------+--------------+| count(targetid) | targetsource |+-----------------+--------------+|              54 | refseq-dog   ||            2215 | refseq-human ||             526 | refseq-mouse ||            1310 | refseq-rat   ||            5188 | swissprot    |+-----------------+--------------+6. GET 'best sequences' FROM supercraw5Total sequences         49791Unannotated sequences   37239Annotated sequences     12552Unique sequences         36687. COMPARE BLAST RESULTS BASED ON target_source, target_id - WHAT ARE THE COMMON GENES AND WHAT ARE THE OTHERS?Using:comparefunnybaseannotation.plSame sequence found: 1882Total 'funnybase7' sequences: 2522Total 'supercraw5' sequences: 3668The 'total ... sequences' represent the unique sequences found by clustering the assembled sequences according to best blast hit and then choosing 1) most 5-prime, 2) longest, 3) highest quality, in that order.Here is the output file:http://genomics.rsmas.miami.edu/downloads/funnybase7-supercraw5.compare.tsv+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++Hi Doug,>1:  are you blasting the contig or the "best sequence from the contig?I'm first blasting all of the contigs/singlets to get their annotation and then going through them to see which of them have the same database target hit (i.e., same target_id) as their best hit. These I consider a 'cluster of contigs' and I go through each cluster to see which is the 'best' sequence based on most 5-prime, length and quality, in that order.>2: below the bottom line:  are we doing the best job at annoating or>"where has the annotations gone"  please read the message below and>address all questions when I get back on Friday morning.I've been working on a way of at least comparing 'super_craw5' and 'funnybase7' today. I've taken all of the 'unique_est's from 'super_craw5' and am currently BLASTing them against our chosen databases (swissprot, refseq) with a cutoff of 1e-05. Tomorrow I'll make a 'set comparison' to see what is the 'join' between supercraw5 and funnybase8 and try to figure out any discrepancies.Here's the methodology I'm following (I'm currently running stage 5):supercraw5++++++++++1. select unique_est_id, is_contig, singlet_seqid, est_sequence from master_seq2_unique_est into outfile '/private/tmp/supercraw5.tsv';2. MOVED TO ~/FUNNYBASE/pipeline/supercraw5/edit_dir/supercraw5.tsv3. PARSED INTO FASTA FILE USING:supercraw5/supercraw5.tsv2fasta.pl69813 lines in .tsv file 59567 sequences added to fasta file (i.e., ~10,000 'unique_est's did not have sequences) 4. PARSED .FASTA FILE INTO assemblysequences TABLE OF NEW DATABASE 'supercraw5' (NB: ***NOT*** 'super_craw5') USING:supercraw5/fasta2assemblysequences.plWITH length cutoff = 50bpTotal sequences: 59567 records.Contigs added to 'assemblysequences' table: 13568Singlets added to 'assemblysequences' table: 36223Total sequences added to 'assemblysequences' table: 497915. BLAST AGAINST swissprot,refseq-human,refseq-rat,refseq-mouse,refseq-dog6. GET 'best sequences' FROM supercraw57. COMPARE BLAST RESULTS BASED ON target_source, target_id - WHAT ARE THE COMMON GENES AND WHAT ARE THE OTHERS?Btw, here are the sequence files for 'funnybase8' (same as funnybase7 except that the BLAST cutoff is lowered to 1e-05 from 1e-10):http://genomics.rsmas.miami.edu/downloads/funnybase8.annotatedsequences.tsvhttp://genomics.rsmas.miami.edu/downloads/funnybase8.uniquesequences.tsvhttp://genomics.rsmas.miami.edu/downloads/funnybase8.unknownsequences.tsvI'm also thinking we could maybe lower our quality value cutoff for including assembled sequences into the database as a way of increasing our number of sequences. Here's the original numbers and what passed through our filter:              assembled   filteredSinglets     24187      17516Contigs       1779          586Here are the parameters I used to filter assembled sequences before adding them to the database:# TRIM PARAMETERSmy $window_size = 30;		# bpmy $quality_cutoff = 20;	# phred score# ASSEMBLY PARAMETERSmy $length_cutoff = 50;     # minimum length of 'assemblysequences' sequence>1:  we need "real"/best GOOD annotations to compare to evolution and>protein annotations>2: you have to ask:  is the annotation scheme we are using>    A: proving the best annotations  (how would one know, how does it>compare to previous annotations, to TIGR)  That is,  how do you do good>science (empirically test your annotation scheme.    Providing rigorous>annotations should  be a high priority.   I also need to know that the>result are store and accessible to "untrained" scientist.  That is,>beyond doing good science for annotations, you need to think about how>other can readily access this results.I'd like to compare our latest assembly to TIGR's annotations, which are here:http://www.tigr.org/tigr-scripts/tgi/tc_ann.pl?db=fhesthttp://snhs-plin.barry.edu/Research/TIGR_Killifish_Gene_Index.htm>B:  provide annotations from separate database and synonym.  One of the>more important point of your Qual, was that different database give>different answer.>For example, previous we had STAR (steriogenic .... response),  we do not>have this gene name anymore.  What is it current name?  This is not>trivial because STAR is an important toxicology gene, yet it probably has>a new name.I'm working on building a synonym list from existing available lists and by compiling our own.Stuart.>From: dcrawford@rsmas.miami.edu>To: "stuart young" <youngstuart@hotmail.com>>Subject: Re: Annotations at BLAST cutoff 1e-05>Date: Tue, 7 Nov 2006 15:44:19 -0500 (EST)>>Stuart,>   Two messages:  1 in response to this message, one written this morning.>>1:  are you blasting the contig or the "best sequence from the contig?>2: below the bottom line:  are we doing the best job at annoating or>"where has the annotations gone"  please read the message below and>address all questions when I get back on Friday morning.>>dlc>>>>youngstuart@hotmail.com>>Stuart,>      You need to think critically about the annotations.>>1:  we need "real"/best GOOD annotations to compare to evolution and>protein annotations>2: you have to ask:  is the annotation scheme we are using>    A: proving the best annotations  (how would one know, how does it>compare to previous annotations, to TIGR)  That is,  how do you do good>science (empirically test your annotation scheme.    Providing rigorous>annotations should  be a high priority.   I also need to know that the>result are store and accessible to "untrained" scientist.  That is,>beyond doing good science for annotations, you need to think about how>other can readily access this results.>>B:  provide annotations from separate database and synonym.  One of the>more important point of your Qual, was that different database give>different answer.>For example, previous we had STAR (steriogenic .... response),  we do not>have this gene name anymore.  What is it current name?  This is not>trivial because STAR is an important toxicology gene, yet it probably has>a new name.>>MY POINT:  Take responsibility to do the best science to annotate Funny>EST and you will know more about the how and whys of annotation providing>you with a rare and worthwhile expertise.>>PLEASE, think about the results,  question their validity and provide a>mechanisms that people like me and your colleagues in my lab can visualize>and understand the output.>>dlc>>>>> > Hi Doug,> >> > Here's the breakdown of the annotated sequences using a BLAST cutoff of> > 1e-05:> >> > funnybase8> > +++++++> > Blast E-value cutoff	    1.00E-05> > Total sequences	            18102> > Unannotated sequences	8809> > Annotated sequences	  9293> > Unique sequences	   2853> >> > This is compared to the previous annotation I did using a BLAST cutoff of> > 1e-10:> >> > funnybase7> > +++++++> > Blast E-value cutoff	     1.00E-10> > Total all sequences          18102> > Unannotated sequences   9754> > Annotated sequences       8348> > Unique sequences           2522> >> > The 'unique sequences' are simply the best assembled sequences (most> > 5-prime, longest, highest quality) among the clusters of singlets/contigs> > that have their best hit against the same BLAST target sequences.> >> > Stuart.> >> > _________________________________________________________________> > Express yourself instantly with MSN Messenger! Download today it's FREE!> > http://messenger.msn.click-url.com/go/onm00200471ave/direct/01/> >>>>-->Douglas L. Crawford>Director Marine Genomics>Rosenstiel School of Marine & Atmospheric Science>Unversity of Miami>4600 Rickenbacker Cswy.>Miami, FL  33149>305-421-4121>dcrawford@rsmas.miami.edufunnybase9++++++++++DIFFERENT SEQUENCES FROM funnybase7 AND funnybase8 BECAUSE OF LOWER SEQUENCE AVERAGE QUALITY THRESHOLD (15 INSTEAD OF 20)TOTAL SEQUENCES: select count(*) from  blast_master_seq2_unique_est_swiss_prot    -> ;+----------+| count(*) |+----------+|     9636 |+----------+1 row in set (0.00 sec)funnybase8++++++++++Tue Nov  7 12:51:14 EST 2006NB: SAME SEQUENCES AS funnybase7Total sequences	18102Blast E-value cutoff	1.00E-05Unannotated sequences	8809Annotated sequences	9293Unique sequences	2853BLAST WITH E-VALUE 1E-05 (NOT 1E-10 AS IN funnybase7):use funnybase8;select count(*) from funnybaseblast;+----------+| count(*) |+----------+|  1967283 |+----------+select distinct targetsource from funnybaseblast;+--------------+| targetsource |+--------------+| refseq-dog   || refseq-human || refseq-mouse || refseq-rat   || swissprot    |+--------------+use funnybase7;select count(*) from funnybaseblast where targetsource!='funnybase7';+----------+| count(*) |+----------+|  1311281 |+----------+select distinct targetsource from funnybaseblast;+--------------+| targetsource |+--------------+| funnybase7   || refseq-dog   || refseq-human || refseq-mouse || refseq-rat   || swissprot    |+--------------+use funnybase7;Database changedmysql> select avg(length(sequence)) from funnybasesequences;+-----------------------+| avg(length(sequence)) |+-----------------------+|              372.3556 |+-----------------------+1 row in set (23.45 sec)mysql> select min(length(sequence)) from funnybasesequences;+-----------------------+| min(length(sequence)) |+-----------------------+|                    51 |+-----------------------+1 row in set (1.49 sec)funnybase7++++++++++Blast E-value cutoff	1.00E-10Total all sequences: 18102Unannotated sequences: 9754Annotated sequences: 8348Unique sequences: 2522 (by BLAST best hit target_id)MSG Doug Sun 1st Sept, 2006+++++++++++++++++++++++++++Hi Doug,Here's my summary of this past week:- Assembled and BLASTed 'funnybase7' - 126-159 experiments (not 127).- Completed SVG blast display, including SVG titles and drag-n-drop.- Did 'Plater' for funnybase7: http://genomics.rsmas.miami.edu/plater9/plater9.html - BLASTed the sequences (~20,000 in total) against 8 external databases:select count(distinct targetannotation), targetsource from funnybaseblast group by targetsource;+----------------------------------+---------------+| count(distinct targetannotation) | targetsource  |+----------------------------------+---------------+|                                1 | ensembl-human ||                           160303 | genbank       ||                            10365 | refseq-dog    ||                             7131 | refseq-human  ||                             6367 | refseq-mouse  ||                             5877 | refseq-rat    ||                            14970 | swissprot     ||                                1 | unigene-hydra |+----------------------------------+---------------+8 rows in set (5 min 12.88 sec)The BLASTs took a bit longer than I'd hoped but they finished yesterday. My goal for this week is to finish the web interface.- AJAX enable it (for fast and flexible use)- display one BLAST result for each database- click to download FASTA or TSV files- add updated pages: 'About', etc.- link to Plater and Fileseek for internal lab useAre you free at 2PM on Tuesday for our weekly 1/2 hour meeting?Stuart.FUNNYBASE7 funnybaseblast+++++++++++++++++++++++++(Sat 30 Sept, 2006)mysql> select count(distinct targetannotation), targetsource from funnybaseblast group by targetsource;+----------------------------------+---------------+| count(distinct targetannotation) | targetsource  |+----------------------------------+---------------+|                                1 | ensembl-human ||                           160303 | genbank       ||                            10365 | refseq-dog    ||                             7131 | refseq-human  ||                             6367 | refseq-mouse  ||                             5877 | refseq-rat    ||                            14970 | swissprot     ||                                1 | unigene-hydra |+----------------------------------+---------------+8 rows in set (5 min 12.88 sec)select count(distinct targetannotation), targetsource from funnybaseblast where hitevalueexp>-30 group by targetsource;+----------------------------------+---------------+| count(distinct targetannotation) | targetsource  |+----------------------------------+---------------+|                                1 | ensembl-human ||                           125329 | genbank       ||                             8370 | refseq-dog    ||                             5831 | refseq-human  ||                             5190 | refseq-mouse  ||                             4832 | refseq-rat    ||                            12958 | swissprot     |+----------------------------------+---------------+WHICH BLAST TO USE?+++++++++++++++++++Tues 26th Sept, 2006            WU-BLAST                       vs                  NCBI-BLAST            Higher e-value (check method)                                                            More commonly used (comparable)?            Faster            Multiple CPU on Mac                             Multiple CPU on Mac?            More sensitive (see below)?DECISION: For the time being, stick with WU-BLAST.select experiment, date, plate, well, targetannotation, hitevalueexp, querystart, querystop, querystop - querystart as length, blastapp from readsblast where blastapp='ncbi' and well='A01' and date='40904' group by experiment, date, plate, well, targetannotation, blastapp limit 10;+------------+-------+-------+------+---------------------+--------------+------------+-----------+--------+----------+| experiment | date  | plate | well | targetannotation    | hitevalueexp | querystart | querystop | length | blastapp |+------------+-------+-------+------+---------------------+--------------+------------+-----------+--------+----------+|        127 | 40904 |     2 | A01  | Actin               |          -39 |        469 |       816 |    347 | ncbi     ||        127 | 40904 |     2 | A01  | Actin (Fragment)    |          -38 |        469 |       816 |    347 | ncbi     ||        127 | 40904 |     2 | A01  | Actin 1             |          -39 |        469 |       816 |    347 | ncbi     ||        127 | 40904 |     2 | A01  | Actin 2             |          -40 |        469 |       816 |    347 | ncbi     ||        127 | 40904 |     2 | A01  | Actin 3             |          -34 |        469 |       816 |    347 | ncbi     ||        127 | 40904 |     2 | A01  | Actin 3-sub 2       |          -38 |        469 |       816 |    347 | ncbi     ||        127 | 40904 |     2 | A01  | Actin 54 (Fragment) |          -40 |        469 |       843 |    374 | ncbi     ||        127 | 40904 |     2 | A01  | Actin 75            |          -31 |        469 |       816 |    347 | ncbi     ||        127 | 40904 |     2 | A01  | Actin A             |          -37 |        472 |       816 |    344 | ncbi     ||        127 | 40904 |     2 | A01  | Actin B             |          -38 |        472 |       816 |    344 | ncbi     |+------------+-------+-------+------+---------------------+--------------+------------+-----------+--------+----------+10 rows in set (0.24 sec)mysql> select experiment, date, plate, well, targetannotation, hitevalueexp, querystart, querystop, querystop - querystart as length, blastapp from readsblast where blastapp='wu' and well='A01' and date='40904' group by experiment, date, plate, well, targetannotation, blastapp limit 10;+------------+-------+-------+------+------------------------------------------------------------------------------------------------+--------------+------------+-----------+--------+----------+| experiment | date  | plate | well | targetannotation                                                                               | hitevalueexp | querystart | querystop | length | blastapp |+------------+-------+-------+------+------------------------------------------------------------------------------------------------+--------------+------------+-----------+--------+----------+|        127 | 40904 |     1 | A01  | NADH-ubiquinone oxidoreductase B22 subunit (EC 1.6.5.3) (EC 1.6.99.3) (Complex I-B22) (CI-B22) |         -107 |         41 |       556 |    515 | wu       ||        127 | 40904 |     2 | A01  | Actin                                                                                          |          -56 |        816 |       469 |   -347 | wu       ||        127 | 40904 |     2 | A01  | Actin (Fragment)                                                                               |          -55 |        813 |       469 |   -344 | wu       ||        127 | 40904 |     2 | A01  | Actin 1                                                                                        |          -56 |        816 |       469 |   -347 | wu       ||        127 | 40904 |     2 | A01  | Actin 1 (Beta-actin)                                                                           |          -53 |        816 |       466 |   -350 | wu       ||        127 | 40904 |     2 | A01  | Actin 1/2                                                                                      |          -54 |        816 |       469 |   -347 | wu       ||        127 | 40904 |     2 | A01  | Actin 1/3                                                                                      |          -56 |        816 |       469 |   -347 | wu       ||        127 | 40904 |     2 | A01  | Actin 1/4                                                                                      |          -54 |        816 |       469 |   -347 | wu       ||        127 | 40904 |     2 | A01  | Actin 100 (Fragment)                                                                           |          -53 |        816 |       469 |   -347 | wu       ||        127 | 40904 |     2 | A01  | Actin 101                                                                                      |          -53 |        816 |       469 |   -347 | wu       |+------------+-------+-------+------+------------------------------------------------------------------------------------------------+--------------+------------+-----------+--------+----------+10 rows in set (0.27 sec)select experiment, date, plate, well, targetannotation, hitevalueexp, querystart, querystop, querystop - querystart as length, blastapp from readsblast where blastapp='wu' and well='A01' and date='40904' and plate = 1 group by experiment, date, plate, well, targetannotation, blastapp limit 10;+------------+-------+-------+------+------------------------------------------------------------------------------------------------+--------------+------------+-----------+--------+----------+| experiment | date  | plate | well | targetannotation                                                                               | hitevalueexp | querystart | querystop | length | blastapp |+------------+-------+-------+------+------------------------------------------------------------------------------------------------+--------------+------------+-----------+--------+----------+|        127 | 40904 |     1 | A01  | NADH-ubiquinone oxidoreductase B22 subunit (EC 1.6.5.3) (EC 1.6.99.3) (Complex I-B22) (CI-B22) |         -107 |         41 |       556 |    515 | wu       |+------------+-------+-------+------+------------------------------------------------------------------------------------------------+--------------+------------+-----------+--------+----------+1 row in set (0.24 sec)mysql> select experiment, date, plate, well, targetannotation, hitevalueexp, querystart, querystop, querystop - querystart as length, blastapp from readsblast where blastapp='ncbi' and well='A01' and date='40904' and plate = 1 group by experiment, date, plate, well, targetannotation, blastapp limit 10;Empty set (0.23 sec)pipeline 2 HAS THE FOLLOWING IMPROVEMENTS ON pipeline 1     1. One-step or multistep execution argument.    2. SNP prediction and DIV generatation.    3. Plates and platesdiv added for graphical plate check            TO DO:    1. Fix WU-Blast no error on Blastp using nucleotide query        pipeline2 CORRESPONDS TO THE FOLLOWING DATABASES:sandbox6	complete blast displaysandbox7	contig display    		optimised blast displaysandbox8    DATABASE: 127 (384 genes) but *** error with WU-BLAST blastx (became blastp) ***            Optimised speed by preprocessing BLAST output divssandbox9    AJAX-enabledplater5     AJAX plate view, fast access to data without reloading pageplater6     with or without 'date' (i.e., for 384 genes)            improved layout            simplified calling (most of work done by plater.cgi on server)plater7     Basic AJAX-enabled functionalityplater8     DATABASE: 127 (384 genes) but *** error with WU-BLAST blastx (became blastp) ***            Complete AJAX-enabled functionality:            1. Plate load at page startup            2. One-click callup of plate info            3. Select database, date or experiment to update list of platesplater9     See documentation in plater.htmlDATABASES AND ASSEMBLIES++++++++++++++++++++++++funnybase3  127funnybase4  151funnybase5  152funnybase6  159funnybase7  126,130,151-159CHANGES TO DATABASE TABLESalter table readsinfo change experimentdatetime datetime datetime;alter table readsinfo change experimentname experiment int(8) not null;alter table readsinfo change experimentdescription description text;alter table reads drop experimentdescription ;alter table reads change wellid well varchar(6) not null;alter table reads change platenumber plate int(11) not null;alter table reads change experimentname experiment int(8) not null;desc reads;+-----------------------+--------------+------+-----+---------+-------+| Field                 | Type         | Null | Key | Default | Extra |+-----------------------+--------------+------+-----+---------+-------+| experimentname        | varchar(20)  |      | PRI |         |       || plate                 | int(11)      |      | PRI | 0       |       || well                  | varchar(6)   |      | PRI |         |       || readnumber            | int(11)      |      |     | 0       |       || readsequence          | text         | YES  |     | NULL    |       || readquality           | text         | YES  |     | NULL    |       || averagereadquality    | decimal(4,2) | YES  |     | NULL    |       || screenedsequence      | text         | YES  |     | NULL    |       || trimmedsequence       | text         | YES  |     | NULL    |       || trimmedquality        | text         | YES  |     | NULL    |       || averagetrimmedquality | decimal(4,2) | YES  |     | NULL   +-----------------------+--------------+------+-----+---------+-------+11 rows in set (0.00 sec)desc readsinfo;+-------------+-------------+------+-----+---------+-------+| Field       | Type        | Null | Key | Default | Extra |+-------------+-------------+------+-----+---------+-------+| experiment  | int(8)      |      | PRI | 0       |       || description | text        | YES  |     | NULL    |       || datetime    | datetime    | YES  |     | NULL    |       || chemistry   | varchar(20) | YES  |     | NULL    |       || dye         | varchar(20) | YES  |     | NULL    |       |+-------------+-------------+------+-----+---------+-------+5 rows in set (0.00 sec)