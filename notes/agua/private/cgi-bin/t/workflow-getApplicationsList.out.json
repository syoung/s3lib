Content-type: text/html

Workflow::
Workflow::
Workflow::APPLICATIONS LIST:
Workflow::
Workflow::
[
          {
            'converter' : [
                             {
                               'outputs' : {},
                               'location' : 'bin/apps/eland2ace.pl',
                               'executor' : 'perl',
                               'name' : 'eland2ace.pl',
                               'inputs' : {},
                               'description' : 'Convert Eland output sorted.txt file into an .ace file',
                               'type' : 'converter',
                               'arguments' : {'referencefile':{'format':'fasta','required':true,'value':'/Project1/Workflow3-indels/CCDS_nucleotide.20080430.fa','args':['inputs.referencefile.value'],'option':'--referencefile','type':'directory','description':'/full/path/to/directory/containing/reference_sequences.2bpb, .idx and .vld files'},'inputfile':{'format':'eland-sorted','required':true,'value':'Project1/Workflow3-indels/s_6_150_sorted.txt','args':['inputs.sortedfile.value'],'option':'--inputfile','type':'file','description':'/full/path/to/eland_sorted.txt (output from Eland alignment)'}}
                             }
                           ]
          },
          {
            'pipeline' : [
                            {
                              'outputs' : {},
                              'location' : 'bin/apps/run-maq.pl',
                              'executor' : 'perl',
                              'name' : 'run-maq.pl',
                              'inputs' : {},
                              'description' : 'Alignment and SNP calling',
                              'type' : 'pipeline',
                              'arguments' : {'referencefile':{'params':'','format':'fasta,binaryFasta','required':true,'value':'','args':'inputs.referencefile.value','option':'--referencefile','type':'file','description':'Full path to reference file','paramFunction':''},'outputdir':{'params':'','format':'','required':true,'value':'','args':'inputs.outputdir.value','option':'--outputdir','type':'directory','description':'Full path to output directory','paramFunction':''},'inputfile':{'params':'','format':'fastq,binaryFastq','required':true,'value':'','args':'outputs.fastafile.value','option':'--inputfile','type':'file','description':'Full path to&nbsp;input file','paramFunction':''}}
                            },
                            {
                              'outputs' : {'makefile-error':{'params':'outputdir','format':'error','value':'Project1/Workflow3-indels/makefile.error','args':['arguments.outputdir.value'],'type':'file','paramFunction':'var file = outputdir + "/makefile.error"; return file;'},'makefile-out':{'params':'outputdir','format':'error','value':'Project1/Workflow3-indels/makefile.out','args':['arguments.outputdir.value'],'type':'file','paramFunction':'var file = outputdir + "/makefile.out"; return file;'},'sortedfile':{'params':'tiles, outputdir','format':'sorted','value':'Project1/Workflow3-indels/s_6_150_sorted.txt','args':['arguments.tiles.value','arguments.outputdir.value'],'type':'file','paramFunction':'var tilesArray = tiles.split(","); var sortedFiles = new Array; var sortedFiles = ""; for ( var i = 0; i < tilesArray.length; i++ ) {   sortedFile = tilesArray[i] + "_sorted.txt"; sortedFiles += outputdir + "/" + sortedFile + ","; } sortedFiles = sortedFiles.replace(/,$/, ""); return sortedFiles;'},'make-error':{'params':'outputdir','format':'error','value':'Project1/Workflow3-indels/make.error','args':['arguments.outputdir.value'],'type':'file','paramFunction':'var file = outputdir + "/make.error"; return file;'},'geraldfile':{'format':'text','value':'/run2lane6-test/geraldfile.txt','args':['arguments.geraldfile.value'],'type':'file'},'sequencefile':{'params':'tiles, outputdir','format':'sequence','value':'Project1/Workflow3-indels/s_6_150_sequence.txt','args':['arguments.tiles.value','arguments.outputdir.value'],'type':'file','paramFunction':'var tilesArray = tiles.split(","); var sequenceFiles = new Array; var sequenceFile = ""; for ( var i = 0; i < tilesArray.length; i++ ) {   sequenceFile = tilesArray[i] + "_sequence.txt"; sequenceFiles += outputdir + "/" + sequenceFile + ","; } sequenceFiles = sequenceFiles.replace(/,$/, ""); return sequenceFiles;'},'make-out':{'params':'outputdir','format':'error','value':'Project1/Workflow3-indels/make.out','args':['arguments.outputdir.value'],'type':'file','paramFunction':'var file = outputdir + "/make.out"; return file;'}},
                              'location' : 'bin/apps/image2eland.pl',
                              'executor' : 'perl',
                              'name' : 'image2eland.pl',
                              'inputs' : {'outputdir':{'value':'Project1/Workflow3-indels','args':['arguments.outputdir.value'],'type':'directory'},'readlength':{'value':'30','args':['arguments.readlength.value'],'type':'parameter'},'referencefile':{'format':'fasta','value':'/Project1/Workflow3-indels/CCDS_nucleotide.20080430.fa','args':['arguments.referencefile.value'],'type':'file'},'geraldfile':{'value':'/run2lane6-test/geraldfile.txt','args':['arguments.geraldfile.value'],'type':'parameter'},'rundir':{'value':'Project1/Workflow3-indels','args':['arguments.rundir.value'],'type':'directory'},'tiles':{'args':['arguments.tiles.value'],'type':'parameter'},'type':{'value':'single','args':['arguments.type.value'],'type':'parameter'}},
                              'description' : 'Process images into base calls with Bustard and align reads against reference sequence with Eland',
                              'type' : 'pipeline',
                              'arguments' : {'outputdir':{'format':'eland-sorted','required':true,'value':'Project1/Workflow3-indels','args':['inputs.outputdir.value'],'option':'--outputdir','type':'directory','description':'/full/path/to/eland_sorted.txt (output from Eland alignment)'},'readlength':{'format':'','required':false,'value':'30','args':['inputs.readlength.value'],'option':'--readlength','type':'parameter','description':'Run Eland with "--readlength" option (Boolean)'},'referencefile':{'format':'fasta','required':true,'value':'/Project1/Workflow3-indels/CCDS_nucleotide.20080430.fa','args':['inputs.referencefile.value'],'option':'--referencefile','type':'file','description':'/full/path/to/reference fasta file'},'geraldfile':{'format':'gerald','required':true,'value':'/run2lane6-test/geraldfile.txt','args':['inputs.geraldfile.value'],'option':'--geraldfile','type':'file','description':'/full/path/to/eland_sorted.txt (output from Eland alignment)'},'rundir':{'format':'eland-sorted','required':true,'value':'Project1/Workflow3-indels','args':['inputs.rundir.value'],'option':'--rundir','type':'file','description':''},'tiles':{'format':'','required':false,'value':'s_6_150','args':['inputs.tiles.value'],'option':'--tiles','type':'parameter','description':'Process images for these tiles only'},'type':{'required':true,'value':'single','args':['inputs.type.value'],'option':'--type','type':'parameter','description':'Either single or paired reads'}}
                            },
                            {
                              'outputs' : {},
                              'location' : 'bin/apps/miniMAQ.pl',
                              'executor' : 'perl',
                              'name' : 'miniMAQ',
                              'inputs' : {},
                              'description' : 'Aligns against a reference sequence and predicts SNPs.',
                              'type' : 'pipeline',
                              'arguments' : {'inputfile':{'params':'','format':'fasta, binaryFasta','required':true,'value':'','args':'','option':'--inputfile','type':'file','description':'Full path to "input" file','paramFunction':''},'outputdir':{'params':'','format':'','required':true,'value':'','args':'','option':'--outputdir','type':'directory','description':'Full path to output directory','paramFunction':''},'referencefile':{'params':'','format':'fasta','required':true,'value':'','args':'','option':'--referencefile','type':'file','description':'Full path to reference sequence file','paramFunction':''}}
                            }
                          ]
          },
          {
            'utility' : [
                           {
                             'outputs' : {},
                             'location' : 'bin/apps/splitace.pl',
                             'executor' : 'perl',
                             'name' : 'replaceString.pl',
                             'inputs' : {},
                             'description' : 'Convert .ace file into multiple ace files',
                             'type' : 'utility',
                             'arguments' : {'outputdir':{'params':'acefile','format':'inputfile','required':false,'value':'Project1/Workflow3-indels','args':['inputs.acefile.value'],'option':'-o','type':'directory','description':'/full/path/to/directory/containing/reference_sequences.2bpb, .idx and .vld files','paramFunction':'var outputdir = acefile; outputdir = outputdir.replace(/\\\\\\\\/[^\\\\/]+$/, ""); return outputdir;'},'inputfile':{'format':'ace','required':true,'value':'Project1/Workflow3-indels/s_6_150_sorted.ace','args':['inputs.acefile.value'],'option':'-i','type':'file','description':'/full/path/to/input_file'}}
                           },
                           {
                             'outputs' : {},
                             'location' : 'bin/apps/splitace.pl',
                             'executor' : 'perl',
                             'name' : 'splitace.pl',
                             'inputs' : {},
                             'description' : 'Convert .ace file into multiple ace files',
                             'type' : 'utility',
                             'arguments' : {'outputdir':{'params':'acefile','format':'inputfile','required':false,'value':'Project1/Workflow3-indels','args':['inputs.acefile.value'],'option':'-o','type':'directory','description':'/full/path/to/directory/containing/reference_sequences.2bpb, .idx and .vld files','paramFunction':'var outputdir = acefile; outputdir = outputdir.replace(/\\\\\\\\/[^\\\\/]+$/, ""); return outputdir;'},'inputfile':{'format':'ace','required':true,'value':'Project1/Workflow3-indels/s_6_150_sorted.ace','args':['inputs.acefile.value'],'option':'-i','type':'file','description':'/full/path/to/input_file'}}
                           }
                         ]
          }
        ]